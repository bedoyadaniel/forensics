{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"index.html","title":"Documentation repository on consensual digital forensics for the defense of Human Rights","text":"<p>This is a technical documentation repository whose main objective is to establish a baseline of proven, flexible and accessible knowledge to boost consensual forensic analysis in support of civil society across the globe. The development of this repository is overseen by the civil society organization SocialTIC.</p> <p>Digital forensics makes possible the discovery and examination of digital data and media with the goal of identifying, documenting and interpreting data to construct and present reproducible evidence of digital attacks. In this repository we describe standard procedures, aligned with industry best practices, to generate evidence that can be used to to promote accountability actions, in order to reduce and expose the impunity with which digital attacks are carried out. </p> <ul> <li> <p> Not sure where to start?</p> <p>If you want to learn more about this repository check our getting started section.</p> <p> Start here</p> </li> </ul>","tags":["indice","home"]},{"location":"index.html#published-contents","title":"Published contents","text":"<p>To organize the contents, we use the technical documentation framework Di\u00e1taxis. Accordingly, we have organized the contents in the following categories: </p> <ul> <li> <p> Explainers</p> <p>Explainers deepen and broaden the reader\u2019s understanding of a subject. They brings clarity, light and context. </p> <p>   Index of explainers</p> </li> <li> <p> How-To Guides</p> <p>How-to\u2019s are all about executing a task and achieving a goal through step-by-step instructions.</p> <p>   Index of how-to guides</p> </li> <li> <p> Tutorials</p> <p>Tutorials are all about learning through guided practical exercises. </p> <p>   Index of tutorials</p> </li> <li> <p> References</p> <p>Reference material describes the machinery. One hardly reads reference material; one consults it. </p> <p>   Index of references</p> </li> </ul>","tags":["indice","home"]},{"location":"getting-started.html","title":"Getting started","text":"2025-07-242025-07-24","tags":["indice","intro"]},{"location":"getting-started.html#what-is-this-documentation-repository","title":"\u00bfWhat is this documentation repository?","text":"<p>This is a technical documentation repository whose main objective is to establish a baseline of proven, flexible and accessible knowledge to boost consensual forensic analysis in support of civil society across the globe. To organize the contents, we use the technical documentation framework Di\u00e1taxis. </p> <p>Digital forensics makes possible the discovery and examination of digital data and media with the goal of identifying, documenting and interpreting data to construct and present reproducible evidence of digital attacks. In this repository we describe standard procedures, aligned with industry best practices, to generate evidence that can be used to to promote accountability actions, in order to reduce and expose the impunity with which digital attacks are carried out. </p>","tags":["indice","intro"]},{"location":"getting-started.html#who-is-this-repository-for","title":"\u00bfWho is this repository for?","text":"<p>The information included in this repository can be useful to individuals with different profiles, including: </p> <ul> <li>Contact points and intermediaries (individuals with basic technical competences)   </li> <li>Security incident handlers for civil society  </li> <li>Threat lab analysts  </li> <li>Managers and coordinators of threat labs</li> </ul> <p>We expect that any person with a basic technical capacity can follow resources in this repository to understand key concepts of consensual forensic analysis, as well as procedures to identify and acquire forensic evidence. </p> <p>The resources focused on the analysis of evidence and presentation of results are geared towards forensic analysts, specially those within emerging or established threat labs, since they require additional technical competencies and a well-thought risk management plan. </p>","tags":["indice","intro"]},{"location":"getting-started.html#how-is-this-repository-organized","title":"\u00bfHow is this repository organized?","text":"<p>To organize this repository we follow the technical documentation framework Diataxis, that defines four different types of resources: tutorials, how-to\u2019s, explainers and references. </p> <ul> <li> <p> Explainers</p> <p>Explainers deepen and broaden the reader\u2019s understanding of a subject. It brings clarity, light and context. Explainers intention is to be theoric learning resources, to improve the understanding of a given subject. They focus on a defined scope of a larger topic, and usually help understand the \u201cwhy\u201d. </p> <p>For example, the first explainer included in this documentation repository presents information about the larger forensic science field, and how consensual digital forensics for civil society fit in the larger scheme of things while also touching on the importance as a mechanism for accountability.</p> <p>   Index of explainers</p> </li> <li> <p> How-To Guides</p> <p>How-to\u2019s are all about executing a task and achieving a goal through step-by-step instructions. It assumes that the reader already has the baseline skills and knowledge necessary to complete the task, and hence, focuses on the steps necessary to achieve the desired outcome in a correct way and aligned to best practices. </p> <p>A good example is a cooking recipe, where the focus is to achieve a result, in this case preparing a specific dish in a repeatable way. It assumes the person already has basic knowledge on aspects like cutting and measuring the ingredients, setting the oven temperature, etc. </p> <p>   Index of how-to guides</p> </li> <li> <p> Tutorials</p> <p>Tutorials are all about learning through guided practical exercises. In other words, it's learning by doing. Tutorials allow the reader to acquire skills and knowledge, and are focused on learning and not on completing a specific task. </p> <p>An example of a tutorial is a car driving lesson. Usually, in a good driving lesson students familiarize themselves with the vehicle, the controls, and learn as they go. The objective is not getting from going A to point B, instead is the skills you learn in the way. </p> <p>   Index of tutorials</p> </li> <li> <p> References</p> <p>LReference material describes the machinery. It should be austere. One hardly reads reference material; one consults it. There should be no doubt or ambiguity in reference; it should be wholly authoritative. Reference contains technical knowledge that can be helpful when executing a task. </p> <p>A good example of a reference is a map. It is a clear, neutral and precise resource that serves as support when completing a task, in this case getting from point A to point B.</p> <p>   Index of references</p> </li> </ul>","tags":["indice","intro"]},{"location":"getting-started.html#how-to-navigate-this-documentation-repository","title":"\u00bfHow to navigate this documentation repository?","text":"<p>In alignment with Diataxis, we should first identify the need or the goal we have when consulting the documentation, so that we are pointed to the right type of resource to respond to that need. </p> <p>More concretely: </p> <ul> <li>If the objective is to acquire skills and knowledge, then check the tutorials.   </li> <li>If the objective is to improve the understanding of a given subject, check the explainers.   </li> <li>If the objective is to apply skills to achieve a specific task, then check the how-to guides.   </li> <li>If the objective is to obtain descriptive information of concepts or tools when trying to complete a task, check the references. </li> </ul> <p>As we continue to include content in this repository, we will define learning pathways that allow readers to obtain the necessary knowledge and skills to complete tasks across the different phases of a forensic investigation. </p>","tags":["indice","intro"]},{"location":"getting-started.html#how-to-collaborate-with-this-repository","title":"\u00bfHow to collaborate with this repository?","text":"<p>All materials published in this repository are part of a collective effort to support the civil society forensic analysis community. As such, we are thankful for any effort from individuals or organizations to share, improve and contribute to the development of this resource, including through actions like replicating, verifying and extending resources and methodologies. </p> <p>If you are interested in collaborating, or believe there are additional resources that can be added to this repository to strengthen the forensic practice of civil society, please let us know. You can find more information in the community page of this repository. </p> <p>Comunidad</p>","tags":["indice","intro"]},{"location":"roadmap.html","title":"Roadmap","text":"2025-02-012025-09-01 <p>This resource presents the main considerations to determine the order of development and publication priority of contents. It also includes a list of additional materials planned for future development.</p>","tags":["index","intro"]},{"location":"roadmap.html#publication-strategy","title":"Publication strategy","text":"<p>As an initial priority, the contents of this repository will address the need to triage of potentially compromised devices, including through the extraction and collection of digital evidence in consent-based scenarios. Additionally, we will prioritize the development of guides and skills for Android devices, given their prevalence across the global majority.</p> <p>Later on,  our intention is to include contents that strengthen and advance analysis capacities**, particularly for emerging laboratories.</p> <p>While a strategic content roadmap is outlined, we will maintain flexibility to adjust and include additional materials, especially when these arise from collaborations with counterparts to address specific needs.</p> <p>Regarding language, most contents will be written first in Spanish, and we aim to make them available in English as well. Together with counterparts, we may collaborate to add additional languages. We thank in advance the efforts made in reviewing and translating contents.</p> <p>For more information, you can get in contact at seguridad@socialtic.org</p>","tags":["index","intro"]},{"location":"roadmap.html#additional-contents-to-be-developed","title":"Additional contents to be developed","text":"<p>Over the coming months, we expect to publish contents in the following topics:</p> <ul> <li>How to identify suspicious apps through the graphic interface of an Android device? </li> <li>Managing evidence and data during a forensic investigation </li> <li>Triage of an Android device using AndroidQF and MVT </li> <li>Triage of an Android device using bugreport and MVT</li> <li>Dictionary of files generated by mvt-androidqf </li> <li>Vectors and type of mobile malware attacks observed in civil society </li> <li>Common Android artifacts </li> <li>Analysis for malicious apps on Android </li> <li>Manual analysis of logs   </li> <li>Vulnerability analysis on Android An\u00e1lisis de vulnerabilidades on Android</li> </ul>","tags":["index","intro"]},{"location":"roadmap.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["index","intro"]},{"location":"community/index.html","title":"Community on consensual forensics for the defense of human rights","text":"2025-07-152025-07-15 <p>This repository aims to promote consensual forensic analysis within civil society for the defense of human rights through proven, flexible, and accessible knowledge generated by an entire community of practice. For over a decade, organizations such as Citizen Lab and the Electronic Frontier Foundation (EFF) have applied forensic science in consensual environments to uncover the use of surveillance technologies against at-risk individuals in civil society.</p> <p>In recent years, new initiatives have emerged seeking greater accountability for digital attacks. Organizations from the Global North\u2014such as Amnesty International, Access Now, Reporters Without Borders, among others\u2014have launched their own forensic labs. At the same time, labs in the global majority have also exposed abuses against civil society. Many of these labs come together in networks like CiviCERT or regional communities.</p> <p>We believe it is essential to encourage and support more organizations in integrating forensic science into their investigation and incident response efforts. At the same time, we understand that completing a forensic analysis that results in accountability actions requires a minimum level of operational maturity and technical capability. This repository seeks to collect, share, and promote this knowledge, especially among labs in the Global Majority, in order to build a solid and common foundation that fosters practical collaborations.</p> <p>It is important to note that theoretical and practical knowledge is just one of the many elements required to produce a solid technical analysis. In addition, it is necessary to establish a relationship of trust with affected individuals, implement strong procedures (such as those related to informed consent), understand risks, foster collaboration, and follow good operational security practices, among others.</p> <p>Developing these skills and capacities takes time and resources, which are often limited within civil society, specially in the global majority. This is why collaboration and working together are the best tactics to exchange knowledge and experiences. If you are a civil society organization and are interested in integrating forensic processes into your work\u2014or in investigating the possible use of surveillance technologies in your region\u2014you can contact us at seguridad@socialtic.org to discuss important considerations and identify the best way to strengthen your capacities.</p>","tags":["community","intro"]},{"location":"community/code-of-conduct.html","title":"Community on consensual forensics for the defense of human rights","text":"2025-07-152025-07-15 <p>This repository adopts the following Code of Conduct, based on the SocialTIC team\u2019s code of conduct. Its purpose is to ensure a respectful, safe, and inclusive environment for all individuals interacting with this project, both in digital and in-person spaces.</p> <p>You can consult the code of conduct in Spanish by clicking here. </p>","tags":["community","intro"]},{"location":"community/contributors.html","title":"Contributors","text":"2025-09-052025-09-05 <p>This repository collects knowledge and information from a community of practice. SocialTIC leads the development and presentation of the repository, but we rely on the contribution of many partners to co-develop, complete, review and translate the contents.   </p> <p>We are grateful for any and all contributions, and below we acknowledge and consolidate the contributions received so far. We only list contributors who have acknowledged to be mentioned publicly.   </p> <p>Any error or misrepresentation on any resource remains the responsibility of the authors.</p> Name Affiliation Role Resource Gurshabad Grover Internet Research Lab Co-Author Explainer: Risks, threats and mitigations for forensic labs supporting Human Rights Defenders Natalia Krapiva Access Now Reviewer Explainer: Risks, threats and mitigations for forensic labs supporting Human Rights Defenders Thomas Kaye Access Now Reviewer Explainer: Risks, threats and mitigations for forensic labs supporting Human Rights Defenders Marianne Parrott Amnesty International Security Lab Translator Explainer: Risks, threats and mitigations for forensic labs supporting Human Rights Defenders Molly Cyr Amnesty International Security Lab Reviewer Explainer: Risks, threats and mitigations for forensic labs supporting Human Rights Defenders Priscilla Ruiz Art\u00edculo 19 Reviewer How to obtain and document informed consent during a forensic investigation? Natalia Krapiva Access Now Reviewer How to obtain and document informed consent during a forensic investigation? N/A RSF Security Lab Contribute source screenshots How to enable developer options on an Android device? N/A RSF Security Lab Contribute source screenshots How to enable ADB on and Android device? N/A RSF Security Lab Contribute source screenshots How to extract a bugreport from an Android device? Marianne Parrott Amnesty International Security Lab Translator AndroidQF output file dictionary","tags":["community","intro"]},{"location":"community/how-to-contribute.html","title":"How to collaborate with this repository?","text":"2025-07-152025-07-15 <p>This repository is currently hosted on GitHub, and therefore there are two main ways to make direct contributions to this repository: </p> <ul> <li> <p>Issues: Issues are reports or requests related to the content of the repository. Examples of issues include spelling errors, broken links, improvements in wording, among others. You do not need to be familiar with GitHub, Markdown, or the content structure to report an issue. Reported issues will receive a response from the repository owners. </p> </li> <li> <p>Pull request: Pull requests are integration requests where changes to the repository are proposed, often to improve, correct, or expand its content. Pull requests are reviewed by the project team and, if deemed appropriate, will be approved and included in the public version of the repository.</p> </li> </ul>","tags":["community","intro"]},{"location":"community/how-to-contribute.html#reporting-issues","title":"Reporting issues","text":"<p>If you find any errors or have suggestions for improvements, you can open an issue in the repository by following this link. Through the issue, it\u2019s possible to suggest, discuss, and implement changes and improvements to the content. It doesn\u2019t matter if the error is minor, such as a spelling mistake\u2014we love receiving improvement reports.</p> <p>When opening an issue, please use the format described in the issue template document, which will load automatically when you try to open a new issue in the repository as shown on figure 1.</p> <p></p> <p>figure 1. Issue tab in forensics repository, to start a new issue click on the green button that says \u201cNew Issue\u201d on the top right hand side of the web interface of GitHub.</p> <p>When you click, you will have the option to use the pre-loaded template or start from a blank issue. We advise you to use the template, and remove whatever is not relevant, as shown on figure 2. </p> <p></p> <p>figure 2. Issue tab in forensics repository, to start a new issue click on the green button that says \u201cNew Issue\u201d on the top right hand side of the web interface of GitHub.</p> <p>When using the issue template, a new window will open where you will be able to edit the issue and complete accordingly. If there are fields or sections that are not relevant, you can remove them. Try to be as complete and clear as possible. You can see an example on figure 3. </p> <p> </p> <p>figure 3.  Example of new issue form using the preloaded template in the repository forensics.</p>","tags":["community","intro"]},{"location":"community/how-to-contribute.html#integrating-new-content-through-pull-requests","title":"Integrating new content through pull requests","text":"<p>You can suggest changes and improvements to the repository directly through a pull request following these steps: </p> <p>Setep 1.: Using your own GitHub account (or an organizational one if preferred), make a fork of the repository.   </p> <p>Recomendation</p> <p>You can fork the repository from the web interface directly on the repository GitHub site, clicking on the \u201cfork\u201d button on the top of the interface as shown on figure 4. </p> <p></p> <p>figure 4. Web interface of the forensics repository, highlighting the fork tab.</p> <p>Step 2. Once you generate a fork, you will have a copy of the repository in your own account. From this fork, it is possible to create new branches where you can directly change and adjust as deemed necessary.   </p> <p>Recomendation</p> <ul> <li>Please use descriptive names for your branches, for example \u201cfix-guide-acquisition\u201d, \u201cadd-tutorial-analyzing-mvt-bugreport  </li> <li>You can create branches directly from the GitHub web interface clicking on the \u201cbranches\u201d tab as shown on figure 5. </li> </ul> <p> </p> <p>figure 5. Web interface of the forked GitHub repository, highlighting the branches tab</p> <p>From the branches tab it is possible to create a new branch inside your fork of the repository, as shown in figure 6.</p> <p> </p> <p>figure 6 Web interface of the forked GitHub repository, highlighting the new branch button.</p> <p>Step 3. Implement your changes, making clear commits, detailing what exactly you're modifying. Figure 7 shows an example of a commit on the web interface.    </p> <p>Recomendation</p> <ul> <li>You can check the official GitHub recommendations for commits.   </li> <li>When you make changes using the web interface, you will receive a confirmation message asking in what branch you want to record your changes. Select the new branch you created. </li> </ul> <p></p> <p>figure 7. Web interface of a commit message on GitHub for the repository forensics.</p> <p>Step 4. Once you have made the changes, you can open a pull request to ask the maintainers to implement these changes for the main repository.   </p> <p>Recomendation</p> <ul> <li>Please follow the pull request template, remove or use N/A when a section is not applicable.   </li> <li>You can submit a pull request through the GitHub web interface. Usually when you record a change in a branch on a forked repository, you will see a pop-up option to create a new pull request as shown in figure 8.</li> </ul> <p></p> <p>figure 8. Web interface of a forked repository after a commit, where an option to create a new pull request appears.</p> <p>When you click on this option, you will have the opportunity to edit and submit your pull request as shown in figure 9. </p> <p></p> <p>imagen 9. Web interface of a pull request on GitHub, the template is pre-loaded when creating a new pull request. </p> <p>Once changes are revised and accepted, you will see the result as shown in figure 10. This means that changes have been applied and they should be visible when visiting forensics.socialtic.org.  </p> <p></p> <p>figure 10. Web interface of a pull request on GitHub, showing the approval and implementation of a request.</p>","tags":["community","intro"]},{"location":"community/how-to-contribute.html#additional-resources","title":"Additional resources","text":"<p>We also welcome additional resources that can help strengthen forensic practice within civil society, even if they do not follow the Di\u00e1taxis framework. Depending on the content, these contributions can be shared in their original form within the community resources section or collaboratively adapted to fit the framework.</p> <p>For this type of collaboration, you can contact us at: seguridad@socialtic.org</p>","tags":["community","intro"]},{"location":"community/language-guide-en.html","title":"Best practices for contributions","text":"2025-07-152025-07-15 <p>Please follow the guidelines below when writing or adding resources to this repository: </p> <ul> <li>Use markdown descriptive language for document writing    </li> <li>Page names should be set in low caps and with hyphens instead of spaces. Do not use special characters for file names.</li> </ul> <p>To highlight informative elements, warnings, errors or confirmation messages please use text blocks as follow: </p> <pre><code>!!! success \"Best practice\" \n    Confirmation blocks in green should be used to highlight best practices. \n</code></pre> <p>Best practice</p> <p>Confirmation blocks in green should be used to highlight best practices. </p> <pre><code>!!! warning \"Alternative\"\n    Yellow warning blocks should be used to mention a different route to achieve a similar result (this is especially helpful for how-to guides)\n</code></pre> <p>Alternative</p> <p>Yellow warning blocks should be used to mention a different route to achieve a similar result (this is especially helpful for how-to guides)</p> <pre><code>!!! failure \"Error\"\n    Error blocks in red should be used to explain troubleshooting hints or alternative paths to follow to overcome an error. \n</code></pre> <p>Error</p> <p>Error blocks in red should be used to explain troubleshooting hints or alternative paths to follow to overcome an error. </p> <pre><code>!!! abstract \"Consideraci\u00f3n Legal\"\n    El bloque de informaci\u00f3n (azul) se utiliza para resaltar consideraciones legales\n</code></pre> <p>Legal consideration</p> <p>The blue block is used to highlight legal considerations. </p>","tags":["community","intro"]},{"location":"community/license.html","title":"License of contents","text":"2025-07-152025-07-15 <p>This repository adopts the MVT license. You can consult the license here. The purpose and a description of the license are included below.</p> <p>The purpose of MVT is to facilitate the consensual forensic analysis of devices of those who might be targets of sophisticated mobile spyware attacks, especially members of civil society and marginalized communities. We do not want MVT to enable privacy violations of non-consenting individuals. Therefore, the goal of this license is to prohibit the use of MVT (and any other software licensed the same) for the purpose of adversarial forensics.</p> <p>In order to achieve this, MVT is released under an adaptation of Mozilla Public License v2.0. This modified license includes a new clause 3.0, \"Consensual Use Restriction\" which permits the use of the licensed software (and any \"Larger Work\" derived from it) exclusively with the explicit consent of the person/s whose data is being extracted and/or analysed (\"Data Owner\").</p> <p>Read the LICENSE</p>","tags":["community","intro"]},{"location":"community/limitation-of-responsibility.html","title":"Limitation of reponsibilities","text":"2025-07-152025-07-15 <p>This project is focused on strengthening consensual forensic analysis capabilities in high-risk civil society contexts. Consequently, contributions will not be accepted if they:</p> <ul> <li>Include functionalities that violate digital rights </li> <li>Introduce code that jeopardizes the integrity or privacy of sensitive data </li> <li>Create ambiguities concerning the intended use of the tool  </li> <li>Introduce undocumented tools or tools with legal implications without sufficient context</li> </ul>","tags":["community","intro"]},{"location":"community/translations-localization-l10n.html","title":"Additional translation and localization efforts","text":"2025-07-152025-07-15 <p>At SocialTIC, we understand the importance of maintaining resources that are accessible, easy to read, and capable of having an impact on communities with different technical capacities and from multiple regions around the world. Due to our expertise and geographical location, our resources will often be available first in Spanish, and the necessary resources will be allocated afterward to translate them into English. If you are interested in collaborating on translations from Spanish to English\u2014or vice versa\u2014please contact us at: seguridad@socialtic.org.</p> <p>If you are interested in translating the repository's content into a new language, we kindly ask that you notify us by opening a new issue or by contacting us directly at seguridad@socialtic.org. While we strongly agree on the importance of localization, there are a few key considerations before starting a translation:</p> <ul> <li>Capacity and sustainability: Translating and localizing content is hard work. At SocialTIC, we deeply appreciate any effort to promote consensual forensic analysis among vulnerable populations, especially in the global majority. However, before beginning a translation, we recommend evaluating the medium- and long-term sustainability of the effort. This helps ensure that new communities accessing these materials will have access to content with a minimum level of continuity and maintenance.  </li> <li>Content review: In our experience, it is ideal to have a second person conduct a review in addition to the initial translation. If you are unable to identify someone to review your translation, feel free to reach out to us\u2014we can help coordinate support.  </li> <li>Updates and maintenance: Our vision is for this repository to grow and evolve continuously. We expect the first few years to be the most intense in terms of producing triage and acquisition materials, followed by more specialized content.  </li> <li>Style guidelines: We recommend creating a short style guide that includes considerations such as the use of anglicisms, inclusive language, and other key decisions.  </li> <li>Usage license: This repository extends the MVT license to support and encourage consensual forensic analysis.</li> </ul>","tags":["community","localization","translation"]},{"location":"community/translations-localization-l10n.html#content-structure","title":"Content Structure","text":"<p>The repository is structured to support translations into new languages. In general, content across all languages is organized in the following way:</p> <pre><code>docs/\nen/\nexplainers/\nhow-tos/\nreferences/\ntutorials/\ncommunity/\nindex.md\nes/\nexplainers/\nhow-tos/\nreferences/\ntutoriales/\ncomunidad/\nindex.md\n</code></pre> <p>Additionally, each new piece of content will have its own corresponding folder, which contains a Markdown file with the content. For example, the explainer titled \"Introduction to Consensual Digital Forensics for the Defense of Human Rights\" is organized as follows in both English and Spanish:</p> <pre><code>es/\nexplainers/\n01-explainer-introduccion-forense-digital/\n01-explainer-introduccion-forense-digital.md\nen/\n    explainers/\n        01-explainer-introduction-digital-forensics/\n            01-explainer-introduction-digital-forensics.md\n</code></pre> <p>Before starting a translation, we recommend exploring the content folders and reaching out with any questions. It is also advised to review the style guidelines for file naming, which are included as part of the repository\u2019s contribution best practices.</p> <p>To contribute translations directly to the repository, please follow the instructions outlined in the pull requests or integration requests section.</p>","tags":["community","localization","translation"]},{"location":"community/why-support.html","title":"Community - Supporting this effort","text":"2025-07-152025-07-15 <p>This repository tries to collect knowledge and experiences of an entire community of practice. The development of contents is led by the civil society organization SocialTIC, but the intention is that the materials accurately reflect the techniques and practices of analysts and researchers in the field; focusing throughout on particularities and considerations of applying forensics for the defense of human rights.  Gathering and maintaining these collective learnings up to date requires a collective effort that, coincidentally, helps align the contents with the actual needs of the communities who consult them. </p> <p>Through community contributions, we can:</p> <ul> <li>Detect, discuss and correct mistakes, gaps or omissions </li> <li>Update content to reflect new versions of tools or operating systems  </li> <li>Suggest new topics, resources or structure learning paths  </li> <li>Translate, localize or adapt materials to field needs  </li> <li>Strengthen the project\u2019s documentation and accessibility</li> </ul> <p>Sharing and generating knowledge to catalyze the use of digital technologies\u2014including their application to forensic science\u2014is part of SocialTIC\u2019s mission. This repository complements other capacity building activities we\u2019ve carried out, where we have identified the need to provide additional resources to support the learning and application of forensic techniques.</p> <p>Despite some valuable efforts in recent years, existing resources to train forensic analysts in civil society are still insufficient to meet the needs of at-risk communities\u2014especially for labs in the global majority. This limitation, combined with the procedural and technical complexity of a forensic investigation, means that the vast majority of digital security incidents affecting Human Rights Defenders get no accountability at all. </p> <p>Beyond these technical and procedural challenges, and in light of the difficult global context, at SocialTIC we believe that collaboration can empower helplines, analysts, trainers and digital security contacts with foundational knowledge that enables them to navigate the initial stages of a forensic investigation while adhering to best practices. Strengthening this baseline will foster deeper collaboration with more mature forensic laboratories, which in turn will positively impact the long-term ability to produce independent technical analysis.</p>","tags":["community","intro"]},{"location":"explainers/index.html","title":"Explainers","text":"<p>In this section you will find explainers. According to Diataxis documentation framework explainers deepen and broaden the reader\u2019s understanding of a subject. It brings clarity, light and context. Explainers intention is to be theoric learning resources, to improve the understanding of a given subject. They focus on a defined scope of a larger topic, and usually help understand the \u201cwhy\u201d. </p>","tags":["index","explainer"]},{"location":"explainers/index.html#index-of-explainers","title":"Index of explainers","text":"<ul> <li> <p> Introduction to consensual forensics</p> <p>Describes key concepts about digital forensics, including a definition, the different stages of a forensic investigation and a description of how forensic science can be applied for the defense of Human Rights. </p> <p> Introduction to consensual forensics for the defense of Human Rights</p> </li> <li> <p> Risks, threats and mitigations for forensic labs</p> <p>Describes risks, threats and vulnerabilities for forensic analysts and threat laboratories supporting civil society. It is an introductory material that includes examples and links to resources that can help these groups to understand and mitigate risks they might encounter as part of their analysis and accountability work.</p> <p> Risks, threats and mitigations for forensic labs supporting Human Rights Defenders</p> </li> <li> <p> Introduction to log-based forensics on Android devices</p> <p>Presents an introduction to log-based forensics for Android devices, including a definition of log-based forensics, a comparison with other types of forensic analysis and some use cases. </p> <p> Introduction to log-based forensics on Android devices</p> </li> </ul>","tags":["index","explainer"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html","title":"Explainer - Introduction to consensual forensics for the defense of Human Rights","text":"2025-02-132025-02-13 <p>This document is part of a technical documentation repository whose main objective is to establish a baseline of proven, flexible and accessible knowledge to boost consensual forensic analysis in support of civil society across the globe. To organize the contents, we use the technical documentation framework Di\u00e1taxis. </p> <p>This particular resource fits within the explanation category in Diataxis. It describes key concepts about digital forensics, including a definition, the different stages of an investigation and a description of how forensic science can be applied for the defense of Human Rights. This is an introductory material that tries to set a baseline understanding of key concepts in relation to consensual digital forensics, and that is complementary to other resources in this repository including how-to guides, tutorials and references. </p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#what-is-digital-forensics-and-why-is-it-important","title":"What is digital forensics and why is it important?","text":"<p>Digital forensics relates to the process used for the collection, preservation, analysis and presentation of digital evidence, derived from electronic media and devices, using data management best-practices, investigation techniques and the scientific method to arrive at sound and reproducible conclusions that can be admitted as evidence in judicial proceedings.  </p> <p>Digital Forensics is used to discover and examine digital media with the objective of identifying, recovering, documenting and interpreting digital information and how it is connected with digital attacks. When aligned with standard procedure and best practices, it allows for the documentation of useful evidence that can then be used for accountability and advocacy initiatives, that in turn can reduce the impunity with which digital attacks are often carried out. </p> <p>For example, in Poland, after digital forensic investigations led by Amnesty Tech, Citizen Lab and other civil society groups, Poland\u2019s government launched an investigation into the abuse of power, providing additional clarity in which contexts digital surveillance was used, and committing to notify potential targets. </p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#where-is-digital-forensics-applied","title":"Where is digital forensics applied?","text":"<p>In general, beyond being used as an accountability tool in Civil Society, forensic investigations are carried out with different objectives and areas of focus, for example:</p> <ul> <li> <p> Expert investigations for judicial proceedings</p> <p>They are often carried out by investigators in alignment with local laws for criminal or civil cases. Expert investigations are often carried out by police, military or judicial entities. Historically, a lot of the documentation and processes have been developed by these groups in contexts where there is no direct consent for the investigation </p> </li> <li> <p> Academic investigations</p> <p>Through academic investigations researchers look to develop new lines and techniques for research that create improvements in the methodologies and generate practical knowledge to advance the forensic science field. </p> </li> <li> <p> Private sector investigations</p> <p>Private sector investigations are led by internal teams or external consultants, and have the goal of identifying the origin and the scope of possible intrusions and security incidents affecting business or institutions.  </p> </li> <li> <p> Investigations to protect Human Rights Defenders (HRDs)</p> <p>In the context of protection to Human Rights Defenders, forensic investigations intend to generate, preserve and present evidence of digital security incidents affecting HRDs. The goal is to enable access to remediation and accountability mechanisms that reduce the attacker's impunity and expose perpetrators that violate fundamental rights. </p> </li> </ul> <p>Frequently, forensic investigations start when there is a detection of a possible security incident. Although forensic analysis and incident response pursue different goals, consolidating both processes results in a stronger incident handling and containment that is also capable of collecting and preserving important evidence. </p> <p>Incident response is focused in detecting and responding to security events and incidents. Through well defined response procedures, it is possible to minimize the impact and contain the consequences of incidents. For an effective response, it is also important to uncover the root cause of intrusions, so that the threat can be eradicated in a timely manner.  </p> <p>When incident response and forensic analysis are done separately, actions that are taken without adequate coordination can have an impact both and challenge both the response and the analysis. For example, managing an incident without considering the need to document and preserve evidence, can result in damage or destruction of files and artifacts required of the forensic investigation. In a similar way, focusing solely on the forensic analysis, might delay the contention of an incident, resulting in higher severity consequences and a longer resolution time. </p> <p>Therefore, it is ideal to combine both processes in what is often referred to as Digital Forensics and Incident Response (DFIR), so that the response considers best practices for the collection and preservation of evidence, and findings from the forensic research can be used to contain and, ultimately, prevent future incidents. </p> <pre><code>flowchart LR\n  A[Incident Response] --&gt; C[DFIR];\n  B[Digital Forensics] --&gt; C;</code></pre> <p>This guide and repository are focused on the forensic aspects of an investigation. However, please keep in mind the close relationship that forensic has with incident response processes, so that you can integrate forensic best practices when responding to emergencies and handling requests for assistance. </p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#what-are-the-usual-stages-of-a-forensic-investigation","title":"What are the usual stages of a forensic investigation?","text":"<p>There are several frameworks and norms that suggest a series of phases in order to complete a forensic investigation, including norm ISO 27037 or NIST guide to integrate forensic analysis into incident response.</p> <p>Best Practice</p> <p>Throughout these different phases, it is key to maintain and ensure the integrity of evidence, and to create confidence in the analysis process. Due to its nature, digital evidence is fragile, since it can be altered or destroyed during the collection or analysis stages. This is why, no matter what framework or best practices you follow, you should always the following basic principles during the investigation cycle: </p> <ul> <li>Whenever possible, avoid directly manipulating or working on the collected evidence. Instead, use local copies that do not endanger the original evidence.   </li> <li>Documenting is a key aspect of any forensic investigation. Any action that you take, any discovery that you make, any tool that you use, any hypotheses or conclusions that you arrive at should be well documented. It is important that a peer can review and reproduce your findings independently, looking at the evidence and the documentation.   </li> <li>While it is not always possible to know what will happen in a given case, if you believe it might be possible that the evidence is used as part of a legal proceeding, familiarize yourself with the relevant legislation in the jurisdiction, including by consulting with a peer expert in legal matters. </li> </ul> <p>Most of the frameworks coincide in the following phases: identification, collection, preservation, analysis and presentation. Below we detail what happens during each of these phases. </p> <pre><code>graph LR\n  A[1- Identification] --&gt; B[2- Collection and acquisition];\n  B --&gt; C[3- Verification and preservation];\n  C --&gt; D[4- Analysis];\n  D --&gt; E[5- Presentation];</code></pre> 1- Identification2- Collection and acquisition3- Verification and preservation4- Analysis5- Presentation <p>During the identification phase, the analyst determines which devices, accounts or systems might contain relevant information for the investigation. Examples include mobile phones, computers, online accounts, storage media, among others. Ideally, to determine which evidence to collect, the analyst should engage in a conversation with the impacted person, to understand what happened, what actions have been taken and what evidence and artifacts might be available. </p> <p>Once you identify the devices and systems that might contain evidence, the forensic analyst determines the best way to retrieve such evidence. The prioritization and the exact procedure to be used depends on several factors, including the type of incident, whether support is happening remotely or on the ground, the volatility of the evidence and the amount of effort required for the extraction. Keep in mind the following: </p> <ul> <li>It is possible that the analyst identifies more sources of information that you have capacity to collect. For example, if you are investigating a potential spyware infection, relevant data might exist in the targeted device, the network equipment, devices from the ISP, online accounts, to name a few. You should prioritize the collection of evidence that, according to your experience, has the greater value and potential for the investigation, and requires a reasonable amount of effort to collect.   </li> <li>Due to its nature, some digital data useful for analysis is volatile, which means it can be altered or destroyed as time passes or when you interact or turn the device off. An example of volatile data would be the list of running processes on a device. In general, it is recommended to prioritize the extraction of volatile data over non-volatile data (like hard-drives and file systems).   </li> <li>Considering the above, the analyst can then make a decision on the best way to extract information from devices. For example, you can create a physical image, or bit-for-bit copy of a storage media, to duplicate the contents, including information that might still be present but whose pointers were removed. Alternatively, you can also create logical images, or copy of visible archives. You might also want to extract specific information, for example targeted log files. </li> </ul> <p>Once you extract information, it is important to document and verify the integrity of the collected data. The goal of the integrity verification is to demonstrate that the information that has been collected from the device has not been altered during the analysis.Verification and preservation are always important, but they are critical in case you pretend to use the evidence in legal proceedings. Normally, the verification involves the calculation of cryptographic hash functions at the time of extraction, that generate an unique value for or fingerprint of a given data, that can be compared and verified later in the process. </p> <p>The preservation of evidence is closely related with the concept of chain of custody, which is especially important when dealing with physical evidence like devices, hard drives, computers, etc. It requires the establishment of a paper trail that documents where, when and how evidence was collected, where it was stored and who had access to it. </p> <p>During this phase, the analyst uses specialized tools and manual review to study and analyze the evidence to establish hypotheses and derive conclusions about what might have occurred. Often, the analysis will face large amounts of data, therefore a manual analysis can be slow and challenging, especially if there is no clarity on what or where to look. Some forensic tools can facilitate this process, especially if there is access to indicators of compromise. During this phase, it is important to use consistent and reproducible procedures and methodologies that can be verified. Sometimes, it won't be possible to establish any conclusion from the existing information. </p> <p>During the last step, an analyst prepares and presents key conclusions derived from the analysis. How the results are presented depends on the goal of the analysis and the audience. For example, it is different to present results to a potential target seeking an understanding of whether their devices were compromised, than presenting results in a public report whose goal is to expose abuses and document findings. If the report is intended to be used in legal proceedings it is helpful to consider the local jurisdiction and what might make expert testimony admissible in court. </p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#how-can-digital-forensics-be-applied-in-the-defense-of-human-rights","title":"How can digital forensics be applied in the defense of Human Rights?","text":"<p>Organizations and individuals that defend Human Rights, for the most part, do not have robust monitoring systems to generate timely alerts of potential threats against their devices or networks. Therefore, it is common that the detection of an incident happens when consequences are evident, for instance when a document is leaked or when they are locked out of their online accounts. Due to the limitation in resources, it is also uncommon for organizations to have digital security specialists among their team, which means many of the digital security tasks fall on internal technology or communication teams, assisted frequently by external specialized helplines or consultants. </p> <p>When an individual or an organization detects a potential incident, either through a suspicious behavior or through an alert (for example, apple threat notifications, the helpline or the digital security point of contact starts a process to investigate and triage the situation, to understand what happened, when it happened and what actions have been taken so far. From these initial steps, it is important that the incident handler, in addition to considering and assessing the wellbeing of the affected Human Rights Defender, incorporates digital forensic best practices to protect and collect evidence that could potentially be helpful for accountability purposes. </p> <p>As it was mentioned above, incident response and digital forensic processes are closely intertwined. It is during that initial response that the incident handler identifies which systems, devices or accounts might contain useful evidence for a forensic investigation. It\u2019s worth highlighting that in our context, forensic investigations should always be consensual, which implies that before collecting any data we should provide clear information about what the process entails and what the goal is, ideally through a written form. </p> <p>Figuring out exactly what to collect depends on several factors, including the willingness of the at-risk person to share information, the type of incident, the tools and resources available, the technical proficiency of the person doing the collection, among others. In some cases, the incident handler or point of contact can do an initial triage and collection, and work in collaboration with trusted third parties to further examine the data and identify signs and indicators of compromise. While deep technical proficiency is not required to do the collection of evidence and artifacts, it is important that whoever is doing the collection understands key concepts and considerations like the ones included in this resource. </p> <p>For example, in some instances it is counterproductive to turn off and ship a device to a 3rd party forensic laboratory for analysis. This would likely destroy useful volatile evidence \u2013data that is altered or destroyed when manipulating or shutting off a device. If we want to collect this type of data, it is more convenient to use forensic tools that allow a live collection that includes information like running processes, temporary files, etc. </p> <p>Buenas Pr\u00e1cticas</p> <p>Throughout this forensic process, one of the most important aspects is keeping a good chronological documentation of actions taken, evidence collected, hashes, tools used, issues faced, consent, etc. </p> <p>In most cases, evidence can not be deeply analyzed on site, and additional forensic tools, manual analysis and research are necessary to establish conclusions about what might have occurred. This offsite analysis is often conducted by analysts with deeper knowledge and understanding of the operating systems in question, and also have access to tools, indicators and methodologies for analysis. </p> <p>It is possible that the initial analysis does not provide any immediate result or match with known signatures, especially if this analysis rellies only on known vulnerabilities and if we suspect an advanced threat actor is involved, that could engage in efforts to delete traces of their activity. It is also possible that attackers use techniques to disrupt or hinder forensic analysis efforts, on what is commonly known as anti-forensics. </p> <p>Therefore, not getting an immediate result does not mean that we can fully guarantee the device has not been targeted or compromised, both because of anti-forensic techniques as well as limitations on access to useful forensic artifacts or threat intelligence . Moreover, threat actors often move dynamically, meaning that they sometimes do not maintain persistent access to devices. Finding the footprints of a threat actor using automated analysis tools often requires access to threat intelligence (in the form of indicators of compromise) that can be used to compare against our local collection. Additional manual analysis can take place to try and identify patterns and logs of potential new exploits and vectors of compromise. The IOCs and skills necessary for the discovery of new attacks might not always be readily available, and sometimes it might be helpful to store forensic evidence for additional study and investigation further down the road. This should always be done in clear consent with the impacted person, and making sure data management and data security policies are being followed. </p> <p>During the last 5 years, different projects and funds have invigorated a global community of forensic analysts, including with a few emerging laboratories across in the global majority. This has increased local capacities, but it is still crucial that collaboration remains at the center of all these efforts. Peer-to-peer support, within regions and globally, is fundamental for the collective success, including through greater sharing of threat information as well as building of skills and knowledge. The establishment of a forensic lab is usually the first step in a process that can take several years to mature, and where collaboration is key for long-term sustainability. </p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#important-considerations-when-conducting-forensic-investigations","title":"Important considerations when conducting forensic investigations","text":"<p>Below we detail a few important aspects to keep in mind when conducting forensic investigations in support of at-risk users from civil society. </p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#informed-consent","title":"Informed consent","text":"<p>Different from forensic investigations in other contexts (judicial, corporate), forensic investigations in support of Human Rights Defenders should always be consented. This means that the analyst should guide the person requesting support through the process, explain clearly what are the expectations and potential outcomes, detail what data would be collected and clarify any questions that may arise. It should be the person asking for the support who makes the final decision on how to proceed with the investigation. A written agreement is often advised. </p> <p>It is possible that some of the artifacts that are collected during a forensic investigation contain personal information (contacts, messages, applications, photos, etc), therefore you should be transparent with beneficiaries about what is included, while also trying to minimize or eliminate any personal information that is not relevant for the forensic analysis. If you plan to share artifacts or collected information with 3rd parties, it is important to inform upfront and get explicit consent to share with additional parties. </p> <p>Consult the guide on consent</p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#chain-of-custody","title":"Chain of custody","text":"<p>Chain of custody (CoC), in legal contexts, is the chronological documentation or paper trail that records the sequence of custody, control, transfer, analysis, and disposition of materials, including physical or electronic evidence. In particular, forensic evidence is fragile in nature, since it can be manipulated or destroyed, and therefore, it becomes important for a forensic analyst to be able to describe the collection and custody process, and prove the integrity of the evidence used for analysis. Not having a robust trail and documentation of how the evidence was collected, stored and analyzed can result in it being inadmissible for legal proceedings, or to be contested and dismissed by other specialists. </p> <p>Legal Consideration</p> <p>If you intend to file legal cases or contribute with reports or as expert witness in legal proceedings, it is advisable to seek support from legal experts with knowledge of the jurisdiction.</p> <p>The best way to demonstrate and verify the integrity of evidence is through clear chronological documentation that includes hashes (unique identifiers) or digital signatures of the collected files. Legal proceedings and depositions tend to happen several months or even years later after the initial analysis and collection happened, and therefore analysts rely in documentation to clearly explain when, where and what actions were taken during the investigation. It is also worth mentioning that there are some companies in the business of verifying and ensuring integrity of digital evidence, often in close connection with local legal frameworks. For example, Verifact operates in Brasil</p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#risks-during-a-forensic-investigation","title":"Risks during a forensic investigation","text":"<p>Forensic investigations can lead to the exposure and documentation of Human Rights abuses against at-risk individuals, often carried out by states or other powerful actors. Due to the impact that these investigations can have as well as the capacities and resources of both states and spyware companies, it is important to engage in holistic risk assessment exercises before engaging in collection and analysis. </p> <p>There have been documented cases of physical surveillance and legal warfare against organizations doing forensic analysis, and there are often actions from states and companies to create obstacles, stop or even criminalize efforts from forensic labs and independent researchers. Engaging in risk assessment activities regularly, and specially ahead of the publication of reports, is important and necessary, and can help reduce and minimize consequences of legitimate research. There is a list of organizations that can support with risk assessment in the site of the Digital First Aid Kit. </p> <p>In addition, due to the fact that analysts will be investigating digital security threats and attacks, they will be frequently in contact with malicious infrastructure. It is also important to consider operational security measures that can protect against risks of self-compromise and also mitigate and assess the risk of alerting attackers and spyware operators of ongoing investigations, which could lead to a shift in infrastructure and practices, limiting the scope of the investigation.  </p> <p>Consult the explainer on risks</p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#conclusion","title":"Conclusion","text":"<p>Digital forensic investigations involve a series of practices, methodologies, tools, skills and standards that can lead to verifiable conclusions about digital security incidents. In the context of Human Rights defense, evidence collected through forensic investigations can boost accountability actions that reduce the impunity that is frequently tied with digital attacks. </p> <p>Consensual forensic analysis implies following a rigorous, systematic and objective process across a series of phases, where the goal is to guarantee the chain of custody and demonstrate the integrity of the evidence used for the analysis. Most of the steps in a forensic investigation are not technically complex, but do require a basic understanding of key concepts like informed consent and chain of custody. Labs and forensic researchers should also assess risks and take adequate precautions to mitigate risks that emerge from forensic investigations. </p> <p>It is by working together as a community and continuing to develop trust among emerging and established forensic labs that will be able to grow and strengthen the forensic practice in civil society. Peer collaboration is key to respond holistically to the needs of at-risk communities from civil society. We extend an open invitation to collaborate with this resource and this repository. If you have any observation or request, you can submit it directly through the issues section of this repository. If you have additional resources you would like to include into this repository, please reach out to seguridad@socialtic.org. </p>","tags":["explainer","intro"]},{"location":"explainers/01-explainer-introduction-digital-forensics/01-explainer-introduction-digital-forensics.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html","title":"Explainer: Risks, threats and mitigations for forensic labs supporting Human Rights Defenders","text":"2025-05-272025-05-27 <p>This document is part of a technical documentation repository which has the main objective of establishing a baseline of proven, flexible and accessible knowledge to boost consensual forensic analysis in support of civil society across the globe. To organize the contents, we use the technical documentation framework Di\u00e1taxis. This particular resource fits within the explanation category in Di\u00e1taxis. It is complementary to other resources in this repository including how-to guides, tutorials and references. </p> <p>This document describes risks, threats and vulnerabilities for forensic analysts and threat laboratories supporting civil society. It is an introductory material that includes examples and links to resources that can help these groups to understand and mitigate risks they might encounter as part of their analysis and accountability work. </p> <p>This document was co-authored by the teams at SocialTIC and the Internet Research Lab. We appreciate the reviews and suggestions from Access Now, Marianne Parrott and Martijn Grooten that improved the content. All errors remain the responsibility of the authors.   </p>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#threats-vulnerabilities-and-risks-why-should-you-care","title":"Threats, vulnerabilities and risks: why should you care?","text":"<p>In the context of online safety of at-risk individuals or civil society organizations, a threat is a declaration or indication of an intention to inflict damage, punish or hurt. Threats can manifest in different ways, including through physical, legal or digital attacks, natural disasters, theft, etc. </p> <p>A vulnerability, on the other hand, refers to weaknesses in the processes, systems, practices or habits that can lead to threats or increase their impact and consequences. It refers to any factor which makes it more likely for harm to materialise or result in greater damage. </p> <p>A risk is the combination of the probability that a threat happens and the severity of the impact, if it ends up occurring. Risk is not static; it varies over time, depending on internal and external factors, making regular analysis and assessment of risks a necessary practice to reduce the possibility of harm.   </p> <p>In the context of forensic support for Civil Society, as described previously in the explainer on digital forensics for Human Rights Defense, the process usually starts when a Human Rights Defender, journalist or activist approaches a point of contact or threat lab to request assistance. In many scenarios, and particularly if they suspect they might be facing an advanced threat, they likely have a high risk profile, exposed to digital, legal, physical, natural, psychosocial and other threats. The exact risks an organization or individual faces are unique to their context and profile, and even when forensics do not focus on mitigating or implementing counter measures to manage risks, it is important for points of contact, analysts and forensic labs to be aware of such risks for their beneficiaries, and to avoid engaging in actions that might increase their risk for whomever is in need of support. </p> <p>Note that this document analyzes risks primarily for the forensic labs supporting human rights defenders. There are likely additional risks for the individuals requesting support with forensic analysis, and depending on the context and profile it might be ideal to refer them to a partner organization that can help them conduct an holistic risk assessment. Examples of such organizations are included later in this resource.  </p> <p>It is important for forensic labs, analysts and points of contact to consider risks they might face due to their engagement in technical investigations. Through forensic research, civil society organizations push for accountability measures that can have an impact in the surveillance ecosystem by uncovering evidence of illegal or unethical practices, which means some opponents will consider civil society forensic research as a threat. </p> <p>In the next sections, we will provide examples of threat actors, types of threats and attacks that forensic labs and researchers have faced in the past, as well as some resources to initiate risk assessment exercises. </p>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#where-do-threats-come-from","title":"Where do threats come from?","text":"<p>In order to know what specific threats an analyst or organization might face at any given point, it is necessary to conduct a holistic risk assessment. However, below you\u2019ll find some common types of threat actors who civil society colleagues face: </p> <ul> <li> <p>Spyware or surveillance vendors: There is a vast network of companies that develop, broker, sell, and supply surveillance technologies, the majority of them are privately owned and generate revenue from the products and services they offer. Some lists are available including this list by the Atlantic Council or this resource by Business and Human Rights. Often, these companies, their founders, or their staff have ties to the military and intelligence sectors. For example, in the case of the infamous NSO group, one of the co-founders previously served in the military intelligence and the Mossad. Spyware companies have access to advanced technical capabilities, financial resources, legal counsel, and sometimes political power and connections. Forensic research can have an impact on the company's business and reputation, like when Cellebrite stopped operations in Serbia and other countries due to human rights concerns, or more recently when NSO received a large fine of 170 million dollars in the WhatsApp vs. NSO legal case. Moreover, the exposure of infrastructure and vulnerabilities through forensic reports often means that developers of spyware need to switch to new infrastructure and find/exploit new vulnerabilities, which creates challenges and economic impacts for their business.  </p> </li> <li> <p>State actors: Oftentimes, states, police, military or intelligence agencies act as the operators of the spyware technology, which means they control who is targeted, and when and what information is retrieved. While many governments rely on commercial or mercenary spyware, some states also develop their own technology, with varying degrees of sophistication. Forensic research by civil society can lead to the exposure of abuses and violations of law and/or human rights, and potentially lead to accountability actions, including through legal mechanisms. Thus, state actors can look to prevent, challenge, discredit or even criminalize civil society forensic investigations. </p> </li> <li> <p>Trolls and disinformation actors: Since at least 2022, as additional forensic research by civil society exposed misuse of spyware, some persistent actors have emerged to discredit findings by reputable labs using pseudoscience and disinformation. These campaigns have also resulted in harassment of researchers or organizations, and distraction from research activities. In other contexts, where social media manipulation is a common practice, networks of trolls have emerged in connection with threat notifications, to spread misinformation and dismiss the validity of such notifications.   </p> </li> <li> <p>For-profit cybersecurity companies: A few cybersecurity companies have started engaging with civil society looking for indicators of compromise or other forms of threat intelligence that can support their research and development of for-profit products. The difference in incentives, resources and goals between the private sector and civil society can lead to extractive relationships that end up harming the reputation of forensic labs, and potentially victims if their data is not managed properly. Some specific examples have been reported privately, and some critics have been posted publicly, for example this discussion on iVerify.</p> </li> </ul>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#examples-of-threats","title":"Examples of threats","text":"<p>While it is not possible to provide a complete list of all threats a forensic analyst or lab can face, we can describe examples of threats that have been observed in the past. </p>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#digital-attacks","title":"Digital attacks","text":"<p>By digital attacks, we refer to actions or behaviors with malicious intent, using digital technologies and communications. For example: </p> <ul> <li> <p>Spear phishing: Spear phishing refers to well-crafted, personalized phishing messages that take advantage of confidential or sensitive information to trick the recipient into opening or downloading a resource. This technique has been used in the past to compromise online accounts or to deliver malware, for example in 2024, when it was reported by the Citizen Lab and Access Now that an advanced actor engaged in spear phishing to compromise authors of high profile investigations into official corruption and abuses of power in Russia.</p> </li> <li> <p>Spyware attacks: Human Rights Watch members from Jordan were attacked with spyware, according to Access Now. The attack happened after the release of a report criticizing government repression. Other examples include NSO targeting of Amnesty International in 2018, as reported by Amnesty International and Citizen Lab. </p> </li> <li> <p>Doxxing: Doxing (also \u201cdoxxing\u201d, or \u201cd0xing\u201d, a word derived from \u201cdocuments\u201d, or \u201cdocs\u201d) consists of tracing, gathering and publishing information about someone using sources that are freely available on the internet (called OSINT, or Open Source INTelligence). Although not reported publicly, there have been cases where participants in spyware investigations have been doxxed on social media. While not pertaining to forensic analysts, this report documents how fact-checkers have faced similar threats in Indonesia. </p> </li> <li> <p>Information compromise and information leaks: Threat actors might seek to gain access to sensitive information that analysts or labs possess, like the identity of victims seeking support, information about unpublished indicators of compromise or other confidential information that might endanger staff members.  Attacks can also target service providers that also have access to confidential information, including online storage for case or contact management, like the incident reported against the International Red Cross Committee (IRCC) back in 2022. </p> </li> </ul>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#legal-attacks","title":"Legal attacks","text":"<p>Legal attacks can happen when states use national security or cybersecurity laws to criminalize forensic research. Attacks can also take place as part of legal proceedings, as described below. </p> <ul> <li> <p>Criminalization of forensic research and researchers: In Ecuador, the Swedish researcher Ola Bini has been subject to an extensive legal process, where even after being declared innocent in 2023 due to lack of evidence, they were then further prosecuted through appeals.    </p> </li> <li> <p>Lawfare: Lawfare refers to use of legal systems and institutions to damage, discredit or affect an individual or organization. For example, in relation to Citizen Lab\u2019s involvement in the WhatsApp lawsuit against NSO, the spyware developer attempted to use the courts to get access to sensitive information, including confidential information about victims. In another example, in 2018, Sandvine threatened Citizen Lab with a defamation lawsuit due to their publication of research highlighting the use of Sandvine technology to inject spyware and block websites.   </p> </li> <li> <p>Subpoenas and data requests: In line with attempts to criminalize research, it is possible that authorities try to use legal processes, subpoenas and other mechanisms to obtain personal information of researchers or forensic labs. For example, in 2019, the Argentinian researcher Javier Smaldone made public data requests made by the police to ISPs and service providers (including WhatsApp). </p> </li> </ul>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#reputational","title":"Reputational","text":"<p>Forensic labs could also face reputational threats related to their work on digital forensics, including through unsubstantiated claims or disinformation. Trolls and misinformation actors can also engage in social media campaigns to discredit and dismiss findings. </p> <ul> <li>Publications and pseudoscience: Pseudoscience refers to statements, beliefs, or practices that claim to be both scientific and factual but are incompatible with the scientific method. Research by both Citizen Lab and Amnesty International has been criticized by \u201cexperts\u201d, which creates disruption and consumes resources from organizations. Examples include misinformation actors aiming to discredit the #CatalanGate research and publications.</li> </ul>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#physical","title":"Physical","text":"<p>Physical attacks have been used to intimidate, discourage and prevent forensic research from taking place. </p> <ul> <li> <p>Harassment and physical surveillance: In 2020, the New York Times reported a case of physical surveillance of a Citizen Lab researcher by an Israeli private intelligence firm. This Youtube video recounts the story and provides details into how it developed.   </p> </li> <li> <p>Detentions, raids and arrests: As stated above, different laws can be used to criminalize forensic research, including national security or cybersecurity legislation. This can lead to raids, detentions and arrests. For example, in 2019, the Argentinian security researcher Javier Smaldone was subject to raids and detention simply for being active on social media regarding vulnerabilities in e-voting machines. </p> </li> </ul>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#psychosocial","title":"Psychosocial","text":"<p>Analysts and forensic labs providing support to at-risk individuals should take into account threats to their own well-being that can result from supporting individuals targeted by spyware. Any individual or organization providing direct service  to people at risk can expose themselves to wellbeing threats, and offering technical support for device analysis is no exception. For example, this report from Access Now describes the psychological impact spyware has on women human rights defenders. </p> <ul> <li> <p>Compassion fatigue or secondary trauma: Compassion fatigue or secondary trauma refers to the psychological trauma which may be incurred by contact with people who have experienced traumatic events, exposure to disturbing descriptions of traumatic events by a survivor, or exposure to others inflicting cruelty on one another.   </p> </li> <li> <p>Burnout: Burnout is a state of chronic stress that leads to physical and emotional exhaustion, cynicism, detachment, and feelings of ineffectiveness. Burnout can leave people unable to function on a personal or professional level. Those suffering from burnout may need considerable time off to recuperate physically and psychologically or may not be able to return to work at all. Studies and research have shown that human rights defenders and those to violations and distress, are likely to suffer from burnout.  </p> </li> </ul>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#operational","title":"Operational","text":"<p>Aside from digital, physical, legal and psychological threats to the work of forensic analysts and threat labs, it is important to keep in mind risks associated with the operation and sustainability. </p> <ul> <li> <p>Sustainability and access to resources: The provision of forensic analysis requires a combination of technical know-how, access to technical tools, experience and procedures, not just to provide consistent and clear analysis, but to mitigate some of the threats outlined in this document. Maturing capacities takes time and resources. Therefore, it is important for labs to think about their sustainability, in particular if they aim to become a resource for a vulnerable community, taking into account that the development of skills and expertise requires sustained financial and human resources over several years.   </p> </li> <li> <p>Staff retention: There is a well-documented shortage of technical workers on digital security. Civil society is not the exception, and several organizations and threat labs have faced challenges finding and contracting staff with both expertise to conduct forensic analysis and sensibility and understanding of Human Rights issues. Moreover, in several cases, when organizations invest in the development of skills, there is a chance that individuals can pursue better-paying work ventures in the private sector. </p> </li> <li> <p>Resilient infrastructure and services: The work of forensic labs is often driven by external events, such as a surge in support requests due to a political crisis in a country. For example, influencers responding to mass protests in Ethiopia encouraged protestors to contact a civil society forensic lab for support, increasing the number of support requests by more than 10x fold in 24hrs and causing the forensic lab infrastructure to crash under the load. Exploring scenarios can help forensic labs develop contingency procedures, plans and infrastructure.</p> </li> </ul>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#prevention-and-risk-management","title":"Prevention and risk management","text":"<p>As we have mentioned throughout this resource, we encourage forensic labs and researchers supporting civil society to conduct risk assessment exercises regularly, and particularly before engaging in research with high-risk individuals or when operating from a high-risk context.</p> <p>In this resource we are not focusing on the step-by-step of how to start a risk assessment cycle, but we will point to existing resources and partner organizations that might be able to support or advice to prevent different types of threats.</p>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#resources-for-risk-assessment","title":"Resources for risk assessment","text":"<p>The following are some available resources to initiate and engage in exercises to assess risks: </p> <ul> <li> <p>Cybersecurity Assessment Tool (CAT): The Cybersecurity Assessment Tool (CAT) is designed to measure the maturity, resiliency, and strength of an organization\u2019s cybersecurity efforts. It can help threat labs and organizations hosting them do an assessment of their own risks, threats, vulnerabilities and opportunities.   </p> </li> <li> <p>SAFETAG: SAFETAG is a professional audit framework that adapts traditional penetration testing and risk assessment methodologies to be relevant to smaller non-profit organizations based or operating in the majority world.   </p> </li> <li> <p>Creating a security plan: EFF has a resource under their surveillance self-defense (SSD) guide that can be especially helpful for individuals and independent analysts to create a security plan to manage risks.  </p> </li> <li> <p>Workbook on Security: Front Line Defenders maintains a holistic security guide for human rights defenders at risk,  that can be used to guide individual or organisational security planning. This resource is available in many different languages.</p> </li> </ul>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#organizations-resources-and-partners-in-the-field","title":"Organizations, resources and partners in the field","text":"<p>The following is a list of organizations that might be able to support in managing, preparing and preventing against different type of risks:</p> <p>Technical </p> <ul> <li>Access Now Digital Security Helpline </li> <li>Cyber hub </li> <li>SocialTIC </li> <li>Front Line Defenders </li> <li>Open briefing</li> </ul> <p>Legal support</p> <ul> <li>Media Legal Defense Initiative </li> <li>Access Now </li> <li>Article 19</li> </ul> <p>Psychosocial &amp; well-being </p> <ul> <li>Vita Activa Feminist Helpline </li> <li>Resources include how to deal with indirect trauma and why burnout affects women more. </li> <li>Open briefing </li> <li>Resources include risk assessment tools and a resource on compassion fatigue, vicarious trauma, and burnout: Infosheet for those supporting human rights defenders</li> </ul> <p>Physical security </p> <ul> <li>Frontline Defenders </li> <li>Open Briefing </li> </ul> <p>Sustainability</p> <ul> <li>Engine Room </li> <li>Resources include how to think about compensation for a global remote team as well as a report on funding for a sustainable ecosystem. </li> </ul> <p>Resources for incident response </p> <ul> <li>Feminist Helplines </li> <li>DFAK</li> </ul>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#conclusion","title":"Conclusion","text":"<p>Throughout this document, we have presented threats, risks and resources that might support the risk assessment process of civil society organizations and individuals engaging in forensic analysis. If this is the first time you are reading about some of these threats, it can be surprising to know the extent to which threat actors are willing to go in order to discourage and prevent forensic research. </p> <p>Rather than undermining or depressing emerging efforts, with this resource we aim to provide the necessary context to engage in forensic analysis and research responsibly, and to emphasize the importance of operational security practices, policies and investments to ensure that our research is leading to accountability actions without inflicting more harm on those targeted or the people supporting them. </p> <p>If you have any observation or request for change on this documentation repository, you can submit an issue directly through the  github issue section of this repository. If you have additional inquiries, please reach out to seguridad@socialtic.org.</p>","tags":["explainer","intro"]},{"location":"explainers/02-explainer-risks-threats/02-explainer-risks-threats.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["explainer","intro"]},{"location":"explainers/03-explainer-log-forensics-android/03-explainer-log-forensics-android.html","title":"Explainer: Introduction to log-based forensics on Android devices","text":"2025-06-232025-06-23 <p>This document is part of a technical documentation repository created to establish a baseline of proven, flexible and accessible knowledge to boost consensual forensic analysis in support of civil society across the globe. To organize the contents, we use the technical documentation framework Di\u00e1taxis. </p> <p>This particular resource fits within the explanation category in Di\u00e1taxis, and presents an introduction to log-based forensics for Android devices, including a definition of log-based forensics, a comparison with other types of forensic analysis and some use cases. This is an introductory material that does not require previous knowledge, and is complemented with how-to guides and  tutorials for forensic acquisition. </p>","tags":["explainer","intro"]},{"location":"explainers/03-explainer-log-forensics-android/03-explainer-log-forensics-android.html#what-is-log-based-forensic-analysis-and-why-is-it-useful","title":"What is log-based forensic analysis and why is it useful?","text":"<p>Log-based forensic analysis refers to a type of investigation that uses different records of the system, including bugreports, memory traces, configuration files, process lists, among others, to identify possible traces and indicators of digital attacks. </p> <p>To conduct a log-based research, analysts normally walk through the different phases of a forensic investigation, starting with the identification and collection of potential evidence. As it is the case with any type of investigation, prior to collecting evidence it is important to discuss and document an informed consent, while also making conscious efforts to minimize personal data alongside information protection and verification practices. We have published a draft consent letter that can be adjusted as needed.  </p> <p>In the case of mobile devices, regarding investigations focusing on advanced threats, most of the analysis conducted so far by civil society (by organizations like Citizen Lab or Amnesty tech) uses log-based forensics to arrive at conclusions and extract findings. The possibility of collecting targeted information (for example, a bugreport), including in remote support situations, makes this a common and convenient method of analysis. </p> <p>Evidence collected is usually analyzed after the fact, normally in a forensic lab environment, ideally in accordance with best practices for operational security and evidence preservation. Tools like MVT on AndroidQF can aid and simplify the acquisition and analysis of evidence. Generally speaking, when conducting a log-based forensic analysis, you are looking to find coincidence with known indicators of compromise (IOC) of previous attacks; or to document anomalies that when compared with a baseline depict suspicious behaviors that coincide with adversarial activity, and that have not been previously recorded or characterized. Due to this methodological approach, log-based forensic analysis can often result in high-confidence findings. </p> <p>It\u2019s worth noting that not having a match with known IOCs is not necessarily a confirmation of a \u201cclean device\u201d. It might be possible that threat actors have taken measures to prevent forensic analysis, or that the attack is exploiting a zero-day vulnerability that has not been previously detected. One of the advantages of log-based analysis is that you can store records, in case new information is discovered at a later date, potentially resulting in useful additional intelligence. If you are planning to store records for future analysis, it is important to ensure you have the necessary consent, and that you have taken measures to eliminate any personal information that is not relevant from a forensic standpoint.  </p> <p>The publication \u201cDetection and analysis of spyware: methodologies, limitations and opportunities\u201d summarizes and presents different methodologies commonly used by civil society, specifically for the detection of spyware. In addition to log-based forensics (covered as forensic analysis on the report), the text also mentions investigations based on monitoring signals, specially from agents running on systems and looking after suspicious patterns, processes or other signals; and also analysis and investigations that rely on network traffic monitoring to identify traces of suspicious activity in the network communications.   </p> <p>In summary, some of the advantages of log-based forensics include: </p> <ul> <li>Facilitates remote attention and triage </li> <li>Collects less private information, when compared to full disk copies, and specially when information is minimized.  </li> <li>It can result in high confidence results, particularly if you can match with known indicators of compromise.    </li> <li>It is useful to make comparisons when you have a known baseline to compare against.  </li> <li>It is possible to continue evaluating forensic artifacts against new indicators of compromise that are published at a later date.</li> </ul> <p>And some of the challenges of log-based forensics are:</p> <ul> <li>Even when you only do targeted extraction of artifacts, it is possible that the collected information contains thousands or tens of thousands lines, which means that manual review and analysis requires time and experience with the filtering and scanning of information.   </li> <li>Some logs and records may not be available from the user profile, or might require additional permissions (like for example, route access on android)  </li> <li>Most log files work with circular buffers that are overweight as they are filled up, therefore the older information is constantly being overwritten   </li> <li>Although some tools can facilitate the process, in general for the extraction of records and logs it is recommended to have a basic understanding of the operating system.</li> </ul>","tags":["explainer","intro"]},{"location":"explainers/03-explainer-log-forensics-android/03-explainer-log-forensics-android.html#how-do-you-initiate-a-log-based-analysis-on-an-android-device","title":"How do you initiate a log based analysis on an android device?","text":"<p>To perform a log-based forensic analysis, you need to go through the typical stages of a forensic investigation, starting with the capture of key system records from the device under investigation. Once the information is collected, you will need to use a combination of tools and manual analysis to identify potential traces of malicious activity. Understanding how the system behaves in normal circumstances is helpful, as is having access to indicators of compromise\u2014such as those published by  Amnesty International or Citizen Lab. However, it's important to note that these indicators may become outdated as attackers change their infrastructure, technology, or attack vectors, so they should be updated or complemented with manual analysis.</p> <p>To extract the key records from an android device, it is possible to use some tools that facilitate the backing and extraction of logs, like for example, Google\u2019s bug report or ADB shell, as well as other tools developed by third parties like androidQF.</p>","tags":["explainer","intro"]},{"location":"explainers/03-explainer-log-forensics-android/03-explainer-log-forensics-android.html#types-of-logs-and-tools-for-extraction","title":"Types of logs and tools for extraction","text":"<p>In the case of mobile devices running android, due to the diversity of manufacturers and their particular preferences, as well as the ecosystem of developers and the multiple components, there are many different and record logs. In general, a mix of the following standards is used:</p> <ul> <li>RFC 5424 (protocolo syslog): Used for kernel and UNIX-style system services logging.   </li> <li>android.util.log :Used for logging Android system and application events.   </li> <li>java.util.logging.level: used in Java-based applications, which includes many third-party apps.</li> </ul> <p>All these standards have similar constructions, but defer in the number of levels of logging available. For example, in syslog there are 8 levels, ranging from debugging to emergency logs; while android.util has only 5 levels, ranging from verbose up to error.  </p> <p>Although understanding exactly the login levels and the construction of each different type of flag is beyond the scope of this resource, it is important to take this ecosystem fragmentation into account, since it will continue to be reflected in other aspects of the process, including when navigating the graphical interface. </p> <p>This diversity of the android ecosystem means that it is impossible to create a definitive list of all of the different logs available on android, but we can certainly list some of the most commonly used to in forensic investigations, focusing especially in those that can be accessed without root privileges:</p> <ul> <li>main log: main log records general messages from the applications and the system.   </li> <li>kernel panic: kernel panic log refers to logs that are created when the operating system detects an error from which it cannot recover, like for example, a memory violation or an issue with a system call. In the majority of cases, Linux uses the function \u2018ramoops\u2019 to write the logs before the system stops.   </li> <li>Crash reports and tombstones:  crash logs are usually recorded when an application or process stops unexpectedly. tombstones on the other hand, referred to more detailed reports of failures and native android applications.    </li> <li>radio logs: radio X usually has information about the activity that happens between the cellular towers and the cell phone including information about mobile data, voice calling, SMS, among others.    </li> <li>Security logs: refers to system configurations of SELinux or logs that are within the security buffer. Some security logs or events might not be accessible for unprivileged users.  </li> </ul> <p>There are different tools that can be used to extract and package logs, application lists, process data, and other system records in a straightforward way; including some native tools and some developed by third parties:</p> <ul> <li>dumpsys: A native Android command-line tool available via the Android Debug Bridge (ADB) shell. It extracts detailed information about system services such as battery usage, Wi-Fi status, memory, and more.  </li> <li>dumpstate: A native tool used to gather error logs from a device. It is invoked as part of the bugreport process.  </li> <li>logcat: Another command-line tool available through ADB, it can read from different log buffers, including main, system services, events, and crash; each storing different types of diagnostic data.  </li> <li>bugreport: A tool available via the graphical interface or ADB shell, it generates a zipped diagnostic report that includes logs from logcat, dumpstate, and dumpsys. The resulting ZIP file contains a structured folder with data on errors, memory usage, system calls, network activity, device info, and more.  </li> <li>androidqf: A collection of scripts and tools designed to automate the extraction and packaging of forensic artifacts from Android devices using ADB. It was initially developed by Claudio Guarnieri and is now maintained by Amnesty International's Security Lab.   </li> <li>Perfetto: An open-source system tracing tool designed for performance profiling in Android and Linux. While not traditionally used in forensic analysis, it can help in identifying abnormal system behaviors when configured appropriately.</li> </ul>","tags":["explainer","intro"]},{"location":"explainers/03-explainer-log-forensics-android/03-explainer-log-forensics-android.html#additional-considerations-for-log-based-forensics","title":"Additional considerations for log-based forensics","text":"<p>Before starting a log-based forensic analysis, it\u2019s important to take into account the following aspects:</p> <ul> <li> <p>Minimization and protection of sensitive information: Unlike other digital forensics methods, civil society-led investigations typically aim to collect specific and targeted information, avoiding the capture of unnecessary personal data. If logs contain sensitive content \u2014 such as messages \u2014 it is highly recommended to use automated procedures to retain only relevant forensic data. These procedures should be well-documented and reproducible to ensure the integrity of the information. </p> </li> <li> <p>Informed consent: Before collecting logs or other records from a device, it is essential to obtain informed consent. This resource provides guidance for generating a consent form and establishing good practices with the person requesting the analysis.</p> </li> <li> <p>Roles and phases of log-based forensics: Log-based forensic analysis follows several stages, starting with identifying and collecting key information. These steps can usually be carried out using practical guides and tools, even by those without advanced forensic expertise. However, triage and deeper analysis do require additional knowledge\u2014both in using forensic tools and conducting manual reviews.  </p> </li> <li> <p>Managing expectations: When reviewing a device, you may find no traces of known threats. While this is a positive signal, it doesn\u2019t definitively mean the device hasn\u2019t been compromised. Even after thorough manual analysis, various factors may limit the effectiveness of log-based forensics. If there are strong suspicions of compromise (for example, a threat notification from a platform), it is advisable to consider combining log-based methods with other forensic techniques mentioned earlier.  </p> </li> <li> <p>Peer review and collaborative work: In any type of forensic investigation\u2014including log-based analysis\u2014it is important to verify findings with trusted peers who can independently replicate your methodology. Peer review is strongly recommended before publishing results, especially if you\u2019re presenting a new method or disclosing a previously unknown vulnerability.</p> </li> </ul>","tags":["explainer","intro"]},{"location":"explainers/03-explainer-log-forensics-android/03-explainer-log-forensics-android.html#conclusion","title":"Conclusi\u00f3n","text":"<p>Log-based forensics relies on key device records\u2014such as process information, error reports, or system logs\u2014to identify known indicators of compromise or to highlight anomalies by comparing findings against an established baseline.</p> <p>On Android devices, due to the diversity of manufacturers and technologies involved in development, there are a wide variety of standards and tools to become familiar with\u2014including syslog, dumpstate, and ADB. Additionally, tools like AndroidQF are especially helpful for gathering forensic information from Android systems.</p> <p>A large share of published reports by civil society organizations have relied on log-based forensics to support and document their findings. This is in part due to its ability to support remote investigations, its limited collection of personal information, and its capacity to produce high-confidence results.</p> <p>If you would like to contribute to the development, translation, or dissemination of this resource, please contact us at seguridad@socialtic.org..</p>","tags":["explainer","intro"]},{"location":"explainers/03-explainer-log-forensics-android/03-explainer-log-forensics-android.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["explainer","intro"]},{"location":"how-tos/index.html","title":"How-To Guides","text":"<p>In this section you will find how-to guides. According to Diataxis documentation framework how-to\u2019s are all about executing a task and achieving a goal through step-by-step instructions. It assumes that the reader already has the baseline skills and knowledge necessary to complete the task, and hence, focuses on the steps necessary to achieve the desired outcome in a correct way and aligned to best practices. </p> <p>A good example is a cooking recipe, where the focus is to achieve a result, in this case preparing a specific dish in a repeatable way. It assumes the person already has basic knowledge on aspects like cutting and measuring the ingredients, setting the oven temperature, etc. </p>","tags":["indice","reference"]},{"location":"how-tos/index.html#published-how-tos","title":"Published How-To's","text":"<ul> <li> <p> How to obtain and document informed consent?</p> <p>Describes what is informed consent and why it is important in the context of forensic investigations. It also includes a template that can be adapted by point of contacts, analysts and forensic labs to obtain and record consent during a forensic investigation.</p> <p> How to obtain and document informed consent?</p> </li> <li> <p> How to enable developer options on an Android device?</p> <p>Shows the steps to enable the Developer Options menu on different Android devices, as well as a brief explanation of what developer options are and why they are useful in digital forensics.</p> <p> How to enable developer options on Android?</p> </li> <li> <p> How to enable ADB on and Android device?</p> <p>Presents the steps to enable USB debugging, also known as Android Debug Bridge or ADB, on different Android devices. It also provides a brief explanation of what USB debugging is and why it is useful in digital forensics</p> <p> How to enable ADB on Android?</p> </li> <li> <p> How to extract a bugreport from an Android device?</p> <p>Step by step instructions shocasing how to generate a bugreport on an Android device. The guide includes detailed guidance on generating a bugreport on different flavors of Android and also through ADB. </p> <p> How to extract a bugreport from an Android device?</p> </li> <li> <p> How to make an extraction with AndroidQF?</p> <p>Presents the steps and requirements to complete a forensic extraction of key artifacts from android devices using the tool AndroidQF.</p> <p> How to extract with AndroidQF?</p> </li> </ul>","tags":["indice","reference"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html","title":"How to obtain and document informed consent during a forensic investigation?","text":"2025-03-142025-03-14 <p>This document has been translated by a non-native English speaker. We appreciate any contribution from advanced or native speakers to review and improve the language. You can contribute directly through the associated repository or get in touch with us at seguridad@socialtic.org. Thanks!</p> <p>This document is part of a technical documentation repository whose main objective is to establish a baseline of proven, flexible and accessible knowledge to boost consented forensic analysis in support of civil society across the globe. To organize the contents, we use the technical documentation framework Di\u00e1taxis. </p> <p>This resource fits within the how-to guides category. It describes what is informed consent and why it is important in the context of forensic investigations. It also includes a template that can be used by point of contacts, analysts and forensic labs to obtain and record consent during a forensic investigation. </p> <p>Consideraci\u00f3n Legal</p> <p>This document does not detail and is not sufficient to establish and maintain chain of custody. These important procedures will be described in a separate piece of documentation in the future. </p> <p>We appreciate references and reviews by the community of practice to support the development of this document. </p>","tags":["how-to","intro"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html#what-is-informed-consent-and-why-is-it-important","title":"What is informed consent and why is it important?","text":"<p>Informed consent is a principle applied in different fields that mandates a person must have sufficient information and understanding prior to making decisions about accepting risk. In the context of consented forensics analysis in civil society, it relates to the agreement and acceptance of actions required for collection, preservation and presentation of digital evidence. </p> <p>A key aspect of a consent agreement is the capacity of the person who signs and accepts the risk to take an informed decision on the course of the investigation, or even reject the assistance. In the forensic field, this means providing enough information so that the beneficiary of support understands what actions, risks, rights and responsibilities are part of the investigation process. Informed consent is not just about signing a form, but a process led by the analyst or the forensic lab to communicate in a clear and transparent way with the beneficiary of support, and ensure their will is respected. </p> <p>One of the reasons consent is necessary is related to the fact that digital evidence might include personal information, like contacts, files, pictures, applications, etc. This can carry risks, in case the information is exposed or not managed properly, and potentially could be subject to data protection regulation (GDPR, for example). In addition to communicating transparently about what is collected, forensic labs should make their best effort to reduce the collection of personal data, and to protect sensitive information with robust security policies. </p> <p>Consideraci\u00f3n Legal</p> <p>Any data that is collected will be subject to data protection legislation of the local jurisdiction of residence of whoever is requesting the forensic analysis. </p> <p>Moreover, depending on the focus of the organization providing the support and the nature of the investigation, there might be different approaches to presenting the results of the analysis. Often, forensic research leads to reports, campaigns, litigation efforts and other interventions that seek greater accountability. These actions and interventions can create risks, both for the organization conducting the research and for the affected person, including legal prosecution, harassment and retaliation from governments or private companies. Before naming or using someone\u2019s evidence as part of an accountability action, it is important to ensure there is informed consent. </p> <p>Even in situations where there is no intent to publish results or initiate legal cases from the forensic evidence, there is both a risk and responsibility when collecting information for forensic purposes. Therefore, it is important that both parties (the analyst and the person asking for the analysis) identify possible risks, and agree on what information will be collected and how it will be used, so that risks can be acknowledged and minimized where possible. </p> <p>As part of this process, the forensic analyst or threat lab should also point and explain any expectations, policies or terms of services that are associated with the provision of support. For example, an organization might ask beneficiaries of support not to speak publicly about their involvement or assistance to protect their staff. Access Now Helpline and Amnesty Tech have published terms or service and privacy policies that might be useful as reference. </p>","tags":["how-to","intro"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html#origin-and-application-of-informed-consent-in-forensic-investigations","title":"Origin and application of informed consent in forensic investigations","text":"<p>Informed consent is not a practice exclusive to digital forensics. Some type of informed consent is usually required before agreeing to certain medical procedures, when being part of a scientific study or generally when engaging in activities that require the acknowledgment of a certain risk (think about skydiving and bungee jumping). </p> <p>Some of the origins of consent track back to medicine. In the medical context, informed consent implies providing the patient with sufficient information about a given treatment, including risks, potential benefits, alternatives, expected results, among others. Ensuring that consent is well informed is an ethical and legal responsibility of medicine practitioners. </p> <p>When engaging in a forensic investigation to support an individual or organization from civil society, the process of obtaining consent should clarify aspects like: </p> <ul> <li>What information is being collected? What personal data is included in the collection?    </li> <li>What will happen during the investigation?  </li> <li>With whom will this information be shared?   </li> <li>What risks can emerge from the forensic analysis?  </li> <li>What results can be expected?  </li> <li>Can the name of the individual be used in publications? Can they be mentioned anonymously?  </li> <li>For how long will the collected information be stored? </li> </ul> <p>Ideally, consent should be asked before engaging in any evidence collection. A lot of the information listed above can be discussed and clarified verbally in the initial stages of an investigation, but it is important to also consider a written consent agreement that captures key agreements. </p> <p>You should also take into account that many of the individuals asking for support are embedded in high risk contexts, going through traumatic situations. Establishing trust and engaging in active listening is key. While we do not focus on the principles of holistic response in this repository, we do recommend you consider and consult resources like the Psychological First Aid Manual from the organization Vita Activa. </p> <p>Please also keep in mind that presenting a document full of legal language and description of risks can create stress and anxiety, especially if it is not accompanied with additional context and explanation, or if trust has yet to be established. Consent is a key aspect of forensic research, and a step in conducting additional research that will lead to greater accountability, but the priority should always be the wellbeing of the Human Rights Defender. </p> <p>In the following section we present a draft of a letter of informed consent that can be adapted to the specific needs and particularities of each forensic investigation. We also provide guidance on how to adapt it and what to keep in mind when applying it.</p>","tags":["how-to","intro"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html#documenting-informed-consent","title":"Documenting informed consent","text":"<p>In order to create an informed consent document, aside from engaging in direct conversations with the requester of assistance, follow these steps: </p> <p>1- Download the informed consent letter draft template. The document uses form fields, so that when exporting as a PDF  it can be completed and signed easily.</p> <p></p> <p>In the following links you can download the consent letter templates in different formats: </p> <ul> <li>Consent letter in ODT</li> <li>Example of a PDF generated using the ODT template. </li> <li>Letter of consent as a Google Doc. </li> </ul> <p>2- Adjust, complete and verify the following fields highlighted in yellow in the templates:</p> <ul> <li>Name of the organization: Include here the name of the organization conducting the forensic investigation  </li> <li>Consent to name publicly or anonymously: If you intend to publish the results of the investigation, adjust the text as necessary. If you are not intending to publish results, delete this section.  </li> <li>Goal of the investigation: Adjust the objective as necessary, indicating clearly what actions you expect to take place as part of the research, and what is the main objective.   </li> <li>Information to collect: Detail the information that will be collected to enable the forensic analysis, ideally including specifics about the type of device and the contents that will be extracted.   </li> <li>Privacy policy / terms of service link: If you already have a privacy policy, data protection or similar resources published, include the relevant link. If you don't have a policy, we recommend you include information on whether the collected data will be shared with 3rd parties and for how long it will be stored. </li> <li>Confidentiality of the investigation: If you would like to request that the participation on the investigation is kept as confidential, you can adjust this section to underline what is expected from the beneficiary. </li> </ul> <p>3- Convert into a PDF and share with the person requesting the forensic analysis. Ideally, the informed consent form should be presented after an initial conversation, where you do a basic triage and clarify questions about the steps and scope of the investigation. </p> <p>4- Request for document revision and signature. Make sure you clarify any question the beneficiary of support might have, and adjust as needed. Request the signature of the document. If necessary and appropriate for your context, you can use online signature services (like  DocuSign, Dropbox Sign, SignNow) that facilitate the process of sending, signing and managing agreements. </p> <p>5- Once you receive the consent document, verify that all fields are complete and store it for future reference in accordance with any data retention policy. Make sure you follow and respect the agreements when doing the collection, analysis and presentation. </p>","tags":["how-to","intro"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html#what-sensitive-information-is-commonly-collected-during-a-forensic-investigation","title":"What sensitive information is commonly collected during a forensic investigation?","text":"<p>The exact information to collect will depend on each case, and will be determined by the forensic analyst. Below we list some common forensic artifacts on Google/Android and iOS and the type of records that is usually included. </p>","tags":["how-to","intro"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html#android","title":"Android","text":"<ul> <li> <p>Google Takeout: Google Takeout (available on takeout.google.com) allows the account holder to select from a range of data to export, that extends to all Google products and services. This includes, for example, metadata of the Google account, download records from PlayStore, information about the account activity, messages, among others. The list is extensive, and when engaging in a collection you should point to specific information useful for the analysis, and avoid personal data like photos, locations, etc. In the context of informed consent, you should provide clarity on what will be collected from the Google Takeout, and flag if any personal information is included.   </p> </li> <li> <p>Android Bugreport: The bugreport is a file generated by the Android to help in the diagnose and debugging of errors in the applications or operating system. In general, it does not include personal identifiable information, but it does include information about installed applications, wifi networks previously connected and log files that can describe actions performed by the user.   </p> </li> <li> <p>AndroidQF acquisition: AndroidQF can help extract information from Android devices that can be helpful for forensic analysis. The collected files do not contain personal data or sensitive information, and it is optional to generate a copy of the SMS and MMS messages. More concretely, AndroidQF collects configurations of the system, process list, service list, copy of logs, list of installed applications, list of files in the system and a copy of the temporal files. Optionally you can also extract a copy of the installed applications. </p> </li> </ul>","tags":["how-to","intro"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html#ios","title":"iOS","text":"<ul> <li> <p>Diagnostic files: iOS diagnostic files include information that can be useful to diagnose and triage issues on the device. This includes logs of the operating system, information about the installed applications, details of the hardware and OS version, among others. In general, diagnostic files do not include personal data, although some logs might contain details like usernames, emails or applications. </p> </li> <li> <p>Backup: iOS backups create a copy of the information on a device, so that it can be restored if necessary. Therefore, backups by default do include sensitive information from the device, like photos, Apple mail data, contacts, calendars, notes among others. It is recommended that the analyst implements solutions to reduce the amount of sensitive information after it is extracted and before it is shared. </p> </li> </ul>","tags":["how-to","intro"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html#considerations-when-asking-for-informed-consent","title":"Considerations when asking for informed consent","text":"<p>When you request and document informed consent for forensic investigations, take the following into account: </p> <ul> <li> <p>Protection and handling of personal data: During a forensic investigation, it is possible that the analyst obtains, stores and analyzes sensitive information including messages, contacts, lists of applications, among others. In addition to applicable data protection regulations, it is important to implement policies that can help reduce and protect sensitive records, and that align with any commitment established in the consent form. If you do not have an established policy, we recommend you create one. There are several resources on how to create information security policies, and published policies that can serve as inspiration, like CiviCERT\u2019s information management policy.  </p> </li> <li> <p>Legal review: The information included in this guide, as well as the proposed draft consent form, are intended to serve as guidance for civil society organizations engaging in forensic research. The language might not be sufficient or appropriate in all contexts. If you have access to legal counsel, we recommend you engage them in the review and crafting of appropriate consent forms for your use case. If you don\u2019t have access to legal counsel, the following organizations might be able to assist you:   </p> <ul> <li>Hiperderecho (Per\u00fa, Latinoam\u00e9rica) -  hola@hiperderecho.org </li> <li>Access Now Helpline (Global) - help@accessnow.org (Request to be connected with the Tech Legal Counsel or forensic lab)</li> <li>Art\u00edculo 19 (Latin America) - info@article19.org</li> </ul> </li> </ul>","tags":["how-to","intro"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html#conclusions","title":"Conclusions","text":"<p>The objective of informed consent is to bring clarity, transparency and certainty, so that whoever is requesting support for a forensic investigation can understand potential risks, and is empowered to decide the course and limits of the research. Beyond just crafting and signing an informed consent document, it is important that the process is used to clarify key questions and manage expectations. </p> <p>During the process of obtaining consent, you will also identify, acknowledge and accept risks. Being aware of such risks is important, not just for the beneficiary of assistance but also for the organization conducting the analysis. In response, organizations engaging in forensic research should review and implement adequate processes and policies to respond and protect sensitive information.</p>","tags":["how-to","intro"]},{"location":"how-tos/01-how-to-obtain-informed-consent/01-how-to-obtain-informed-consent.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html","title":"How to enable developer options on an Android device?","text":"2025-08-142025-08-14 <p>This resource falls under the how-to guides category and shows the steps to enable the Developer Options menu on different Android devices, as well as a brief explanation of what developer options are and why they are useful in digital forensics. This is introductory material, complementary to other resources such as the explainer on log-based forensics for Android devices, and is part of the steps to follow for an initial triage.</p> <p>We appreciate the collaboration of RSF Security Lab, who provided us with a set of guides and screenshots that enabled the development of this resource. </p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#what-are-developer-options-and-why-they-are-helpful","title":"What are developer options and why they are helpful?","text":"<p>Developer options refer to a hidden menu in the Android operating system that grants access to additional functions, primarily intended to support debugging during the development of new applications. Embeded in the developer options, there are also advanced settings such as preferences of graphics drivers, network configurations and even experimental features being tested or developed. </p> <p>From a digital forensics perspective, particularly when conducting log-based investigations using tools such as MVT and AndroidQF, developer options allow us to enable key functions like USB debugging, the ADB console, or the generation of bug reports. For this reason, enabling the developer options menu is often the first step in the acquisition process.</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#why-are-there-different-ways-to-enable-them","title":"Why are there different ways to enable them?","text":"<p>The Android operating system is based on the Android Open Source Project (AOSP). However, most manufacturers use a proprietary version from Google, on top of which they add additional, mostly proprietary, customization layers. There are also alternatives such as LineageOS, GrapheneOS, and CalyxOS, which are entirely based on open-source principles and aim to move away from proprietary ecosystems.</p> <p>The result of these additional developments on the base project is a wide variety of graphical interfaces for the operating system. Some examples include:</p> <ul> <li>Pixel UI: User interface developed by Google for Pixel devices. Similar to the base Android version but includes additional proprietary customizations from Google.</li> <li>One UI: User interface developed by Samsung for smart devices, including Android mobile devices since 2017. Versions exist for phones, tablets, smartwatches, and computers.</li> <li>HyperOS: User interface developed by Xiaomi, launched in 2023, replacing the previous MIUI</li> <li>ColorOS: Mobile operating system and user interface created by Oppo Electronics </li> <li>Realme UI: User interface developed by Realme, a subsidiary of Oppo Electronics, which also owns the OnePlus brand.</li> <li>Oxygen OS: Operating system developed by OnePlus exclusively for its smartphones. </li> <li>Harmony OS:    Operating system developed by Huawei. While sometimes presented as an entirely separate operating system, it is still based on Android and its prior customization layer, EMUI.  </li> <li>Hello UI: Graphic interface developed by Motorola, part of Lenovo. This video shows relevant aspects of the graphic interface. </li> <li>Xperia UI: User interface developed by Sony.   </li> <li>Magic OS: Operating system developed by Honor, previously a subsidiary of Huawei.</li> </ul>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#step-by-step-instructions","title":"Step-by-step instructions","text":"<p>The following section shows the steps to enable the developer options menu on different devices, along with screenshots of the relevant menus for each interface.</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#google-pixel-os","title":"Google (Pixel OS)","text":"<p>To enable the developer options in Pixel devices follow these steps, shown also on image 1. </p> <ol> <li>Open the device Settings \u2699\ufe0f  </li> <li>Navigate to the last option About phone \ud83d\udcf1  </li> <li>Navigate to the bottom and locate the Build Number \ud83d\udd22   </li> <li>Tap 7 times the  build number, until you see a confirmation message  \ud83d\udc46</li> </ol> <p></p> <p>Image 1. Steps to enable developer options on a Google Pixel running Android 13.</p> <p>From now on, the developer options will appear as an additional menu under System, and will remain enabled until they are manually disabled from the developer options menu. </p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#honor-magic-os","title":"Honor (Magic OS)","text":"<p>To enable the developer options in Honor devices follow these steps, shown also on image 2. </p> <ol> <li>Open the device Settings \u2699\ufe0f  </li> <li>Navigate to the last option About phone \ud83d\udcf1  </li> <li>Locate the Build Number \ud83d\udd22   </li> <li>Tap 7 times the  build number, until you see a confirmation message  \ud83d\udc46</li> </ol> <p>From now on, the developer options will appear as an additional menu under System &amp; Updates, and will remain enabled until they are manually disabled from the developer options menu. </p> <p></p> <p>Image 2. Steps to enable developer options on a Honor Magic Lite running Magic OS 7.1 and Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#motorola-hello-ui","title":"Motorola (Hello UI)","text":"<p>To enable the developer options in Motorola devices follow these steps, shown also on image 3. </p> <ol> <li>Open the device Settings \u2699\ufe0f  </li> <li>Navigate to the last option About phone \ud83d\udcf1  </li> <li>Navigate to the bottom and locate the Build Number \ud83d\udd22   </li> <li>Tap 7 times the  build number, until you see a confirmation message  \ud83d\udc46</li> </ol> <p>From now on, the developer options will appear as an additional menu under System, and will remain enabled until they are manually disabled from the developer options menu. </p> <p></p> <p>Image 3. Steps to enable developer options on a Motorola Edge Neo 40 running Hi OS and Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#nokia","title":"Nokia","text":"<p>To enable the developer options in Nokia devices follow these steps, shown also on image 4. </p> <ol> <li>Open the device Settings \u2699\ufe0f  </li> <li>Navigate to the last option About phone \ud83d\udcf1  </li> <li>Navigate to the bottom and locate the Build Number \ud83d\udd22   </li> <li>Tap 7 times the  build number, until you see a confirmation message  \ud83d\udc46</li> </ol> <p>From now on, the developer options will appear as an additional menu under System, and will remain enabled until they are manually disabled from the developer options menu. </p> <p></p> <p>Image 4.  Steps to enable developer options on a Nokia G42 5G running Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#oppo-reno-10-color-os","title":"Oppo Reno 10 (Color OS)","text":"<p>To enable the developer options in OPPO devices follow these steps, shown also on image 5. </p> <ol> <li>Open the device Settings \u2699\ufe0f  </li> <li>Navigate to the last option About phone \ud83d\udcf1</li> <li>Open the menu Version \ud83d\udcdd</li> <li>Navigate to the bottom and locate the build number \ud83d\udd22   </li> <li>Tap 7 times the  version number, until you see a confirmation message  \ud83d\udc46</li> </ol> <p>From now on, the developer options will appear as an additional menu under Additional Settings, and will remain enabled until they are manually disabled from the developer options menu. </p> <p></p> <p>Image 5. Steps to enable developer options on a Oppo device.</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#realme-realme-ui","title":"Realme (Realme UI)","text":"<p>To enable the developer options in Realme devices follow these steps, shown also on image 6. </p> <ol> <li>Open the device Settings \u2699\ufe0f  </li> <li>Navigate to the last option About phone \ud83d\udcf1</li> <li>Open the menu Version \ud83d\udcdd</li> <li>Navigate to the bottom and locate the build number \ud83d\udd22   </li> <li>Tap 7 times the  version number, until you see a confirmation message  \ud83d\udc46</li> </ol> <p>From now on, the developer options will appear as an additional menu under Additional Settings, and will remain enabled until they are manually disabled from the developer options menu. </p> <p></p> <p>Image 6. Steps to enable developer options on a Realme GT2 Pro with RealMe UI 4.0 and Android 13</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#samsung-one-ui","title":"Samsung (One UI)","text":"<p>To enable the developer options in Samsung devices follow these steps, shown also on image 7. </p> <ol> <li>Open the device Settings \u2699\ufe0f  </li> <li>Navigate to the last option About phone \ud83d\udcf1</li> <li>Open the menu Software Information \ud83d\udcdd</li> <li>Locate the build number \ud83d\udd22   </li> <li>Tap 7 times the  version number, until you see a confirmation message  \ud83d\udc46</li> </ol> <p></p> <p>Image 7. Steps to enable developer options on a Samsung Galaxy A54 with One UI and Android 13</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#sony-xperia-ui","title":"Sony (Xperia UI)","text":"<p>To enable the developer options in Sony devices follow these steps, shown also on image 8. </p> <ol> <li>Open the device Settings \u2699\ufe0f  </li> <li>Navigate to the last option About phone \ud83d\udcf1  </li> <li>Navigate to the bottom and locate the Build Number \ud83d\udd22   </li> <li>Tap 7 times the  build number, until you see a confirmation message  \ud83d\udc46</li> </ol> <p>From now on, the developer options will appear as an additional menu under System, and will remain enabled until they are manually disabled from the developer options menu. </p> <p></p> <p>Image 8.  Steps to enable developer options on a Sony Xperia 10V with Xperia UI 4.0 and Android 14.</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#tecno-hi-os","title":"Tecno (Hi OS)","text":"<p>To enable the developer options in Tecno Spark devices follow these steps, shown also on image 9. </p> <ol> <li>Open the device Settings \u2699\ufe0f  </li> <li>Navigate to the last option My phone \ud83d\udcf1  </li> <li>Locate the Build Number \ud83d\udd22   </li> <li>Tap 7 times the  build number, until you see a confirmation message  \ud83d\udc46</li> </ol> <p></p> <p>Image 9.  Steps to enable developer options on a Tecno Spark Go with Hi OS and Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#xiaomi-hyper-os","title":"Xiaomi (Hyper OS)","text":"<p>To enable the developer options in Xiaomi devices follow these steps, shown also on image 10. </p> <ol> <li>Abre el men\u00fa de Ajustes \u2699\ufe0f  </li> <li>Ingresa a la opci\u00f3n de Acerca del tel\u00e9fono \ud83d\udcf1  </li> <li>Ubica la informaci\u00f3n sobre el Versi\u00f3n de Sistema Operativo \ud83d\udd22   </li> <li>Presiona 7 veces sobre el n\u00famero de compilaci\u00f3n, hasta que veas un mensaje de confirmaci\u00f3n. \ud83d\udc46</li> </ol> <p></p> <p>image 10.  Steps to enable developer options on a Xiamoi device.</p> <p>Las opciones de desarrollador aparecer\u00e1n como un nuevo submen\u00fa dentro del apartado de Opciones avanzadas, y se mantendr\u00e1n habilitadas hasta que se deshabiliten (desde el men\u00fa de opciones de desarrollador). </p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#conclusion","title":"Conclusion","text":"<p>The graphical interface of Android devices varies between manufacturers that use the Android Open Source Project (AOSP) as a base. Each manufacturer develops its own customization layer, with different levels of modification, resulting in interfaces with different appearances, menus, and options.</p> <p>The developer options menu is a hidden menu that can be enabled through a simple procedure in the graphical interface and is necessary to modify key settings required during a forensic extraction process, such as the ADB console or generating a bug report. This resource compiles screenshots from different manufacturers and interfaces to make it easier for civil society analysts to enable developer options.</p> <p>If you have access to a graphical interface not shown in this list and would like to contribute a screenshot to this resource, you can contact us through an issue or, if you are comfortable with markdown, submit a pull request.</p>","tags":["how-to","intro"]},{"location":"how-tos/02-how-to-enable-developer-options/02-how-to-enable-developer-options.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html","title":"How to enable ADB on an Android device?","text":"2025-08-142025-08-14 <p>This resource falls under the how-to guides and presents the steps to enable USB debugging, also known as Android Debug Bridge or ADB, on different Android devices. It also provides a brief explanation of what USB debugging is and why it is useful in digital forensics. This is introductory material, complementary to other resources such as the explainer on log-based forensics for Android devices and the guide on enabling developer options, and is part of the steps to follow when making an acquisition of forensic evidence from an Android device. </p> <p>We appreciate the collaboration of RSF Security Lab, who provided us with a set of guides and screenshots that enabled the development of this resource. </p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#what-is-adb-or-usb-debugging-and-why-is-it-useful","title":"What is ADB or USB debugging, and why is it useful?","text":"<p>ADB stands for Android Debug Bridge. It is a command-line tool that allows direct communication with an Android device over USB, enabling the execution of various actions and commands.</p> <p>From a digital forensics perspective, particularly in log-based investigations using tools such as AndroidQF, ADB enables establishing a direct connection with a device. It is useful in situations where physical access to the device is available and when the goal is to obtain information directly from the device using native commands, without relying on additional tools. ADB or USB debugging is also necessary to complete an extraction using AndroidQF. </p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#how-to-enable-adb","title":"How to enable ADB?","text":"<p>In most cases, USB debugging or ADB can be found within the Developer Options menu. Therefore, if this menu has not yet been enabled, you should first follow the relevant instructions for enabling it.</p> <p>The following section provides step-by-step instructions for enabling ADB on different Android models and versions.</p> Why is ADB enabled differently on Android devices? <p>The Android operating system is based on the Android Open Source Project. However, most manufacturers use a propietary version developed by Google, on top of which manufacturers add personalization layers. </p> <p> Read more here </p> <p>The following section shows the steps to enable ADB menu on different devices, along with screenshots of the relevant menus for each interface.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#google-pixel-os","title":"Google (Pixel OS)","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a Pixel device, also shown on image 1.  </p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to System</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>Image 1. Steps to enable ADB on a Google Pixel running Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#honor-magic-os","title":"Honor (Magic OS)","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a Honor device, also shown on image 2.  </p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to System and Updates</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>Image 2. Steps to enable ADB on a Honor Magic Lite running Magic OS 7.1 and Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#motorola-hello-ui","title":"Motorola (Hello UI)","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a Motorola device, also shown on image 3.  </p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to System</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>Image 3. Steps to enable ADB on a Motorola Edge Neo 40 running Hi OS and Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#nokia","title":"Nokia","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a Nokia device, also shown on image 4.  </p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to System</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>Image 4.  Steps to enable ADB on a Nokia G42 5G running Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#oppo-reno-10-color-os","title":"Oppo Reno 10 (Color OS)","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a OPPO device, also shown on image 5.</p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to Additional Settings</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>Image 5. Steps to enable ADB on a Oppo device.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#realme-realme-ui","title":"Realme (Realme UI)","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a Realme device, also shown on image 6.  </p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to Additional Settings</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>Image 6. Steps to enable ADB on a Realme GT2 Pro with RealMe UI 4.0 and Android 13</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#samsung-one-ui","title":"Samsung (One UI)","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a Samsung device, also shown on image 7.  </p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>Image 7. Steps to enable ADB on a Samsung Galaxy A54 with One UI and Android 13</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#sony-xperia-ui","title":"Sony (Xperia UI)","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a Sony device, also shown on image 8.  </p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to System</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>Image 8.  Steps to enable ADB on a Sony Xperia 10V with Xperia UI 4.0 and Android 14.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#tecno-hi-os","title":"Tecno (Hi OS)","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a Tecno Spark device, also shown on image 9.  </p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to System</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>Image 9.  Steps to enable ADB on a Tecno Spark Go with Hi OS and Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#xiaomi-hyper-os","title":"Xiaomi (Hyper OS)","text":"<p>To enable ADB it is necessary to have access to the developer options menu. If you have not enabled this menu, you can follow these steps to enable developer options on a Sony device, also shown on image 10.  </p> <ol> <li>Open the device Settings \u2699\ufe0f</li> <li>Navigate to Additional Settings</li> <li>Navigate to Developer Oprtions \ud83e\udd16**</li> <li>Enable the first option USB debugging \ud83d\udda5\ufe0f</li> <li>Confirm thtat you want to enable USB debugging in the pop-up menu \u2705</li> </ol> <p></p> <p>image 10.  Steps to enable ADB on a Xiamoi device.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#conclusion","title":"Conclusion","text":"<p>ADB, or Android Debug Bridge, is a native Android command-line tool that allows direct interaction with a device. In forensic analysis contexts, it can be useful for obtaining information that supports triage without the need for third-party tools.</p> <p>Due to the wide variety of manufacturers and Android operating system versions, this guide presents a list of manufacturers and step-by-step instructions to enable ADB, helping facilitate and promote consent-based forensic analysis in support of civil society.</p> <p>If you have access to a graphical interface not shown in this list and would like to contribute a screenshot to this resource, you can contact us through an issue or, if you are comfortable with markdown, submit a pull request.</p>","tags":["how-to","intro"]},{"location":"how-tos/03-how-to-enable-adb/03-how-to-enable-adb.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["how-to","intro"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html","title":"How to perform an extraction with AndroidQF?","text":"2025-08-212025-08-21 <p>This resource falls within the category how-to guides, provides instructions on how to perform a forensic extraction using the AndroidQF tool.</p>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#what-is-androidqf","title":"What is AndroidQF?","text":"<p>AndroidQF is an open-source software tool useful to extract key information and artifacts from an Android device. It is currently maintained by Amnesty International\u2019s Security Lab.</p> <p>AndroidQF was designed to support investigations managed by technical labs and practitioners in support of journalists, activists and human rights defenders who might face surveillance and spyware threats.</p> <p>AndroidQF acts as a forensic wrapper around ADB, automating common commands through modules that enable quick, safe, and local extractions from any operating system (Linux, Windows, or macOS), without relying on cloud services or complex installations.</p> <p>Its utility for civil society contexts lies in its portability, ease of use, and local execution.</p> <p>This guide is complemented by other materials, such as the dictionary of files generated by AndroidQF or the explainer on log-based forensics for Android devices.</p>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#what-do-i-need-to-perform-an-extraction-with-androidqf","title":"What do I need to perform an extraction with AndroidQF?","text":"<p>To perform a forensic extraction with AndroidQF, you will need:</p> <ul> <li>The Android device to be analyzed: Enable Developer Mode and USB Debugging. If needed, consult our guides on enabling Developer Options or on how to enable ADB.</li> <li>A computer (Windows, Linux, or macOS): This will be used for the extraction. You must know the chip architecture of your system.</li> <li>A data transfer cable (phone-to-computer).</li> </ul>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#steps-to-perform-a-forensic-extraction-with-androidqf","title":"Steps to perform a forensic extraction with AndroidQF","text":"<p>Below are the detailed steps to perform the forensic extraction:</p>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#download-the-androidqf-binary","title":"Download the AndroidQF binary","text":"<ul> <li> <p>Download the most recent version of the binary corresponding to the architecture of your computer. Binaries are available from the releases page of the repository:https://github.com/mvt-project/androidqf/releases/ </p> <p>How to identify your architecture??</p> <p>If you\u2019re unsure of your system\u2019s architecture, consult this resource to determine which chip is integrated into your device. </p> </li> <li> <p>Create a new folder to store the device extraction and move the downloaded binary into this folder.</p> </li> </ul>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#assign-execution-permissions-to-the-binary-linux-and-macos-only","title":"Assign execution permissions to the binary (Linux and macOS only)","text":"<ul> <li> <p>f you are using Linux or macOS, you must assign execution permissions to the binary before running it. Open a terminal, navigate to the folder containing the binary, and execute:</p> <p>Complete the file name</p> <p>The commands below are missing the exact version. Make sure you use the full name of the binary when completing the commands. It will look something like this:</p> <pre><code>chmod +x ./androidqf_v1.7.1_linux_amd64\n</code></pre> <p>Linux:</p> <pre><code>chmod +x ./androidqf_\n</code></pre> <p>MacOS:</p> <pre><code>chmod +x ./androidqf_\n</code></pre> </li> </ul>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#connect-the-phone","title":"Connect the phone","text":"<ul> <li> <p>Connect the unlocked Android device to the computer using a USB data cable.</p> <p>Not all USB cables are equal</p> <p>Some cables lack the necessary pin and connections for data transfer. While this is good from a privacy standpoint, it will not work for an extraction. Ensure you are using a cable that supports data transfer (these are often the original cables included with devices or fast-charging cables).  </p> </li> <li> <p>When the phone is connected, a pop-up will appear requesting permission to allow USB debugging. Select Allow, as shown in Image 1.</p> <p>No pop-up o prompt appears</p> <p>If no prompt appears asking for permissions, try the following: </p> <ul> <li>Verify that USB Debugging is enabled.</li> <li>Check USB configuration settings and confirm that File Transfer mode is selected.</li> <li>Try with a different cable. Ensure the cable supports data transfer.</li> </ul> <p></p> <p>Image 1. Screen capture of an Android Samsung device asking for data access permission</p> </li> </ul>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#run-androidqf","title":"Run AndroidQF","text":"<p>At this point, AndroidQF can be executed.</p> Linux y MacOSWindows <p>Execute the following command. Make sure you add the full binary name i.e. androidq_. </p> <pre><code>./androidqf-linux-v?\n./androidqf-macos-v?\n</code></pre> <p></p> <p>Image 2. Screen capture of a Linux terminal executing the androidqf binary to start an extraction.</p> <ul> <li>Go to the folder where you downloaded the binary, as instructed on step 1. Double click the file and a security alert window should pop-up. Click on more information. </li> </ul> <p></p> <p>Imagen 3. Screen capture of a windows computer in Spanish showing a security message and the \"more information\" option.</p> <ul> <li>Select \u201cRun Anyway\u201d</li> </ul> <p></p> <p>Imagen 4. Screen capture of a windows computer in Spanish showing the \"Windows protected your PC message\".</p>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#confirm-and-configure-the-extraction","title":"Confirm and configure the extraction","text":"<p>The following steps will be applied equally on Linux, Windows, or macOS. Once executed, AndroidQF will:</p> <ul> <li>Automatically detect the connected device. This should happen as long as USB debugging has been enabled.</li> <li> <p>Create a folder with a random UUID to store the files pertaining to the extraction.</p> <p>What is the UUID?</p> <p>A UUID is a randomly generated number expressed as 32 hexadecimal digits separated into groups of 8-4-4-4-12 digits, for example: <code>0caba18f-20a7-48d0-b9ba-724fdaa3ff85</code></p> </li> <li> <p>AndroidQF will then ask what type of backup to perform::</p> <ul> <li>Only SMS: Backup limited to SMS and MMS messages.</li> <li>Everything: Full device backup using <code>adb backup</code> </li> <li>No Backup: Skips backup entirely and extracts only other artifacts via ADB.</li> </ul> <p>Alternative</p> <p>In this example we use the Only-SMS option to limit the extraction to only SMS messages, reducing the exposure of additional personal data. Alternatively you can select the everything option for a full device backup, that might include additional files from applications that have subscribed to the system backup function. Be aware that the <code>adb backup</code> function is being deprecated, and is not a reliable way to make a full device backup.</p> <p></p> <p>Image 6. Screenshot of a Linux system terminal, showing the AndroidQF backup menu with the \"Only SMS\" option selected. </p> </li> <li> <p>Once you selected the type of backup, AndroidQF will request an encryption password for the backup generated through ADB. In this example, we are using the password sd (initials of seguridad digital).This process is depicted in image 7. </p> <p>Alternative</p> <p>If you choose to use more complex randomly generated passwords, make sure to **store them in a password manager ** with proper backups. Alternatively, and particularly if you have adequate infrastructure and solid policies for the protection of evidence, a simple standard password should be enough. </p> <p></p> <p>Image 7. Screenshot of a Samsung mobile device asking for the backup password (\"sd\" in this example)</p> </li> <li> <p>Select: \u201cBackup now\u201d.</p> <p></p> <p>Image 8. Screenshot of a Samsung mobile on the backup and restore screen</p> <p>Common &amp; expected error messages</p> <p>You can expect some errors related to \"failed to get file paths for package\". This errors do not affect the extraction, and are NOT an indication of a major issue.</p> <p></p> <p>Image 9. Screenshot showing expected errors related to file paths. </p> </li> <li> <p>After identifying installed packages, AndroidQF will ask which application APKs to download:</p> <ul> <li>All: Downloads all APKs, including system apps. </li> <li>Only non-system packages: Download only user-installed apps.</li> <li>Do not download any: Skip APK downloads entirely.</li> </ul> <p>What should I select?</p> <p>The best approach will depend on the context of the investigation. If you suspect of an advanced attack that might have impacted system apps, then use the \"All\" option. On the other hand, if you are mostly interested in the user downloaded apps, you can select \"only non-system packages\". Omitting system apps will make the extraction smaller in size and a little faster. </p> <p></p> <p>Image 10. Screenshot of a Linux system showing the APK selection options, and highlighting the only non-system option. </p> </li> <li> <p>Next, AndroidQF will ask whether to exclude APKs signed by trusted developers (e.g., Google or the device manufacturer) to reduce the size of the extraction.</p> <ul> <li>Answer yes, so you can focus the analysis on potentially suspicious apps, while saving space.</li> </ul> <p>Sophisticated attacks</p> <p>If you believe you are dealing with an advanced threat, sophisticated enough to meddle with trusted applications certificates, then **select the option \"No\". </p> <p></p> <p>Imagen 11. Screenshot of the process in a Linux terminal, using the option to omit applications signed by trusted certificates. </p> </li> <li> <p>Wait until all modules of AndroidQF are executed.</p> <p>How long does it take?</p> <p>The process may take several minutes to a an hour depending on the phone model and data size. Progress is displayed line by line in the terminal. At the end, press Enter to finish.</p> <p></p> <p>Image 12. Screenshot of a Linux terminal displaying the messages and progress displayed on a successful AndroidQF extraction. </p> </li> </ul>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#verify-the-extraction","title":"Verify the extraction","text":"<p>Once complete,  it is important to verify that the acquisition was completed successfully:</p> <ul> <li>Open the file <code>command.log</code> and search for warning or error messages. If you find matches, verify the errors and warning messages and ssess whether they are critical failures. </li> </ul> Linux / MacOSWindows <p>Use the following command inside the acquisition folder:</p> <pre><code>grep -i \"WARNING\\|ERROR\" command.log\n</code></pre> <p></p> <p>Imagen 12. Grep command on a Linux system looking for errors on the extraction.</p> <p>Open the <code>command.log</code> file using Notepad. Open the search menu from the navigation bar or using the keyboard shortcut ctrl+b y search for WARNING or ERROR.</p> <p></p> <p>Imagen 14. Screen-capture of Windows notepad searching for errors in the command.log file </p> <ul> <li> <p>Check that the file <code>acquisition.json</code> exists and contains expected data. For additional information, consult the AndroidQF extracted files dictionary. </p> <p></p> <p>Imagen 15. Screenshot of a text editor displaying the acquisition.json file from an AndoridQF extraction.</p> </li> <li> <p>Ensure that the following files and folders were generated in the output directory:</p> <pre><code>\u251c\u2500\u2500 apks/\n\u251c\u2500\u2500 logs/\n\u251c\u2500\u2500 tmp/\n\u251c\u2500\u2500 .json  \n\u251c\u2500\u2500 backup.ab  \n\u251c\u2500\u2500 bugreport.zip  \n\u251c\u2500\u2500 command.log  \n\u251c\u2500\u2500 dumpsys.txt  \n\u251c\u2500\u2500 env.txt  \n\u251c\u2500\u2500 files.json  \n\u251c\u2500\u2500 getprop.txt  \n\u251c\u2500\u2500 hashes.csv  \n\u251c\u2500\u2500 logcat.txt  \n\u251c\u2500\u2500 packages.json  \n\u251c\u2500\u2500 processes.txt  \n\u251c\u2500\u2500 root_binaries.json  \n\u251c\u2500\u2500 selinux.txt  \n\u251c\u2500\u2500 services.txt  \n\u251c\u2500\u2500 settings_global.txt  \n\u251c\u2500\u2500 settings_secure.txt  \n\u2514\u2500\u2500 settings_system.txt  \n</code></pre> <p></p> <p>Imagen 16. Screenshot of a Linux system showing the files generated by AndroidQF on a successful extraction</p> </li> </ul>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#conclusion","title":"Conclusion","text":"<p>AndroidQF enables forensic acquisition and extraction from Android devices. It is widely used by civil society labs due to its practicality, simplicity, and portability. This guide presented the step-by-step process to conduct an extraction using Windows, Linux or MacOS systems. </p> <p>Forensic acquisition is one of the first steps in an investigation and is essential for starting triage. The extracted data can then be analyzed manually (see the file dictionary) or with tools such as MVT.</p> <p>If you would like to contribute to this or other resoruces, please check our community section to learn more about how to collaborate and improve this resource. </p>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/04-how-to-extract-with-androidqf/04-how-to-extract-with-androidqf.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["androidqf","extraction","acquisition","adquisicion","extraccion"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html","title":"Gu\u00eda: How to extract a bugreport from an Android device?","text":"2025-08-272025-08-27 <p>This resource falls under the how-to guides and details the steps required to generate a bugreport, both using the ADB debugging console and through the device\u2019s graphical user interface (GUI). It is an introductory material, complementary to other resources such as the explainer on log-based forensics for Android devices and the guide on how to enable ADB.</p> <p>We appreciate the collaboration of RSF Security Lab, who provided us with a set of guides and screenshots that enabled the development of this resource. </p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#what-is-a-bugreport-and-why-is-it-useful","title":"What is a bugreport and why is it useful?","text":"<p>As the name suggests, a bugreport is a collection of logs and diagnostic information that helps identify and fix errors when developing an Android application.  In the context of consent-based forensic analysis, the bugreport is a valuable forensic artifact for Android device triage, including use with the MVT tool. For instance, Amnesty Tech used a similar technique to detect the NoviSpy spyware.</p> <p>Android natively allows generating bugreports both through the graphical user interface and through the ADB console. Below we include instructions on how to generate a bugreport through both approaches. </p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#what-do-you-need-to-extract-a-bugreport","title":"What do you need to extract a bugreport?","text":"<p>Below are the requirements for extracting a bugreport using the graphical interface (GUI) and the ADB console.</p> GUIUsing ADB <p>To extract the bugreport from the GUI, it is necessary to have access to the Android device and to enable developer options. If you are not sure how to enable developer options on your device, consult this how-to guide.</p> <p>To extract Para extraer un bugreport a trav\u00e9s de la consola de ADB es necesario: </p> <ul> <li>The Android device to be analyzed: Enable Developer Mode and USB Debugging. If needed, consult our guides on enabling Developer Options or on how to enable ADB.</li> <li>A computer (Windows, Linux, or macOS): This will be used for the extraction. </li> <li>A data transfer cable (phone-to-computer).</li> </ul>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#steps-to-generate-a-bugreport-using-the-gui","title":"Steps to generate a bugreport using the GUI","text":"<p>On most Android devices, it is possible to generate a bugreport without installing additional tools, simply by navigating through the device menus. This is the preferred method when asking a defender to share this forensic artifact remotely.</p> <p>Do you need to generate bugreports on several devices? Try ADB</p> <p>Extracting a bugreport using ADB might be quicker and more efficient if you need to extract information from more than one device.  </p> <p> Take me to the ADB instructions</p> <p>Because of how the Android operating system is developed and the additional customization layers added by each manufacturer, the exact instructions to generate a bugreport vary slightly across manufacturers. Below we present instructions for a few common models and customization layers. </p> <p>WWhy do instructions vary across devices?</p> <p>The Android operating system is based on the Android Open Source Project. However, most manufacturers use a propietary version developed by Google, on top of which manufacturers add personalization layers. </p> <p> Read more here </p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#honor-magic-5-lite-magic-os","title":"Honor Magic 5 Lite (Magic OS)","text":"<p>To generate a bugreport you need access to developer options. If this menu has not yet been enabled, follow these steps to enable developer options on a Honor device.</p> <p>Once developer options are enabled, follow these steps to generate a bugreport (see Image 1):</p> <ol> <li>Open Settings</li> <li>Navigate to the menu System &amp; Updates</li> <li>Go to Developer Options</li> <li>Select Create bug report</li> <li>Choose Full Report</li> <li>Tap \u201cReport\u201d</li> <li>When the bugreport is complete, a notification indicating \"Bug report captured\" will appear. Tap the notification to open the sharing settings.   </li> <li>You will see a warning message informing about sensitive data. Click Ok </li> <li>Select the preferred mechanism and share the bugreport </li> </ol> <p></p> <p>image 1.  Steps to generate a bug report on a Honor Magic Lite running Magic OS 7.1.</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#motorola-hello-ui","title":"Motorola (Hello UI)","text":"<p>To generate a bugreport you need access to developer options. If this menu has not yet been enabled, follow these steps to enable developer options on a  Motorola device**.</p> <p>Once developer options are enabled, follow these steps to generate a bugreport (see Image 2):</p> <ol> <li>Open Settings</li> <li>Navigate to the menu System</li> <li>Go to Developer Options</li> <li>Select Bug report</li> <li>Choose Full Report</li> <li>Tap \u201cReport\u201d</li> <li>When the bugreport is complete, a notification indicating \"Bug report captured\" will appear. Tap the notification to open the sharing settings.   </li> <li>You will see a warning message informing about sensitive data. Click Ok </li> <li>Select the preferred mechanism and share the bugreport </li> </ol> <p></p> <p>image 2.  Steps to generate a bug report on a Motorola Edge Neo 40 running Hello UI.</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#nokia","title":"Nokia","text":"<p>To generate a bugreport you need access to developer options. If this menu has not yet been enabled, follow these steps to enable developer options on a  Nokia device**. </p> <p>Once developer options are enabled, follow these steps to generate a bugreport (see Image 3):</p> <ol> <li>Open Settings</li> <li>Navigate to the menu System</li> <li>Go to Developer Options</li> <li>Select Bug report</li> <li>Choose Full Report</li> <li>Tap \u201cReport\u201d</li> <li>When the bugreport is complete, a notification indicating \"Bug report captured\" will appear. Tap the notification to open the sharing settings.   </li> <li>You will see a warning message informing about sensitive data. Click Ok </li> <li>Select the preferred mechanism and share the bugreport </li> </ol> <p></p> <p>image 3.  Steps to generate a bug report on a Nokia G42 5G running Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#oppo-magic-os","title":"Oppo (Magic OS)","text":"<p>To generate a bugreport you need access to developer options. If this menu has not yet been enabled, follow these steps to enable developer options on a Oppo device**. </p> <p>Once developer options are enabled, follow these steps to generate a bugreport (see Image 4):</p> <ol> <li>Open Settings</li> <li>Navigate to the menu Additional Settings</li> <li>Go to Developer Options</li> <li>Select Bug report</li> <li>Choose Full Report</li> <li>Tap \u201cReport\u201d</li> <li>When the bugreport is complete, a notification indicating \"Bug report captured\" will appear. Tap the notification to open the sharing settings.   </li> <li>You will see a warning message informing about sensitive data. Click Ok </li> <li>Select the preferred mechanism and share the bugreport </li> </ol> <p></p> <p>image 4. Steps to generate a bug report on a OPPO Reno 10 running Android 13</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#realme-realme-ui","title":"Realme (Realme UI)","text":"<p>To generate a bugreport you need access to developer options. If this menu has not yet been enabled, follow these steps to enable developer options on a Realme device**. </p> <p>Once developer options are enabled, follow these steps to generate a bugreport (see Image 5):</p> <ol> <li>Open Settings</li> <li>Navigate to the menu Additional Settings</li> <li>Go to Developer Options</li> <li>Select Bug report</li> <li>Choose Full Report</li> <li>Tap \u201cReport\u201d</li> <li>When the bugreport is complete, a notification indicating \"Bug report captured\" will appear. Tap the notification to open the sharing settings.   </li> <li>You will see a warning message informing about sensitive data. Click Ok </li> <li>Select the preferred mechanism and share the bugreport </li> </ol> <p></p> <p>image 5. Steps to generate a bug report on a Realme GT2 Pro with RealMe UI 4.0 and Android 13</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#samsung-one-ui","title":"Samsung (One UI)","text":"<p>To generate a bugreport you need access to developer options. If this menu has not yet been enabled, follow these steps to enable developer options on a Samsung device**. </p> <p>Once developer options are enabled, follow these steps to generate a bugreport (see Image 6):</p> <ol> <li>Open Settings</li> <li>Go to Developer Options</li> <li>Select Bug report</li> <li>Choose Full Report</li> <li>Tap \u201cReport\u201d</li> <li>When the bugreport is complete, a notification indicating \"Bug report captured\" will appear. Tap the notification to open the sharing settings.   </li> <li>You will see a warning message informing about sensitive data. Click Ok </li> <li>Select the preferred mechanism and share the bugreport </li> </ol> <p></p> <p>image 6. Steps to generate a bug report on a Samsung Galaxy A54 with One UI and Android 13</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#sony-xperia-ui","title":"Sony (Xperia UI)","text":"<p>To generate a bugreport you need access to developer options. If this menu has not yet been enabled, follow these steps to enable developer options on a Sony device**.</p> <p>Once developer options are enabled, follow these steps to generate a bugreport (see Image 7):</p> <ol> <li>Open Settings</li> <li>Navigate to the menu System</li> <li>Go to Developer Options</li> <li>Select Bug report</li> <li>Choose Full Report</li> <li>Tap \u201cReport\u201d</li> <li>When the bugreport is complete, a notification indicating \"Bug report captured\" will appear. Tap the notification to open the sharing settings.   </li> <li>You will see a warning message informing about sensitive data. Click Ok </li> <li>Select the preferred mechanism and share the bugreport </li> </ol> <p></p> <p>image 7. Steps to generate a bug report on a Sony Xperia 10V with Xperia UI 4.0 running Android 14.</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#tecno-hi-os","title":"Tecno (Hi OS)","text":"<p>To generate a bugreport you need access to developer options. If this menu has not yet been enabled, follow these steps to enable developer options on a Tecno device**.  . </p> <p>Once developer options are enabled, follow these steps to generate a bugreport (see Image 8):</p> <ol> <li>Open Settings</li> <li>Navigate to the menu System</li> <li>Go to Developer Options</li> <li>Select Bug report</li> <li>Choose Full Report</li> <li>Tap \u201cReport\u201d</li> <li>When the bugreport is complete, a notification indicating \"Bug report captured\" will appear. Tap the notification to open the sharing settings.   </li> <li>You will see a warning message informing about sensitive data. Click Ok </li> <li>Select the preferred mechanism and share the bugreport </li> </ol> <p></p> <p>image 8.  Steps to generate a bug report on a Tecno Spark Go with Hi OS running Android 13.</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#xiaomi-hyper-os","title":"Xiaomi (Hyper OS)","text":"<p>To generate a bugreport you need access to developer options. If this menu has not yet been enabled, follow these steps to enable developer options on a Xiaomi device. </p> <p>Once developer options are enabled, follow these steps to generate a bugreport (see Image 9):</p> <ol> <li>Open Settings</li> <li>Navigate to the menu About phone</li> <li>Go to Detailed info and specs</li> <li>Find the information corresponding to CPU and tap 5 times report</li> <li>A notification pop-up will appear warning about personal data in the bugreport. Click Agree</li> <li>Tap \u201cReport\u201d</li> <li>When the bugreport is complete, a notification indicating \"Bug report captured\" will appear. Tap the notification to open the file explorer.   </li> <li>Locate the bugreport that has been just generated, and clikc to open the Sharing settings. </li> <li>Select the preferred mechanism and share the bugreport </li> </ol> <p></p> <p>image 9.  Steps to generate a bug report on a Xiaomi 13T.</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#steps-to-generate-a-bugreport-via-the-adb-console","title":"Steps to generate a bugreport via the ADB console","text":"<p>In addition to the graphical method, it is possible to generate a bugreport via the ADB console. Remember to enable USB debugging before following these steps.</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#generate-the-bugreport","title":"Generate the bugreport","text":"<p>If you only have one device connected, you can obtain a bugreport using the following command:</p> <pre><code>$ adb bugreport\n</code></pre> <p>By default, the report is saved in the local directory. To specify a path you can add the parameter at the end of the command as follows:</p> <pre><code>$ adb bugreport E:\\Reports\\MyBugReportsPath\n</code></pre> <p>Multiple Devices</p> <p>If multiple devices are connected, specify the device with the -s option. First, list connected devices using <code>adb devices</code> to obtain the device identifier and generate the bugreport as follows: </p> <pre><code>$ adb devices\nList of devices attached\nemulator-5554      device\n8XV7N15C31003476 device\n\n$ adb -s 8XV7N15C31003476 bugreport\n</code></pre>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#extract-the-bugreport","title":"Extract the bugreport","text":"<p>In order to extract the bugreport, you have to first identify which bugreport to extract. To do this, you can use the command <code>adb shell ls /bugreports/</code> to see the stored reports on the default location <code>/bugreports/.</code> </p> <pre><code>$ adb shell ls /bugreports/\nbugreport-foo-bar.xxx.YYYY-MM-DD-HH-MM-SS-dumpstate_log-yyy.txt\nbugreport-foo-bar.xxx.YYYY-MM-DD-HH-MM-SS.zip\ndumpstate-stats.txt\n</code></pre> <p>Once you identify the bugreport to extract, you can copy to the local computer using the following command. </p> <pre><code>$ adb pull /bugreports/bugreport-foo-bar.xxx.YYYY-MM-DD-HH-MM-SS.zip\n</code></pre>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#conclusion","title":"Conclusi\u00f3n","text":"<p>A bugreport is an error report generated by the Android operating system  that contains diagnostic information designed primarily for debugging application errors. However, many of the logs and behaviors included are also useful for forensic analysis. Extracting a bugreport is one of the first steps in an investigation cycle and is a frequent way to begin the triage process on Android devices.</p> <p>Due to the diversity of manufacturers and Android versions, this guide presents a list of step-by-step instructions to generate a bugreport, to facilitate and promote consent-based forensic analysis in benefit of civil society. Always ensure you discuss and obtain informed consent before extracting forensic information.</p> <p>If you have access to a graphical interface not captured in this resource and would like to contribute the necessary screenshots to add this resource, you can contact us through an issue or, if you are comfortable with markdown, submit a pull request.</p>","tags":["how-to","intro"]},{"location":"how-tos/05-how-to-extract-bugreport/05-how-to-extract-bugreport.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["how-to","intro"]},{"location":"references/index.html","title":"Reference","text":"<p>In this section you will find references. According to Diataxis documentation framework reference material describes the machinery. It should be austere. One hardly reads reference material; one consults it. There should be no doubt or ambiguity in reference; it should be wholly authoritative. Reference contains technical knowledge that can be helpful when executing a task. </p> <p>A good example of a reference is a map. It is a clear, neutral and precise resource that serves as support when completing a task, in this case getting from point A to point B. </p>","tags":["indice","reference"]},{"location":"references/index.html#published-references","title":"Published references","text":"<ul> <li> <p> Dictionary of output files generated by androidqf</p> <p>Contains information about files generated by the tool androidqf when conducting a forensic extraction of an Android device and describes why they are useful. The objective is to facilitate the understanding of the resulting files, including what information is included and why it could be helpful from a forensic standpoint.</p> <p> Dictionary of output files generated by androidqf</p> </li> <li> <p> MVT bugreport output file dictionary</p> <p>Contains information about files generated by the tool MVT when analyzing a bugreport using the command  mvt-android check-bugreport. The objective is to facilitate the understanding of the resulting files, including what information is included and why it could be helpful from a forensic standpoint.</p> <p> Diccionario de archivos generados por la herramienta androidqf</p> </li> </ul>","tags":["indice","reference"]},{"location":"references/00-glossary.html","title":"Glossary","text":"2025-08-052025-08-05 <p>This document is part of a technical documentation repository whose main objective is to establish a baseline of proven, flexible and accessible knowledge to boost consensual forensic analysis in support of civil society across the globe. To organize the contents, we use the technical documentation framework Di\u00e1taxis. </p> <p>This particular resource is a glossary of terms that includes concepts, abbreviations, and other terminology considered important for a comprehensive understanding of the material. </p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#terms","title":"Terms","text":"","tags":["glossary","reference"]},{"location":"references/00-glossary.html#adb","title":"ADB","text":"<p>ADB stands for Android Debug Bridge. It is a command-line tool that enables direct communication via USB with an Android device, allowing the execution of various actions and commands.</p> <p>In the context of digital forensics, especially in log-based investigations using tools like AndroidQF, ADB allows direct communication with the device. It is useful when there is physical access to the device and when retrieving information through native commands, without relying on additional tools.</p> <p>You can read more about ADB on the Android Developers Website.  </p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#adb-generated-backup","title":"ADB-Generated Backup","text":"<p>One of the console commands in ADB allows for creating a full backup of the device, including applications and some configurations. This is usually done with the <code>adb backup</code> command or via tools like AndroidQF. When executed, the device will prompt for a password to encrypt the information.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#acquisition","title":"Acquisition","text":"<p>This refers to a stage in forensic investigation where the forensic analyst must determine the best method to collect digital evidence, and apply it to gather the relevant artifacts. </p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#androidqf","title":"AndroidQF","text":"<p>AndroidQF is a free and open-source software tool focused on forensic extraction from Android devices, currently maintained by the [Amnesty International Security Lab](https://securitylab.amnesty.org/.</p> <p>It is especially designed for journalists, activists, human rights defenders, and technical labs supporting cases of digital surveillance and spyware threats.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#apk","title":"APK","text":"<p>According to Wikipedia, an APK file (Android Application Package) is used by the Android operating system to distribute and install packaged application components for smartphones and tablets. It is a variant of the Java JAR format.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#binary","title":"Binary","text":"<p>Software binaries refer to files containing only precompiled binary code \u2014 i.e., instructions readable by machines and ready to execute. Examples include files with the <code>.bin</code>, <code>.exe</code> or <code>.app</code> extensions.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#bit-by-bit-copy","title":"Bit-by-bit copy","text":"<p>A bit-by-bit copy, also known as a disk image or DD, is the process of creating an exact replica of an electronic medium. It helps preserve the integrity of the original evidence by avoiding direct manipulation and ensuring compliance with best practices.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#bugreport","title":"Bugreport","text":"<p>A native command-line tool on Android, available via the graphical interface or ADB shell. It generates a bug report containing diagnostic logs, including outputs from logcat, dumpsys, and dumpstate. It is packaged in a <code>.zip</code> file with a structured folder system containing error logs, memory usage, system calls, network and device information, among others.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#chain-of-custody","title":"Chain of custody","text":"<p>The process of clearly documenting who accessed the evidence and how it was handled is known as the chain of custody. Forensic evidence can be manipulated or destroyed during investigation, so the analyst must demonstrate the integrity of the evidence. If this cannot be properly demonstrated, the evidence may not be admissible in legal proceedings, or may be challenged and dismissed by other experts.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#cve","title":"CVE","text":"<p>A program and reference method for reporting, classifying, and publishing security vulnerabilities. Each vulnerability is assigned a unique CVE ID, such as <code>CVE-2014-0160</code>.</p> <p>Read the wikipedia page here. </p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#data-integrity","title":"Data integrity","text":"<p>Data integrity, along with confidentiality and availability, is one of the key principles of information security. It aims to ensure that data is accurate and reliable, and has not been altered \u2014 whether intentionally or accidentally \u2014 while at rest, in use, or in transit.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#developer-mode","title":"Developer mode","text":"<p>Developer options refer to a hidden menu in the Android operating system that enables advanced features designed for debugging apps or system-level changes. It includes options like graphical driver settings, advanced network configurations, and experimental features.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#dfir-digital-forensics-and-incident-response","title":"DFIR (Digital Forensics and Incident Response)","text":"<p>This acronym refers to Digital Forensics and Incident Response. It is the result of integrating the incident response and forensic analysis procedure into a single set of combined tasks that cover aspects of both processes. </p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#diataxis","title":"Diataxis","text":"<p>Di\u00e1taxis is a framework for writing and organizing technical documentation. Its core principle is grouping content into four categories: Explanations, How-to Guides, Tutorials, and References. Each content type addresses a specific user need and has a distinct purpose and style.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#digital-forensics","title":"Digital forensics","text":"<p>Digital forensics is the process used to collect, preserve, analyze, and present digital evidence obtained from electronic media and devices, using reliable, accurate, and repeatable investigative techniques and scientific methods, ensuring results can be used in legal proceedings. 1</p> <p>It involves discovering and examining data on electronic devices to identify, recover, document, and interpret information and its relation to digital attacks. Following standard procedures and best practices helps produce actionable evidence, which can support accountability efforts and reduce the impunity behind digital attacks.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#exploit","title":"Exploit","text":"<p>An exploit is a piece of software, data, script, or sequence of actions used to leverage a security vulnerability in an information system to cause unintended behavior.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#expert-witness","title":"Expert witness","text":"<p>According to Wikipedia, an expert witness is a person recognized as a reliable source in a particular field, whose ability to assess and decide competently gives them authority among peers or the public.</p> <p>In forensic investigations, an expert is someone with certified knowledge (for example through industry certifications or proven equivalent experience) who can analyze, evaluate, and issue opinions on collected evidence.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#forensic-artifact","title":"Forensic artifact","text":"<p>A forensic artifact refers to evidence or data recovered during digital forensic analysis. This includes files, process logs, system logs, metadata, and more.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#google-takeout","title":"Google Takeout","text":"<p>A feature for Google online accounts that allows users to extract data from different apps, access logs, security logs, email, etc. The process takes several days to complete.</p> <p>Use this link to access the feature and start a takeout request.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#graphical-user-interface","title":"Graphical User Interface","text":"<p>According to wikipedia, Graphical User Interface or GUI a form of user interface that allows users to interact with electronic devices through graphical icons and visual indicators such as secondary notation. In many applications, GUIs are used instead of text-based UIs, which are based on typed command labels or text navigation. GUIs were introduced in reaction to the perceived steep learning curve of command-line interfaces (CLIs), which require commands to be typed on a computer keyboard.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#hash","title":"Hash","text":"<p>A hash is a cryptographic function that produces a unique value for a given data set. Common examples include MD5 and SHA1.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#identification","title":"Identification","text":"<p>A stage in the forensic process where the analyst determines which devices, accounts, or systems may contain relevant information. Examples include phones, computers, online accounts, storage media, etc. Ideally, the analyst should speak with the affected person to understand what happened, what actions were taken, and what evidence may be available.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#indicator-of-compromise-ioc","title":"Indicator of Compromise (IOC)","text":"<p>An indicator of compromise (IOC) is any data that describes a cybersecurity incident, malicious activity, or artifact through behavioral patterns. The goal is to format information so that other researchers or affected parties can reuse it to identify similar evidence and determine whether they've been compromised. This may include created files, modified registry entries, or new processes/services. If these indicators are found in a system, it likely indicates infection by the corresponding malware. IOCs enable practical information sharing based on forensic analysis, incident response, or malware research.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#informed-consent","title":"Informed consent","text":"<p>Consent refers to a voluntary agreement between two or more parties regarding rights and obligations. In the context of digital forensic analysis for civil society, informed consent means the agreement and approval of actions to collect, analyze, present, and preserve digital evidence.</p> <p>A key aspect is that the person providing consent must be able to make an informed decision about the investigation and retain the right to reject assistance. In practice, this means providing enough information so that the requestor understands the actions, risks, rights, and responsibilities involved. The forensic analyst must communicate clearly and transparently, and respect the will of the person requesting support.</p> <p>Read more on informed consent in our how-to guide. </p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#internet-service-provider-isp","title":"Internet Service Provider (ISP)","text":"<p>Refers to the company that provides Internet service to the user. These companies usually provide the last-mile connection and may interconnect with other operators or directly with international submarine cables. </p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#lawfare-legal-warfare","title":"Lawfare (legal warfare)","text":"<p>Lawfare refers to the use of legal systems or institutions to harm, discredit, or undermine individuals or organizations.</p> <p>Read more in the related explainer on risks and threats for forensic labs. </p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#log","title":"Log","text":"<p>Logs (also called records or audit trails) are files that document events occurring within a computer system, network, or application. These may include user access, system changes, errors, and other activity relevant to forensic investigations.</p> <p>This resource includes considerations for log-based forensic investigations on Android devices</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#malware","title":"Malware","text":"<p>Malware (short for malicious software) refers to any kind of software designed to harm or compromise a system. Unlike faulty or buggy software, malware acts with malicious intent, typically without the user's knowledge \u2014 unlike potentially unwanted software.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#mvt","title":"MVT","text":"<p>MVT is a tool that facilitates consent-based forensic analysis of devices belonging to individuals at risk of advanced spyware attacks, especially civil society members and vulnerable communities.</p> <p>As stated on its official site:</p> <p>Mobile Verification Toolkit (MVT) is a tool to facilitate the consensual forensic analysis of Android and iOS devices, for the purpose of identifying traces of compromise.</p> <p>It was developed and released by the Amnesty International Security Lab in July 2021 as part of the Pegasus Project, along with a forensic methodology. It continues to be maintained by Amnesty International and other contributors.</p> <p>This documentation provides instructions on how to install and run mvt-ios and mvt-android commands, as well as guidance on interpreting the extracted results.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#n-day","title":"n-day","text":"<p>n-day refers to a type of vulnerability that is already known but not yet patched in all affected systems. In some cases, official patches or mitigations may exist but have not yet been applied</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#phishing","title":"Phishing","text":"<p>Phishing is a technique based on impersonating or falsifying information to prompt the user to take an action \u2014 such as clicking on a link, opening an infected file, connecting to a fake network or system, or entering information on fake websites. The objective is usually to steal information or infect a device or information system.</p> <ul> <li>e.g., suspicious emails or SMS messages prompting the user to click on links  </li> <li>e.g., suspicious emails or SMS messages requesting private, sensitive, or financial information  </li> <li>e.g., suspicious emails prompting the user to open attachments</li> </ul>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#portable-tool","title":"Portable tool","text":"<p>Refers to a software tool that does not require installation to run. It does not modify or add files to the system but includes all necessary components in its folder or executable.</p> <p>A key advantage is that it leaves fewer traces of execution compared to installed programs.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#risk-analysis","title":"Risk analysis","text":"<p>The specific risks an organization or individual faces depend on their particular context and work. The process of identifying vulnerabilities, risks, and threats at a given time is known as risk analysis.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#security-incident-response","title":"Security Incident Response","text":"<p>The goal of Incident Response procedures is to minimize the impact and contain the consequences of incidents. Effective response requires identifying the root cause of intrusions in order to eradicate the threat and enable timely recovery.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#socialtic","title":"SocialTIC","text":"<p>SocialTIC is a civil society organization based in Mexico. Its mission is to safely empower changemakers in Latin America, strengthening their work in analysis, social communication, and advocacy through the strategic use of digital technologies and data.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#spyware","title":"Spyware","text":"<p>A type of malware that collects information from a computer or mobile device and transmits it to an external entity without the owner's knowledge or consent. These tools have various capabilities, but generally allow access to stored and in-transit data, as well as manipulation of the device\u2019s sensors (camera, microphone, etc.).</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#stalkerware","title":"Stalkerware","text":"<p>Stalkerware refers to spyware used on a small scale, primarily in intimate or personal settings such as between partners, family members, or friends.</p> <p>These tools are usually installed with physical access to the device and are designed to collect as much information as possible. The attacker often has access to a control panel where they can view all the gathered data.</p> <p>Such tools are often marketed as family protection software to prevent device misuse or theft. However, their features and capabilities make them viable for home surveillance and spying.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#threat-intelligence","title":"Threat intelligence","text":"<p>According to Wikipedia, Cyber Threat Intelligence (CTI) is the activity of collecting knowledge, skills, and experience to evaluate cyber and physical threats, as well as threat actors, with the aim of mitigating attacks or harmful events.</p> <p>The concept emerged to address the growing range of threats and support security professionals in recognizing indicators of attacks, understanding attacker methods, and responding accurately.</p> <p>Threat intelligence aims to understand adversaries and reduce institutional risk by analyzing threats and identifying key information that can help attribute attacks. The goal is to enable smart, timely defensive actions against attack scenarios and advanced threats.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#threat-notification","title":"Threat notification","text":"<p>Threat notifications refer to messages sent by platforms and manufacturers to individuals who may have been targeted.</p> <p>According to Apple, threat notifications inform and assist users of devices that may have been targeted by mercenary spyware. Notifications are sent via email and iMessage to the addresses and phone numbers linked to a person\u2019s Apple ID. They also appear at the top of the page after signing in to account.apple.com.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#ttp","title":"TTP","text":"<p>Short for Techniques, Tactics, and Procedures, this term refers to the set of methods and behaviors used by threat actors. The most well-known TTP framework is MITRE ATT&amp;CK, which also includes a historical registry of TTPs associated with specific threat actors.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#triage","title":"Triage","text":"<p>Security incident triage refers to the initial assessment and classification of incidents based on factors such as severity, urgency, and potential impact. The main goal is to allocate resources and set priorities effectively, allowing incident response teams to focus on the most critical threats and reduce organizational risk. This process is akin to medical triage, where patients are categorized by severity to determine treatment order.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#volatility","title":"Volatility","text":"<p>Volatility in digital evidence refers to the fact that some system data is destroyed or altered over time.</p> <p>For example, some log files are overwritten after reaching a storage limit, which means this kind of evidence may not be available permanently.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#vulnerability","title":"Vulnerability","text":"<p>A vulnerability refers to a weakness or deficiency in processes, systems, practices, or habits that can enable threats or increase the impact and consequences of an incident.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#zero-click","title":"Zero Click","text":"<p>Refers to an attack that requires no user interaction for malware to be installed. These attacks are typically highly sophisticated and expensive, often requiring the chaining of multiple vulnerabilities to succeed.</p>","tags":["glossary","reference"]},{"location":"references/00-glossary.html#zero-day","title":"Zero Day","text":"<p>A type of attack that exploits a vulnerability that is not yet known \u2014 not even by the device manufacturer. As a result, there are no patches or fixes available.</p> <p>See the Wikipedia page for \"Zero-day attack\".</p>","tags":["glossary","reference"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html","title":"AndroidQF output file dictionary","text":"2025-06-162025-06-16 <p>This document is part of a technical documentation repository whose main objective is to establish a baseline of proven, flexible and accessible knowledge to boost consensual forensic analysis in support of civil society across the globe. To organize the contents, we use the technical documentation framework Di\u00e1taxis. </p> <p>This particular resource fits within the reference category in Diataxis, and contains information about files generated by the tool androidqf when conducting a forensic extraction of an Android device. The objective is to facilitate the understanding of the resulting files, including what information is included and why it could be helpful from a forensic standpoint. </p> <p>This resource was last updated on June 16, 2025, and for the presentation of the information we based our version 1.7.1. This resource was originally developed in Spanish, and translated with the support of Marianne Parrott. </p> <p>Androidqf is a forensic extraction tool, part of the Mobile Verification Toolkit (MVT) project. It is maintained by  Amnesty International Security Lab. </p> <p>The name of the tool emerges from Android Quick Forensics. It is a portable tool, which means it can be executed on Windows, GNU/Linux and MacOS with a precompiled binary, without requiring an installation. This simplifies the acquisition of key forensic information from Android devices, specially in remote scenarios. </p> <p>The information generated by androidqf can be grouped into 5 main categories: </p> <ul> <li>Acquisition and extraction  </li> <li>Device information and configuration  </li> <li>System logs and events  </li> <li>Processes and applications  </li> <li>Information backed up from the device </li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#acquisition-and-extraction","title":"Acquisition and extraction","text":"","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#acquisitionjson","title":"acquisition.json","text":"<p>The information in this file is generated by the acquisition.go module.</p> <p>What is included in this file? </p> <p>This file is in JSON format and records information related to the data acquisition process of the device. It contains the following details: </p> <ul> <li>UUID of the extraction, which is also used as the name of the folder where the information is stored.  </li> <li>Version of androidqf.  </li> <li>Location where the extraction is stored.  </li> <li>Date and time of start and end of the acquisition.  </li> <li>Information of the collector binary used.  </li> <li>Information of the ADB binary used.  </li> <li>Location of the SD card storage.  </li> <li>CPU architecture of the device. </li> </ul> <p>Why is this important?</p> <p>This file provides general information about the extraction and the device, including unique identifiers that can be helpful to ensure the chain of custody of the forensic evidence. </p> <p>Example:</p> <pre><code>{\n \"uuid\": \"0f615832-ed22-411e-9317-b429d28ecf9a\",\n \"androidqf_version\": \"v1.7.0-1-gf7642bf\",\n \"storage_path\": \"/home/user/0f615832-ed22-411e-9317-b429d28ecf9a\",\n \"started\": \"2025-01-01T18:36:37.443498116Z\",\n \"completed\": \"2025-01-01T18:50:04.947856405Z\",\n \"collector\": {\n  \"ExePath\": \"/data/local/tmp/collector\",\n  \"Installed\": false,\n  \"Adb\": {\n   \"ExePath\": \"/usr/bin/adb\",\n  },\n  \"Architecture\": \"arm64-v8a\"\n },\n \"tmp_dir\": \"/data/local/tmp/\",\n \"sdcard\": \"/sdcard/\",\n \"cpu\": \"arm64-v8a\"\n}\n</code></pre>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#commandlog","title":"command.log","text":"<p>The information in this file is generated by the logger.go. This module presents detailed logs of the acquisition process of the device. </p> <p>What is included in this file? </p> <p>This file is in plain text with a .log extension and contains a record of the commands executed during data acquisition. It documents each command used (DEBUG) and its output on screen (INFO), warning messages (WARNING) and error messages (ERROR) during execution. It uses the following structure: </p> <ul> <li>Date and time of the command or message  </li> <li>Type of message  </li> <li>Content of the message</li> </ul> <p>Why is this important?</p> <p>This file presents a log of the actions performed by the app during the data acquisition process. This allows the analyst to verify the completeness of the extraction, to ensure all steps were performed. In case of errors, it also provides information to debug and fix potential issues. </p> <p>Example:</p> <pre><code>2025-01-01T14:22:39-06:00 [INFO] Started new acquisition in /home/user/1c3c6742-f225-479f-a836-4a6a86a056b7\n2025-01-01T14:22:39-06:00 [INFO] Would you like to take a backup of the device?\n2025-01-01T14:22:41-06:00 [INFO] Generating a backup with argument com.android.providers.telephony. Please check the device to authorize the backup...\n2025-01-01T14:22:52-06:00 [INFO] Backup completed!\n2025-01-01T14:22:52-06:00 [INFO] Collecting information on installed apps. This might take a while...\n2025-01-01T14:22:52-06:00 [INFO] Collecting device properties...\n2025-01-01T14:22:52-06:00 [INFO] Collecting device diagnostic information. This might take a while...\n2025-01-01T14:24:11-06:00 [INFO] Collecting list of running processes...\n2025-01-01T14:24:11-06:00 [DEBUG] Deploying collector binary 'collector_arm64' for architecture 'arm64-v8a'.\n2025-01-01T14:24:11-06:00 [INFO] Collecting list of services...\n2025-01-01T14:24:12-06:00 [INFO] Generating a bugreport for the device...\n2025-01-01T14:26:22-06:00 [DEBUG] Bugreport completed!\n2025-01-01T14:26:22-06:00 [INFO] Collecting list of files... This might take a while...\n2025-01-01T14:26:22-06:00 [DEBUG] Using collector to collect list of files\n2025-01-01T14:39:20-06:00 [INFO] Collecting device settings...\n2025-01-01T14:39:20-06:00 [INFO] Collecting SELinux status...\n</code></pre>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#hashescsv","title":"hashes.csv","text":"<p>The information in this file is generated by the HashFiles function of the acquisition.go module.</p> <p>What is included in this file? </p> <p>This file is in CSV format and stores the SHA-256  hashes for each file generated during extraction or extracted from the device. It uses the following format: </p> <ul> <li>File name and location  </li> <li>Hash value using SHA-256</li> </ul> <p>Why is this important? </p> <p>The hashes help to guarantee the integrity of the information and ensure that it has not been modified after acquisition, facilitating independent verification and chain of custody. </p> <p>Example:</p> <pre><code>2ab44150-35d3-4b40-a820-c9152fe93a13\\apks\\gov.dhs.cbp.cbpone_gov.dhs.cbp.cbpone-NYwrqdamzef6AVKRRGXzgA.apk,2d553aada9039d4def18a09b84c317a70d9fdde87524a043db5f0eeb1862e89a\n2ab44150-35d3-4b40-a820-c9152fe93a13\\backup.ab,48202a8cb422d7eeb12ff8ad13fac3a67b37600c63eae8089d9674465da32990\n2ab44150-35d3-4b40-a820-c9152fe93a13\\bugreport.zip,ec82812dba70891b78d7130dc16e3474918e4a0e02bb15ec00e1015679f720ee\n2ab44150-35d3-4b40-a820-c9152fe93a13\\command.log,c0ae883bebee7503b0ca94a54cdbb43628602046c68b770c760f730a55d6dc8c\n2ab44150-35d3-4b40-a820-c9152fe93a13\\dumpsys.txt,e54a613502ca362584766c0f75e17ca366d7ecdc4aa6869c50424dff83acbc15\n2ab44150-35d3-4b40-a820-c9152fe93a13\\env.txt,387301687084cca0e124a9c365e930b4e5e6303b3e6f9dc64e2146f168b79c1a\n2ab44150-35d3-4b40-a820-c9152fe93a13\\files.json,832f8121a69f131c9f434e1ca68d7b1e2deda40de72ff8396ea386a6a8cf69d3\n2ab44150-35d3-4b40-a820-c9152fe93a13\\getprop.txt,b8dbad7e900aeeb3c60e48dd988c44905741a7e5b124055a09c2c417aa1556b3\n2ab44150-35d3-4b40-a820-c9152fe93a13\\hashes.csv,cea94f56c720436d217b44ee746e2a6d69ddd226325a94bf3a3adeb32be4658a\n2ab44150-35d3-4b40-a820-c9152fe93a13\\logcat.txt,6c080ba0357c6e82818e5a89135ff06aa9386f811daf898fc1797e1b9e6299d3\n2ab44150-35d3-4b40-a820-c9152fe93a13\\logs\\data\\anr\\anr_2024-12-20-00-11-38-831,e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\n2ab44150-35d3-4b40-a820-c9152fe93a13\\logs\\sdcard\\log\\thermal_log-shm,e9eed4a2f55edd11e022b7b089d69a5de929d2bd484041a64e957861a5ab055b\n2ab44150-35d3-4b40-a820-c9152fe93a13\\packages.json,69d560bfbbb75e074a49d107811c350461badac885b3925ed816d716f1f1144a\n2ab44150-35d3-4b40-a820-c9152fe93a13\\processes.txt,9e933447e79e4743722691af88e9a4bdcc11029a92b84b0ebd9d54e0bfcf2694\n2ab44150-35d3-4b40-a820-c9152fe93a13\\root_binaries.json,4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945\n2ab44150-35d3-4b40-a820-c9152fe93a13\\selinux.txt,1ca5672ae970bdc4f5b584898245b3d884e11deb6867e9563bdfbc8b82e8f62e\n2ab44150-35d3-4b40-a820-c9152fe93a13\\services.txt,b3ae6ad626b3a5ba8fc3b68771d42baf9795e03cc7b4b1ccbe361d9625e0f1fe\n2ab44150-35d3-4b40-a820-c9152fe93a13\\settings_global.txt,410f788450907331183ee36979e93fc7dc0b1805e574d1ac1d5fbc9869897c53\n2ab44150-35d3-4b40-a820-c9152fe93a13\\settings_secure.txt,be67f431c457edfb88d733594aba662310dbe3863c62da21cbf7dad5bcc0f136\n2ab44150-35d3-4b40-a820-c9152fe93a13\\settings_system.txt,b0e7452110867ca3f5c15ea52b9b9a198433a836f97d6fd8b95fcd39fd30c714\n</code></pre>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#device-information-and-configuration","title":"Device information and configuration","text":"","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#getproptxt","title":"getprop.txt","text":"<p>The information in this file is generated by the getprop.go module. </p> <p>What is included in this file? </p> <p>This file is in TXT format and contains the output of the <code>adb getprop</code> command, which details the system properties.</p> <p>System properties are key-value pairs of strings that are stored in the global build.prop dictionary or in .sysprop files, and provide a convenient way to share information, usually settings, throughout the system.</p> <p>The information can be found in the following format:</p> <pre><code>[{prefix}.]{group}[.{subgroup}]*.{name}[.{type}]\n</code></pre> <p>The prefix ro is used for read-only configurations, or settings that have been set after the last reboot. The prefix prefix persist is used for configurations that are persistent after a reboot. It is also possible that properties do not have a prefix, meaning they begin directly with the group they belong to. </p> <p>The most common groups are:</p> <ul> <li>bluetooth, Bluetooth related  </li> <li>boot, sysprops from kernel cmdline  </li> <li>build, sysprops that identify a build  </li> <li>telephony, telephony related  </li> <li>audio, audio related  </li> <li>graphics, graphics related  </li> <li>vold, vold related </li> </ul> <p>For more details, see the list of properties already defined in the Android source code.</p> <p>Why is this important?</p> <p>The properties provide important information about the device's hardware and software, which can be altered by malicious software to hide its presence or to inadvertently modify the device's behaviour.</p> <p>Example:</p> <pre><code>[property_name]: [value]\n[aaudio.hw_burst_min_usec]: [2000]\n[aaudio.mmap_exclusive_policy]: [2]\n[aaudio.mmap_policy]: [2]\n[apex.all.ready]: [true]\n[bluetooth.device.class_of_device]: [90,2,12]\n[ro.boot.product.model]: [SM-A715F]\n[ro.boot.serialno]: [R58N84XXXXX]\n[ro.bootimage.build.date]: [Thu Feb 29 13:55:21 +07 2024]\n[ro.bootimage.build.date.utc]: [1709189721]\n[ro.bootimage.build.fingerprint]: [samsung/a71naxx/a71:11/RP1A.200720.012/A715FXXSBDXB1:user/release-keys]\n[ro.build.selinux]: [1]\n[ro.build.selinux.enforce]: [1]\n[ro.build.version.security_patch]: [2024-02-01]\n[ro.gfx.driver.1]: [com.qualcomm.qti.gpudrivers.sm6150.api30]\n[ro.hardware]: [qcom]\n[ro.hardware.chipname]: [SM7150]\n[ro.product.system.model]: [SM-A715F]\n[ro.vendor.product.cpu.abilist]: [arm64-v8a,armeabi-v7a,armeabi]\n[ro.vendor.product.cpu.abilist32]: [armeabi-v7a,armeabi]\n[ro.vendor.product.cpu.abilist64]: [arm64-v8a]\n</code></pre> <p>Learn more </p> <ul> <li>Configuration overview  |  Android Open Source Project </li> <li>Implement system properties as APIs  |  Android Open Source Project </li> <li>Add system properties  |  Android Open Source Project </li> <li>Policy compatibility  |  Android Open Source Project</li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#selinuxtxt","title":"selinux.txt","text":"<p>The information in this file is generated by the selinux.go module.</p> <p>What is included in this file? </p> <p>This file is in TXT format and contains the output of the <code>adb shell getenforce</code> command. It indicates the SELinux security policy applied on the device, indicating the mode that it is in (enforcing, permissive, or disabled).</p> <p>Why is this important?</p> <p>SELinux is a key security layer in Android. Changes to its configuration can be an indication of compromises to the security of the device.</p> <p>Example:</p> <pre><code>Enforcing\n</code></pre> <p>Learn more</p> <ul> <li>SELinux concepts  |  Android Open Source Project </li> <li>SELinux Project </li> <li>What is SELinux?</li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#settings_globaltxt","title":"settings_global.txt","text":"<p>The information in this file is generated by the settings.go module.</p> <p>What is included in this file? </p> <p>This file is in TXT format and contains the output of the <code>adb shell cmd settings list global</code> command, which shows preferences that always apply identically to all defined users (well-defined user). Apps can read them, but cannot write them. These are preferences that the user must explicitly modify via the system user interface or APIs specialized in these values.</p> <p>These settings include development settings, boot count, and Bluetooth, Wi-Fi and telephony connection status. For the complete list of global preferences, please refer to the relevant Android documentation.</p> <p>Why is this important?</p> <p>It allows the identification of anomalous settings that could compromise the security, privacy or functionality of the device. Unusual default settings may signal intentional or accidental attempts to modify system behaviour.</p> <p>Example:</p> <pre><code>Phenotype_boot_count=68\nadb_enabled=1\nairplane_mode_on=0\nbluetooth_on=1\nboot_count=71\nbug_report=0\ndefault_device_name=Galaxy A14 5G\npackage_verifier_user_consent=1\nphone_play_store_availability=0\nrequire_password_to_decrypt=1\nspam_call_enable=1\nsubscription_mode=0\nturnOff_5g_network_mode_set=0\nwifi_networks_available_notification_on=0\nwifi_on=1\nwifi_scan_always_enabled=1\nzram_enabled=1\n</code></pre> <p>Learn more</p> <ul> <li>Settings  |  API reference  |  Android Developers </li> <li>Settings.Global  |  API reference  |  Android Developers</li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#settings_securetxt","title":"settings_secure.txt","text":"<p>The information in this file is generated by the settings.go module.</p> <p>What is included in this file? </p> <p>This file is in TXT format and contains the output of the <code>adb shell cmd settings list secure</code> command, which displays system security preferences that apps can read but not write. These are preferences that the user must explicitly modify through the user interface of a system app. Normal apps cannot modify the security settings database.</p> <p>These settings include development settings, accessibility, location, data entry, screen lock, parental controls, text-to-speech, and Bluetooth, Wi-Fi and telephony connection.</p> <p>For the complete list of security preferences, please refer to the relevant Android documentation.</p> <p>Why is this important?</p> <p>It allows the identification of anomalous settings that could compromise the security, privacy or functionality of the device. Unusual default settings may signal intentional or accidental attempts to modify system behaviour.</p> <p>Example:</p> <pre><code>accessibility_allow_diagonal_scrolling=1\naccessibility_button_mode=1\naccessibility_button_target_component=com.android.settings/com.samsung.android.settings.accessibility.shortcut.AmplifyShortcut\naccessibility_display_magnification_enabled=0\naccessibility_enabled=0\nandroid_id=af4de9XXXXXXXXXX\nautofill_service=null\nassistant=com.google.android.googlequicksearchbox/com.google.android.voiceinteraction.GsaVoiceInteractionService\naware_enabled=0\nbackup_auto_restore=1\nbackup_encryption_opt_in_displayed=1\nbluetooth_settings_foreground=0\nclipboard_show_access_notifications=0\ndefault_input_method=com.samsung.android.honeyboard/.service.HoneyBoardService\nfingerprint_screen_lock=1\nlocation_mode=3\nlocation_time_zone_detection_enabled=1\nlockscreen.disabled=0\nwifi_saved_state=0\n</code></pre> <p>Learn more</p> <ul> <li>Settings  |  API reference  |  Android Developers </li> <li>Settings.Secure  |  API reference  |  Android Developers</li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#settings_systemtxt","title":"settings_system.txt","text":"<p>The information in this file is generated by the settings.go module.</p> <p>What is included in this file? </p> <p>This file is in TXT format and contains the output of the <code>adb shell cmd settings list system</code> command, which displays various general device preferences. These preferences affect the user experience and basic functionality of the device.</p> <p>These settings include sensor options such as accelerometer or gyroscope, time zone, display, alarms, sound, vibration, updates, and Bluetooth, Wi-Fi and telephony connection.</p> <p>For the complete list of system preferences, please refer to the relevant Android documentation.</p> <p>Why is this important?</p> <p>It allows the identification of anomalous settings that could compromise the security, privacy or functionality of the device. Unusual default settings may signal intentional or accidental attempts to modify system behaviour.</p> <p>Example:</p> <pre><code>FOTA_CLIENT_POLLING_TIME=1710699386219\nFOTA_CLIENT_REGISTRATION=1\nFOTA_CLIENT_TEST=0\nSEM_VIBRATION_FORCE_TOUCH_INTENSITY=4\nSEM_VIBRATION_NOTIFICATION_INTENSITY=5\nSOFTWARE_UPDATE_LAST_CHECKED_DATE=1728477705778\nSOFTWARE_UPDATE_WIFI_ONLY2=1\nalarm_alert_set=1\nanykey_mode=0\naod_mode=0\nautomatic_unlock=1\nblock_unwanted_call=1\nblock_unwanted_call_type=1\nlockscreen_sounds_enabled=1\nlockscreen_wallpaper=1\nlogin_state=0\nmic_mode_enable=0\nmic_mode_wificall=0\nsamsung_errorlog_agree=1\ntty_mode=0\nunknown_mode=0\nvolume_alarm=11\nvolume_alarm_ble_headset=11\nvolume_alarm_earpiece=11\nvolume_alarm_speaker=11\nvolume_assistant=7\nwifi_call_enable1=0\nwifi_call_preferred1=2\nwifi_call_when_roaming1=0\nwireless_fast_charging=0\n</code></pre> <p>Learn more</p> <ul> <li>Settings  |  API reference  |  Android Developers </li> <li>Settings.System  |  API reference  |  Android Developers</li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#envtxt","title":"env.txt","text":"<p>The information in this file is generated by the env.go module.</p> <p>What is included in this file? </p> <p>This file is in TXT format and contains the output of the <code>adb shell env</code> command, which shows the configuration of the mkshrc (shell) environment variables used by Android.</p> <p>By default, the mkshrc variables in Android are found in the mkshrc or profile file which can be in one of the following directories.</p> <pre><code>/system/etc\n/system/etc/profile\n$HOME/\n/data/local\n</code></pre> <p>The mkshrc binary can be found in one of the following directories.</p> <pre><code>/product/bin\n/apex/com.android.runtime/bin\n/apex/com.android.art/bin\n/system_ext/bin\n/system/bin\n/system/xbin\n/odm/bin\n/vendor/bin\n/vendor/xbin\n</code></pre> <p>The variables contained in the file may indicate:</p> <ul> <li>Partition locations  </li> <li>Android virtual machine runtime environment values  </li> <li>Shell settings</li> </ul> <p>Why is this important?</p> <p>Environment variables may indicate changes in the settings of the terminal, the command shell, the Android virtual machine runtime environment or the mount points of some partitions and folders. This could indicate suspicious behaviour on the device for the execution of malicious software.</p> <p>Example:</p> <pre><code>_=/system/bin/env\nANDROID_DATA=/data\nANDROID_ART_ROOT=/apex/com.android.art\nLOGNAME=shell\nSTANDALONE_SYSTEMSERVER_JARS=/apex/com.android.btservices/javalib/service-bluetooth.jar:/apex/com.android.devicelock/javalib/service-devicelock.jar:/apex/com.android.os.statsd/javalib/service-statsd.jar:/apex/com.android.scheduling/javalib/service-scheduling.jar:/apex/com.android.tethering/javalib/service-connectivity.jar:/apex/com.android.uwb/javalib/service-uwb.jar:/apex/com.android.wifi/javalib/service-wifi.jar:/apex/com.samsung.android.lifeguard/javalib/service-lifeguard.jar\nHOME=/\nANDROID_TZDATA_ROOT=/apex/com.android.tzdata\nANDROID_ROOT=/system\nTERM=xterm-256color\nSHELL=/bin/sh\nANDROID_BOOTLOGO=1\nANDROID_ASSETS=/system/app\nANDROID_SOCKET_adbd=21\nHOSTNAME=a14x\nDOWNLOAD_CACHE=/data/cache\nSECONDARY_STORAGE=/storage/sdcard:/storage/usb1:/storage/usb2\nANDROID_STORAGE=/storage\nUSER=shell\nTMPDIR=/data/local/tmp\nPATH=/product/bin:/apex/com.android.runtime/bin:/apex/com.android.art/bin:/system_ext/bin:/system/bin:/system/xbin:/odm/bin:/vendor/bin:/vendor/xbin\nSYSTEMSERVERCLASSPATH=/system/framework/com.android.location.provider.jar:/system/framework/knoxanalyticssdk.jar:/system/framework/mcfsdk.jar:/system/framework/uibc_java.jar:/system/framework/services.jar:/system/framework/semwifi-service.jar:/system/framework/ssrm.jar:/apex/com.android.adservices/javalib/service-adservices.jar:/apex/com.android.adservices/javalib/service-sdksandbox.jar:/apex/com.android.appsearch/javalib/service-appsearch.jar:/apex/com.android.art/javalib/service-art.jar:/apex/com.android.configinfrastructure/javalib/service-configinfrastructure.jar:/apex/com.android.healthfitness/javalib/service-healthfitness.jar:/apex/com.android.media/javalib/service-media-s.jar:/apex/com.android.ondevicepersonalization/javalib/service-ondevicepersonalization.jar:/apex/com.android.permission/javalib/service-permission.jar:/apex/com.android.rkpd/javalib/service-rkp.jar:/apex/com.samsung.android.shell/javalib/service-samsung-shell.jar\nASEC_MOUNTPOINT=/mnt/asec\nANDROID_I18N_ROOT=/apex/com.android.i18n\nEXTERNAL_STORAGE=/sdcard\n</code></pre> <p>Learn more</p> <ul> <li>Shell (computing) - Wikipedia </li> <li>mksh - Can I update the adb shell's environment variables? - Android Enthusiasts Stack Exchange </li> <li>Update mksh to latest version - Android Enthusiasts Stack Exchange</li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#system-logs-and-events","title":"System logs and events","text":"","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#logcattxt-and-logcat_oldtxt","title":"logcat.txt and logcat_old.txt","text":"<p>The information in this file is generated by the logcat.go module.</p> <p>What is included in this file? </p> <p>These files are in plain text with a .txt extension and contain the output of the <code>adb shell logcat -d -b all</code> and <code>adb shell logcat -L -b all</code> commands respectively, which display the system message log. Some examples of the information contained are:</p> <ul> <li>Error and warning messages (FATAL EXCEPTION).  </li> <li>Messages from operating system apps, processes and services.  </li> <li>Debug logs and informational events.</li> </ul> <p>The file contains the following structure:</p> <ul> <li>Start of record (contains record divisions).  </li> <li>Timestamp (timestamp).  </li> <li>Process and thread identifier (PID) and (TID).  </li> <li>Priority level:  <ul> <li>E: Error  </li> <li>W: Warning  </li> <li>I: Information  </li> <li>D: Debugging  </li> <li>F: Fatal  </li> <li>V: Verbose  </li> </ul> </li> <li>Label indicating the system component or process.  </li> <li>Description and details of messages or errors.</li> </ul> <p>Why is this important?</p> <p>This information can be used to analyze the behavior and execution of events in the system and apps on the device to identify anomalies or patterns that may indicate the presence of malware. In forensic terms, they are among the most relevant files in terms of content.</p> <p>Example:</p> <pre><code>--------- beginning of crash  \n2025-01-01 00:00:00.000 12345 12345 E AndroidRuntime: FATAL EXCEPTION: main  \n2025-01-01 00:00:00.000 12345 12345 E AndroidRuntime: Process: example.android.app, PID: 12345  \n2025-01-01 00:00:00.000 12345 12345 E AndroidRuntime: java.lang.RuntimeException: Unable to instantiate receiver example.android.app.MyBroadCastReceiver  \n2025-01-01 00:00:00.000 12345 12345 E AndroidRuntime: at android.app.ActivityThread.handleReceiver(ActivityThread.java:4861)  \n2025-01-01 00:00:00.000 12345 12345 E AndroidRuntime: at android.os.Handler.dispatchMessage(Handler.java:106)  \n2025-01-01 00:00:00.000 30144 30860 I ActivityManager: Process example.android.app has died.  \n</code></pre> <p>Learn more</p> <ul> <li>Logcat command-line tool  |  Android Studio  |  Android Developers</li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#dumpsystxt","title":"dumpsys.txt","text":"<p>The information in this file is generated by the dumpsys.go module.</p> <p>What is included in this file? </p> <p>This is a plain text file (.txt) that contains the result of the command <code>adb shell dumpsys</code> This command provides detailed information about running services, including processes and applications. </p> <p>The file is split in the the following sections: </p> <ul> <li>List of active services  </li> <li>Details of running services  </li> <li>Status and flags of some services</li> </ul> <p>Dumpsys is a powerful ADB tool, and in addition to what is collected through androidqf, there are additional options to be used to further explore the network services, battery, and input diagnostics. </p> <p>Why is this important?</p> <p>This file provides  information about the services running on a device and the flags and logs they generate. This is useful from a forensic standpoint since it can help identify known services or processes that are suspicious. </p> <p>Example:</p> <pre><code>Currently running services:\n  accessibility\n  account\n  adb\n  alarm\n  android.frameworks.cameraservice.service.ICameraService/default\n  android.hardware.biometrics.face.IFace/default\n  android.hardware.vibrator.IVibratorManager/default\n  android.os.UpdateEngineService\n  android.security.authorization\n  anrmanager\n  anti_root_dialog\n  app_binding\n  appops\n  audio\n  auth\n  battery\n  batteryproperties\n  batterystats\n  bluetooth_manager\n  bugreport\n  cpuinfo\n  critical.log\n  dataloader_manager\n  dbinfo\n  input\n  logcat\n  meminfo\n  netstats\n  ostats_pullerd\n  ostats_tpd\n  ostatsd\n  package\n  permission\n  phone\n  power\n  processinfo\n  procstats\n  settings\n  stats\n  statsbootstrap\n  usb\n  wifi\n  window\n\n-------------------------------------------------------------------------------\nDUMP OF SERVICE AtlasService:\n--------- 0.001s was the duration of dumpsys AtlasService, ending at: 2025-05-08 18:12:33\n-------------------------------------------------------------------------------\nDUMP OF SERVICE DockObserver:\nCurrent Dock Observer Service state:\n  reported state: 0\n  previous state: 0\n  actual state: 0\n--------- 0.007s was the duration of dumpsys DockObserver, ending at: 2025-05-08 18:12:33\n-------------------------------------------------------------------------------\nDUMP OF SERVICE ISubsysRadio:\n--------- 0.005s was the duration of dumpsys ISubsysRadio, ending at: 2025-05-08 18:12:33\n-------------------------------------------------------------------------------\nDUMP OF SERVICE MMListService:\n--------- 0.001s was the duration of dumpsys MMListService, ending at: 2025-05-08 18:12:33\n-------------------------------------------------------------------------------\nDUMP OF SERVICE OPLUSExService:\n--------- 0.001s was the duration of dumpsys OPLUSExService, ending at: 2025-05-08 18:12:33\n-------------------------------------------------------------------------------\nDUMP OF SERVICE OplusLocationManager:\n--------- 0.001s was the duration of dumpsys OplusLocationManager, ending at: 2025-05-08 18:&gt;\n-------------------------------------------------------------------------------\nDUMP OF SERVICE appops:\nCurrent AppOps Service state:\n  Settings:\n    top_state_settle_time=+5s0ms\n    fg_service_state_settle_time=+5s0ms\n    bg_state_settle_time=+1s0ms\n\n  Op mode watchers:\n    Op COARSE_LOCATION:\n    #0: ModeCallback{12983a3 watchinguid=-1 flags=0x0 op=READ_WRITE_HEALTH_DATA from uid=1000 pid=1807}\n    #1: ModeCallback{21558a8 watchinguid=-1 flags=0x1 op=MONITOR_LOCATION from uid=u0a124 pid=3315}\n    #2: ModeCallback{c7241f6 watchinguid=-1 flags=0x1 op=COARSE_LOCATION from uid=1000 pid=1807}\n    #3: ModeCallback{f993e3b watchinguid=-1 flags=0x1 op=FINE_LOCATION from uid=u0a124 pid=3315}\n    Op FINE_LOCATION:\n    #0: ModeCallback{12983a3 watchinguid=-1 flags=0x0 op=READ_WRITE_HEALTH_DATA from uid=1000 pid=1807}\n    #1: ModeCallback{e5bfc6d watchinguid=-1 flags=0x1 op=FINE_LOCATION from uid=1000 pid=1807}\n    #2: ModeCallback{f993e3b watchinguid=-1 flags=0x1 op=FINE_LOCATION from uid=u0a124 pid=3315}\n    Op READ_CONTACTS:\n    #0: ModeCallback{12983a3 watchinguid=-1 flags=0x0 op=READ_WRITE_HEALTH_DATA from uid=1000 pid=1807}\n    Op WRITE_CONTACTS:\n    #0: ModeCallback{12983a3 watchinguid=-1 flags=0x0 op=READ_WRITE_HEALTH_DATA from uid=1000 pid=1807}\n    Op READ_CALL_LOG:\n    #0: ModeCallback{12983a3 watchinguid=-1 flags=0x0 op=READ_WRITE_HEALTH_DATA from uid=1000 pid=1807}\n    Op WRITE_CALL_LOG:\n    #0: ModeCallback{12983a3 watchinguid=-1 flags=0x0 op=READ_WRITE_HEALTH_DATA from uid=1000 pid=1807}\n    Op READ_CALENDAR:\n    #0: ModeCallback{12983a3 watchinguid=-1 flags=0x0 op=READ_WRITE_HEALTH_DATA from uid=1000 pid=1807}\n    Op WRITE_CALENDAR:\n    #0: ModeCallback{12983a3 watchinguid=-1 flags=0x0 op=READ_WRITE_HEALTH_DATA from uid=1000 pid=1807}\n    Op POST_NOTIFICATION:\n    #0: ModeCallback{12983a3 watchinguid=-1 flags=0x0 op=READ_WRITE_HEALTH_DATA from uid=1000 pid=1807}\n</code></pre> <p>Learn more</p> <ul> <li>dumpsys en Android</li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#bugreportzip","title":"bugreport.zip","text":"<p>The information in this file is generated by the bugreport.go module.</p> <p>What is included in this file? </p> <p>This is a compressed file that contains that output of the command <code>adb shell bugreport</code> This command generates a bugreport that includes a series of system logs, configurations and error reports. </p> <p>The bugreport can be analyzed using MVT using the command  <code>mvt-android check-bugreport bugreport.zip</code> </p> <p>The files and folders included in the bugreport are as follows: </p> <ul> <li> <p>dumpstate-yyyy-mm-dd-hh-mm-ss.txt </p> <ul> <li>Summarizes the key specs of the mobile device and the current status.  </li> </ul> </li> <li> <p>dumpstate_board.txt </p> <ul> <li>File that provides logs of a system boot, including events and services that are executed upon booting the device.  </li> </ul> </li> <li> <p>dumpstate_log.txt </p> <ul> <li>Presents logs with the results of the bugreport creation process, including potential errors and warnings.  </li> </ul> </li> <li> <p>main_entry.txt </p> <ul> <li>This file serves as an index of the contents created as part of the bugreport creation.  </li> </ul> </li> <li> <p>version.txt </p> <ul> <li>Shows the Android bugreport release letter. When systrace is enabled, the zip file also contains a systrace.txt file.  </li> </ul> </li> <li> <p><code>fs/cache/recovery/</code> </p> <ul> <li>last_data_partition_info <ul> <li>Provides information about the system storage, including the total size, used and free space; as well as the size of sectors and number of blocks present.  </li> </ul> </li> <li>last_dataresizing <ul> <li>Records information about several system sensors. It also provides information about messages created to address needs of specific sensors, like auto rotation, smart alert, among others.  </li> </ul> </li> <li>last_postrecovery <ul> <li>Provides information about communications between hardware components.  </li> </ul> </li> </ul> </li> <li> <p><code>fs/data/anr/</code> </p> <ul> <li>arn_yyyy-mm-dd-hh-mm-ss <ul> <li>Provides a detailed diagnostic of the system apps that are not responding. ARN comes from App Not Responding.  </li> </ul> </li> </ul> </li> <li> <p><code>fs/data/log/bt/</code> </p> <ul> <li>btsnooz_hci.log <ul> <li>Contains information about the Host Controller Interface (HCI) of the Bluetooth module.  </li> </ul> </li> <li>btsnooz_hci.log.last <ul> <li>Contains older logs and records of the HCI Bluetooth module.  </li> </ul> </li> </ul> </li> <li> <p><code>fs/data/misc/recovery/</code> </p> <ul> <li>ro.buil.fingerprint <ul> <li>Contains a unique identifier of the software version installed on the device.  </li> </ul> </li> <li>ro.build.fingerprint.1 <ul> <li>Contains a variant of the compilation number of the device.  </li> </ul> </li> </ul> </li> <li> <p><code>fs/data/tombstones/</code> </p> <ul> <li>tombstone_xx <ul> <li>Tombstones are files with log data about system or app crashes that are automatically generated when a process is locked unexpectedly.  </li> </ul> </li> </ul> </li> <li> <p><code>fs/proc/</code> </p> <ul> <li>mountinfo <ul> <li>This file provides information about the mounting points on the system. It helps gaining an understanding of the filesystem structure and different partitions the device might have.  </li> </ul> </li> </ul> </li> </ul> <p>Why is this important?</p> <p>The bugreport is highly valuable from a forensic standpoint since it contains information about errors, running processes and the filesystem that can be helpful to inspect and detect anomalies on the device that might be related with the exploitation of vulnerabilities. </p> <p>Learn more: </p> <ul> <li>How to capture and interpret android bugreport </li> <li>Reading bug reports </li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#logs","title":"logs/","text":"<p>The information in this file is generated by the logs.go module.</p> <p>What is included in this file? </p> <p>This folder contains logs files across different folders collected from the device using the command <code>adb pull</code>. </p> <p>This module goes through different system paths in order to extract files that contain information of the operating system behavior, including potential error and events. It include the following folders: </p> <ul> <li>/data/anr/  </li> <li>/data/log/  </li> <li>/sdcard/log/</li> </ul> <p>The files and folders included are: </p> <ul> <li> <p><code>anr/anr_yyyy-mm-dd-hh-mm-ss**</code> </p> <ul> <li>anr_yyyy-mm-dd-hh-mm-ss <ul> <li>File with information about \u201capplications not responding\u201d (ANR) issues and processes.  </li> </ul> </li> </ul> </li> <li> <p><code>log/acore/</code> </p> <ul> <li>0_dump_all.zip <ul> <li>Dump of system records related to process acore.  </li> </ul> </li> </ul> </li> <li> <p><code>log/batterystats/</code> </p> <ul> <li>newbatterystats240905095247 <ul> <li>File with metrics about energy consumption of the device.  </li> </ul> </li> </ul> </li> <li> <p><code>log/dropbox.txt</code> </p> <ul> <li>dropbox.txt <ul> <li>File with logs from DropBoxManager.  </li> </ul> </li> </ul> </li> <li> <p><code>log/dumpstate_debug_history.lst</code> </p> <ul> <li>dumpstate_debug_history.lst <ul> <li>File with history of dumpstate executions.  </li> </ul> </li> </ul> </li> <li> <p><code>log/dumpstate_lastkmsg_20240423_152746_0_MP.log.gz</code> </p> <ul> <li>dumpstate_lastkmsg_20240423_152746_0_MP.log.gz <ul> <li>File with the last kernel message after an unexpected reboot.  </li> </ul> </li> </ul> </li> <li> <p><code>log/dumpstate_latest_lastkmsg.log.gz</code> </p> <ul> <li>dumpstate_latest_lastkmsg.log.gz <ul> <li>File with persistent kernel logs following a reboot.  </li> </ul> </li> </ul> </li> <li> <p><code>log/dumpstate-stats.txt</code> </p> <ul> <li>dumpstate-stats.txt <ul> <li>File with stats of dumpstate execution.  </li> </ul> </li> </ul> </li> <li> <p><code>log/dumpstate_sys_error.zip</code> </p> <ul> <li>dumpstate_sys_error.zip <ul> <li>File with information about critical system errors.  </li> </ul> </li> </ul> </li> <li> <p><code>log/lom_log.txt</code> </p> <ul> <li>lom_log.txt <ul> <li>File with logs from storage or system monitoring processes.  </li> </ul> </li> </ul> </li> <li> <p><code>log/pm_debug_info.txt</code> </p> <ul> <li>pm_debug_info.txt <ul> <li>File with logs and information of the debugger for the system packet manager.  </li> </ul> </li> </ul> </li> <li> <p><code>log/power_off_reset_reason.txt</code> </p> <ul> <li>power_off_reset_reason.txt <ul> <li>File with information about the last reboot or system shutdown.  </li> </ul> </li> </ul> </li> <li> <p><code>log/prev_dump.log</code> </p> <ul> <li>prev_dump.log <ul> <li>File with system information before a critical event.  </li> </ul> </li> </ul> </li> <li> <p><code>log/radio_PRECONFG_SET.log</code> </p> <ul> <li>radio_PRECONFG_SET.log <ul> <li>File with initial configuration information for the radio module of the device.  </li> </ul> </li> </ul> </li> <li> <p><code>log/shutdown_profile.1.txt</code> </p> <ul> <li>shutdown_profile.1.txt <ul> <li>File with the shutdown profile recorded by the system.  </li> </ul> </li> </ul> </li> <li> <p><code>log/shutdown_profile_latest.txt</code> </p> <ul> <li>shutdown_profile_latest.txt <ul> <li>File with the most recent system shutdown profile.  </li> </ul> </li> </ul> </li> <li> <p><code>log/err/</code> </p> <ul> <li>mobiledata_dns.dat <ul> <li>File with errors on DNS resolution using mobile data.  </li> </ul> </li> <li>mobiledata_tp2.dat <ul> <li>File with errors in data packet transfer for mobile data.  </li> </ul> </li> <li>mobiledata_tp.dat <ul> <li>File with errors in data packet transfer for mobile data.  </li> </ul> </li> </ul> </li> <li> <p><code>log/ewlogd/</code> </p> <ul> <li>ewlog0_20240920_144426188369.log <ul> <li>System logs generated by the service ewlogd.  </li> </ul> </li> </ul> </li> <li> <p><code>log/imscr/</code> </p> <ul> <li>imscr.log.0 <ul> <li>Logs of the IMS communication component.  </li> </ul> </li> </ul> </li> <li> <p><code>log/omc/</code> </p> <ul> <li>cidmanager.log <ul> <li>File with logs about the Carrier ID manager.  </li> </ul> </li> <li>csc_update_log.txt <ul> <li>File with record of updates for the personalization package CSC.  </li> </ul> </li> <li>home_fota_update_log.txt <ul> <li>File with records of firmware-over-the-air (FOTA) updates.  </li> </ul> </li> <li>prev_csc_log.txt <ul> <li>File with previous Consumer Software Customization (CSC) configuration logs.  </li> </ul> </li> </ul> </li> <li> <p><code>log/search/</code> </p> <ul> <li>0_com.samsung.android.scs_index_encrypted.tar.gz <ul> <li>Compressed and encrypted file that contains information about the Consumer Software Customization package.  </li> </ul> </li> </ul> </li> <li> <p><code>log/sfslog/</code> </p> <ul> <li>sfslog.0.gz <ul> <li>Compressed file with logs from the Secure File System (SFS).  </li> </ul> </li> </ul> </li> <li> <p><code>log/smartswitch/</code> </p> <ul> <li>1726696227738SmartSwitchSimpleLog.log <ul> <li>File that contains logs about data transfer process using Smart Switch.  </li> </ul> </li> </ul> </li> <li> <p><code>log/update_engine_log/</code> </p> <ul> <li>update_engine.20240603-222843 <ul> <li>File with logs about the software update engine of the system.  </li> </ul> </li> </ul> </li> <li> <p><code>log/wfd/</code> </p> <ul> <li>wfdDumpSource.log <ul> <li>File with logs related to Wi-Fi Direct.  </li> </ul> </li> </ul> </li> <li> <p><code>log/wifi/</code> </p> </li> <li><code>system/proc/</code> <ul> <li>kmsg: File with low-level kernel logs.  </li> <li>last_kmsg: File with last persistent kernel logs following a reboot.  </li> </ul> </li> <li><code>sys/fs/pstore/</code></li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#processes-and-applications","title":"Processes and applications","text":"","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#packagesjson","title":"packages.json","text":"<p>The information in this file is generated by the module packages.go.</p> <p>What is included in this file?</p> <p>This file is in json format, and contains the output of the command <code>adb shell pm list packages</code> It shows a list of the applications installed on the device. </p> <p>The file contains: </p> <ul> <li>name: Name of the package with the app.  </li> <li>files: Path of the APK file, including also the file hashes and certificate information.   </li> <li>installer: Information indicating from which app was installed.   </li> <li>uid: The PID associated with the app execution.   </li> <li>disabled: Indicates if the app is disabled or not.   </li> <li>system: Indicates if the package is part of the operating system packages.   </li> <li>third_party: Indicates if the app is from a third party. </li> </ul> <p>Why is this important?</p> <p>This file contains information about the applications installed on the devices and whether they are enabled or not. The list of apps, and app names are often used as indicators to signal a potentially malicious application. By exploring the apps, their permissions and settings it might be possible to understand their usage of data and their intent. </p> <p>Example: </p> <pre><code>[\n    {\n        \"name\": \"com.whatsapp\",\n        \"files\": [\n            {\n                \"path\": \"/data/app/~~bqy7OQa_ZY_wDTFdG5YZRA==/com.whatsapp-3CExO11mXQz7SoP-3&gt;\n                \"local_name\": \"\",\n                \"md5\": \"a6014f075183b8872d115e04f546a19a\",\n                \"sha1\": \"7c52f9781c44c4902aecb4fc8a13584998e02376\",\n                \"sha256\": \"26721b2669943d57f9de57614a11077b7c3f3036396d48c3e54cbf0effd2268e\",\n                \"sha512\": \"21bea0ff94a748826041a1a8b3b9189090340086469ec62d31cf0d263c743fc2e&gt;\n                \"error\": \"\",\n                \"verified_certificate\": true,\n                \"certificate\": {\n                    \"Md5\": \"556c6019249bbc0cab70495178d3a9d1\",\n                    \"Sha1\": \"38a0f7d505fe18fec64fbf343ecaaaf310dbd799\",\n                    \"Sha256\": \"3987d043d10aefaf5a8710b3671418fe57e0e19b653c9df82558feb5ffce5&gt;\n                    \"ValidFrom\": \"2010-06-25T23:07:16Z\",\n                    \"ValidTo\": \"2044-02-15T23:07:16Z\",\n                    \"Issuer\": \"C=US, ST=California, L=Santa Clara, O=WhatsApp Inc., OU=Engin&gt;\n                    \"Subject\": \"C=US, ST=California, L=Santa Clara, O=WhatsApp Inc., OU=Engi&gt;\n                    \"SignatureAlgorithm\": \"DSA-SHA1\",\n                    \"SerialNumber\": 1277507236\n                },\n                \"certificate_error\": \"\",\n                \"trusted_certificate\": true\n            }\n        ],\n        \"installer\": \"com.facebook.system\",\n        \"uid\": 10267,\n        \"disabled\": false,\n        \"system\": false,\n        \"third_party\": true\n    }\n]\n</code></pre>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#apks","title":"apks/","text":"<p>The information in this folder is generated by the packages.go module.</p> <p>What is included in this file?</p> <p>This directory contains the APKs extracted from the device. These are the files used for the installation of apps that were present in the system upon conducting the analysis. </p> <p>Why is this important?</p> <p>The analysis of the APKs installed on the device can lead to potential malicious software either embedded in existing apps or masking itself as a different application. The information in this folder also helps in doing more in-depth review of APKs, including verifying their authenticity and potentially engaging in reverse engineering to gather further intelligence and indicators of compromise. </p>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#processestxt","title":"processes.txt","text":"<p>The information in this file is generated by the processes.go module. </p> <p>What is included in this file? </p> <p>This file is in JSON format and contains the output of the command <code>adb shell ps -A</code> which provides detailed information about the process being executed on the device. </p> <p>Why is this important?</p> <p>This file provides additional information about the processes that are executed in the device. Information about processes is sometimes available as part of IOC of certain malicious activities, and it is also helpful to analyze apps and processes in depth, understanding relationships between them (by exploring parent processes), among other characteristics. </p> <p>Ejemplo del contenido del archivo</p> <pre><code>[\n    {\n        \"pid\": 1,\n        \"uid\": 0,\n        \"ppid\": 0,\n        \"pgroup\": 0,\n        \"psid\": 0,\n        \"filename\": \"(init)\",\n        \"priority\": 0,\n        \"state\": \"S\",\n        \"user_time\": 0,\n        \"kernel_time\": 0,\n        \"path\": \"/system/bin/init\",\n        \"context\": \"u:r:init:s0\",\n        \"previous_context\": \"u:r:kernel:s0\",\n        \"command_line\": [\"/system/bin/init\", \"second_stage\"],\n        \"env\": null,\n        \"cwd\": \"/\"\n    },\n    {\n        \"pid\": 2,\n        \"uid\": 0,\n        \"ppid\": 0,\n        \"pgroup\": 0,\n        \"psid\": 0,\n        \"filename\": \"(kthreadd)\",\n        \"priority\": 0,\n        \"state\": \"S\",\n        \"user_time\": 0,\n        \"kernel_time\": 0,\n        \"path\": \"\",\n        \"context\": \"u:r:kernel:s0\",\n        \"previous_context\": \"u:r:kernel:s0\",\n        \"command_line\": null,\n        \"env\": null,\n        \"cwd\": \"\"\n    },\n    {\n        \"pid\": 20430,\n        \"uid\": 0,\n        \"ppid\": 0,\n        \"pgroup\": 0,\n        \"psid\": 0,\n        \"filename\": \"(com.whatsapp)\",\n        \"priority\": 0,\n        \"state\": \"\",\n        \"user_time\": 0,\n        \"kernel_time\": 0,\n        \"path\": \"\",\n        \"context\": \"u:r:untrusted_app:s0:c11,c257,c512,c768\",\n        \"previous_context\": \"u:r:init:s0\",\n        \"command_line\": [\n            \"com.whatsapp\"\n        ],\n        \"env\": null,\n        \"cwd\": \"\"\n    },\n]\n</code></pre> <p>Learn more</p> <ul> <li>General description of android processes and subprocesses </li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#servicestxt","title":"services.txt","text":"<p>The information on this file is generated by the services.go module. </p> <p>What is included in this file? </p> <p>This file is in txt format and contains the output of the command <code>adb shell service list</code> This command displays detailed information about the services in execution. The structure of the file is the name of the service and the process or package related to the service. </p> <p>Why is this important?</p> <p>This file can help identify suspicious services, or similarly detect if some other expected services have been halted and are not running. </p> <p>Example: </p> <pre><code>Found 368 services:\n0   AtlasService: [android.atlas.service]\n1   DockObserver: []\n9   accessibility: [android.view.accessibility.IAccessibilityManager]\n10  account: [android.accounts.IAccountManager]\n11  activity: [android.app.IActivityManager]\n13  adb: [android.debug.IAdbManager]\n16  alarm: [android.app.IAlarmManager]\n26  android.hardware.power.IPower/default: [android.hardware.power.IPower]\n27  android.hardware.power.stats.IPowerStats/default: []\n43  anrmanager: [android.app.IAnrManager]\n44  anti_root_dialog: [com.oplus.exsystemservice.antirootdialog.IAntiRootDialog]\n50  appops: [com.android.internal.app.IAppOpsService]\n56  audio: [android.media.IAudioService]\n61  battery: []\n63  batterystats: [com.android.internal.app.IBatteryStats]\n68  bugreport: [android.os.IDumpstate]\n70  cacheinfo: []\n72  clipboard: [android.content.IClipboard]\n78  connectivity: [android.net.IConnectivityManager]\n84  cpuinfo: []\n85  critical.log: []\n89  dbinfo: []\n130 input: [android.hardware.input.IInputManager]\n133 installd: []\n146 location: [android.location.ILocationManager]\n149 logcat: [android.os.logcat.ILogcatManagerService]\n169 meminfo: []\n181 netstats: [android.net.INetworkStatsService]\n191 notification: [android.app.INotificationManager]\n234 package: [android.content.pm.IPackageManager]\n238 permission: [android.os.IPermissionController]\n240 permissionmgr: [android.permission.IPermissionManager\n242 phone: [com.android.internal.telephony.ITelephony]\n247 power: [android.os.IPowerManager]\n248 power_hal_mgr_service: [com.mediatek.powerhalmgr.IPowerHalMgr]\n249 power_monitor: [com.oplus.os.IOplusPowerMonitor]\n250 powerstats: []\n252 processinfo: [android.os.IProcessInfoService]\n253 procstats: [com.android.internal.app.procstats.IProcessStats]\n255 recovery: [android.os.IRecoverySystem]\n273 sensorservice: [android.gui.SensorServer]\n274 serial: [android.hardware.ISerialManager]\n276 settings: []\n298 system_server_dumper: []\n299 system_update: [android.os.ISystemUpdateManager]\n301 telecom: [com.android.internal.telecom.ITelecomService]\n302 telephony.registry: [com.android.internal.telephony.ITelephonyRegistry]\n314 tracing.proxy: [android.tracing.ITracingServiceProxy]\n322 usb: [android.hardware.usb.IUsbManager]\n323 user: [android.os.IUserManager]\n354 virtualdevice: [android.companion.virtual.IVirtualDeviceManager]\n355 vodata: [com.mediatek.ims.internal.IVoDataService]\n357 vold: []\n358 vpn_management: [android.net.IVpnManager]\n363 wifi: [android.net.wifi.IWifiManager]\n367 window: [android.view.IWindowManager]\n</code></pre> <p>Learn more: </p> <ul> <li>How services work on Android</li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#root_binariesjson","title":"root_binaries.json","text":"<p>The information on this file is generated by the root_binaries.go module, and is intended to provide guidance on whether the device is running with root privileges or not. </p> <p>What is included in this file? </p> <p>This file is in json format and contains the output of the command <code>adb shell which -a</code> applied to a list of binaries to determine whether they are present on the system or not. </p> <p>The binaries included are commonly used to obtain root access, or to elevate privileges in the system. The list of binaries that is checked using this command is the following: </p> <ul> <li>su  </li> <li>busybox  </li> <li>supersu  </li> <li>Superuser.apk  </li> <li>KingoUser.apk  </li> <li>SuperSu.apk  </li> <li>magisk  </li> <li>magiskhide  </li> <li>magiskinit  </li> <li>magiskpolicy</li> </ul> <p>If none of these files is present in the system, then the content of the file will be empty. </p> <p>Why is this important?</p> <p>This file can help detect tools used to obtain root access on the device. This might be an indication of unauthorized access or an escalation of privileges. It might also be an indication that the phone was rooted by the owner. The command provides also a list of the binaries found, which can be helpful to understand how it was rooted. </p> <p>Example: </p> <p>In case the device is not rooted, the output will be something like: </p> <pre><code>[]\n</code></pre> <p>In case the device is rooted, the command will provide a list of the binaries found: </p> <pre><code>[\n    \"/system/xbin/su\",\n    \"/system/bin/su\",\n    \"/data/local/xbin/su\",\n    \"/data/local/bin/busybox\",\n    \"/sbin/su\",\n    \"/su/bin/magisk\",\n    \"/system/bin/.ext/.su\",\n    \"/data/local/tmp/Superuser.apk\",\n    \"/data/local/tmp/magiskhide\"\n]\n</code></pre>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#information-backed-up-from-the-device","title":"Information backed up from the device","text":"","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#backupab","title":"backup.ab","text":"<p>The information on this file is generated by the backup.go module. This module is specifically designed to create security copies of data stored on Android devices. </p> <p>What is included in this file? </p> <p>This is a binary file, and contains data extracted using the command <code>adb backup</code> using parameters depending on the options selected from: \u201conly SMS\u201d, \u201ceverything\u201d or \u201cno backup\u201d. These binary files might contain personal information. </p> <p>The resulting file can be analyzed using MVT through the command <code>mvt-android check-backup backup.ab</code></p> <p>Why is this important?</p> <p>When SMS backup is allowed, the information from the SMS messages can be used to locate potential malicious links or other indicators of compromise. </p> <p>Example: </p> <pre><code>(Binary data containing app backups and settings)\n414e 4452 4f49 4420 4241 434b 5550 0a35\n0a30 0a6e 6f6e 650a 6170 7073 2f63 6f6d\n2e61 6e64 726f 6964 2e63 7473 2e63 7473\n7368 696d 2f5f 6d61 6e69 6665 7374 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000 3030 3036\n3030 2000 3031 3735 3000 0000 3031 3735\n3000 0000 3030 3030 3030 3034 3537 3600\n3000 0000 0000 0000 0000 0000 3031 3430\n3134 0020 3000 0000 0000 0000 0000 0000\n</code></pre> <p>Learn more:</p> <ul> <li>Extracci\u00f3n de archivos de respaldo | Android Backup Extractor </li> <li>Analysis of Android backup file </li> <li>Check an Android Backup (SMS messages) - Mobile Verification Toolkit </li> </ul>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#filesjson","title":"files.json","text":"<p>The information on this file is generated using the files.go module. </p> <p>What is included in this file? </p> <p>This is a file in json format that contains the result of using the find command to gather information about specific system locations.  The exact command used is as follows  <code>adb shell find '/' -maxdepth 1 -printf '%T@ %m %s %u %g %p\\n' 2\\&gt; /dev/null</code>  and it is applied on the following folders: </p> <ul> <li>/sdcard/  </li> <li>/system/  </li> <li>/system_ext/  </li> <li>/vendor/  </li> <li>/cust/  </li> <li>/product/  </li> <li>/apex/  </li> <li>/data/local/tmp/  </li> <li>/data/media/0/  </li> <li>/data/misc/radio/  </li> <li>/data/vendor/secradio/  </li> <li>/data/log/  </li> <li>/tmp/  </li> <li>/  </li> <li>/data/data/</li> </ul> <p>Each file includes information including the path, size, timestamp of last modification and last access, permissions, owner, error messages and hashes. </p> <p>Why is this important?</p> <p>Information in this file can be helpful to identify malicious files or traces of activity from a potential intrusion on the device. </p> <p>Example: </p> <pre><code>{\n\"path\": \"/sdcard/Android/.Trash/com.sec.android.app.myfiles/.nomedia\",\n        \"size\": 62,\n        \"mode\": \"-rw-rw----\",\n        \"user_id\": 10276,\n        \"user_name\": \"\",\n        \"group_id\": 1023,\n        \"group_name\": \"\",\n        \"changed_time\": 1722868692,\n        \"modified_time\": 1722868692,\n        \"access_time\": 1714937715,\n        \"error\": \"\",\n        \"context\": \"u:object_r:fuse:s0\",\n        \"sha1\": \"\",\n        \"sha256\": \"\",\n        \"sha512\": \"\",\n        \"md5\": \"\"\n}\n</code></pre>","tags":["explainer","intro"]},{"location":"references/01-reference-androidqf-dictionary/01-reference-androidqf-dictionary.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html","title":"MVT bugreport output file dictionary","text":"2025-09-012025-09-01","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#mvt-bugreport-output-file-dictionary","title":"MVT bugreport output file dictionary","text":"<p>This document contains information about the files generated by MVT through the <code>mvt-check bugreport</code> component. The objective of this dictionary is to provide analysts with the ability to easily search for specific information and to understand the format in which the forensic analysis data is presented.</p> <p>This resource is part of a technical documentation repository, whose goal is to establish a proven, flexible, and accessible knowledge base to strengthen consent-based forensic analysis in benefit of civil society. To organize the contents we use the technical documentation framework Diataxis.</p> <p>This specific resource falls within the category of references, and contains information about the analysis of bugreports  using MVT and specifically the mvt-android check-bugreport command. The purpose of this dictionary is to help analysts understands the files generated, how to use them, where to look for specific information, and in what format it can be found.</p> <p>For the development of this resource we used version 2.6.0 of MVT.</p> <p>The information generated by mvt-bugreport can be grouped into 4 main categories:</p> <ul> <li>Acquisition details</li> <li>Device configuration</li> <li>Information on system logs and events</li> <li>Processes and applications</li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#acquisition-details","title":"Acquisition details","text":"","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#info.json","title":"info.json","text":"<p>What is included in this file?</p> <p>This file is in JSON format and contains information related to the analysis performed on the bugreport file. More specifically, it includes: </p> <ul> <li>Path of the analyzed file.</li> <li>Version of MVT used.</li> <li>Date of the analysis.</li> <li>List of indicator of compromise (IoC) files.</li> <li>Hash of the analyzed bugreport (SHA-256).</li> </ul> <p>Why is this important?</p> <p>This file allows us to validate the analysis that has been performed, documenting the record of the acquisition process and the indicators that were considered for making the analysis.</p> <p>It also provides useful information to support chain of custody by documenting version, hashes and logs related to the forensic examination. </p> <p>File structure::</p> <pre><code>{\n    \"target_path\": \"/ruta/del/archivo/bugreport.zip\",\n    \"mvt_version\": \"2.6.1\",\n    \"date\": \"YYYY-MM-DD hh:mm:ss\",\n    \"ioc_files\": [\n        \"/ruta/a/indicadores/pegasus.stix2\",\n        \"/ruta/a/indicadores/predator.stix2\",\n        \"/ruta/a/indicadores/rcs_lab.stix2\",\n        \"... m\u00e1s indicadores utilizados ...\"\n    ],\n    \"hashes\": [\n        {\n            \"file_path\": \"/ruta/del/archivo/bugreport.zip\",\n            \"sha256\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n        }\n    ]\n}\n</code></pre>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#command.log","title":"command.log","text":"<p>What is included in this file?</p> <p>This file is in plain text format with a .log extension and contains the detailed records of the execution of the mvt-android check-bugreport command. It shows the output of the analysis performed on the bugreport, including any detection of indicators of compromise related to  malware.</p> <p>The records in the file are presented with the following structure:</p> <ul> <li>Timestamps</li> <li>Names of the module in execution</li> <li>Message type (INFO, DEBUG, WARNING, ERROR)</li> <li>Corresponding action of the module (parsing the file, loading IoCs, comparison, and result of the comparison).</li> </ul> <p>The message types can be described as follows:</p> <ul> <li>INFO. Messages also shown on screen during execution.</li> <li>DEBUG. Information not shown on screen but associated with an action performed during the analysis, for example, loading an IoC or checking a hash.</li> <li>WARNING. Corresponds to alerts of activity or suspicious information that an analyst should verify.</li> <li>ERROR. Error messages in some action performed during the analysis, for example, when loading a corrupted file or an issue with executing the corresponding code.</li> </ul> <p>Why is this important?</p> <p>It presents record of the actions performed and findings from the analysis. Through this record, it is possible to verify the following:</p> <ul> <li>That the analysis was performed correctly</li> <li>If there was any match with known IoCs</li> <li>If any suspicious information or activity was identified.</li> </ul> <p>File structure::</p> <p>This file follows the structure shown on top:</p> <pre><code>[TIMESTAMP] - [MODULE] - [LOG LEVEL] - [MESSAGE]  \n...\n2025-07-25 21:51:28,004 - mvt.android.cmd_check_bugreport - INFO - Parsing STIX2 indicators file at path /home/user/.local/share/mvt/indicators/raw.githubusercontent.com_AmnestyTech_investigations_master_2021-07-18_nso_pegasus.stix2\n2025-07-25 21:51:28,082 - mvt.android.cmd_check_bugreport - DEBUG - Extracted 1549 indicators for collection with name \"Pegasus\"\n...\n2025-07-25 21:51:29,524 - mvt.android.cmd_check_bugreport - INFO - Loaded a total of 10747 unique indicators\n2025-07-25 21:51:29,524 - mvt - INFO - Checking Android bug report at path: ./0caba18f-20a7-48d0-b9ba-724fdaa3ff85/bugreport.zip\n...\n2025-07-25 21:51:29,527 - mvt.android.modules.bugreport.accessibility - INFO - Running module Accessibility...\n2025-07-25 21:51:30,794 - mvt.android.modules.bugreport.accessibility - INFO - Found installed accessibility service \"com.samsung.accessibility/.assistantmenu.serviceframework.AssistantMenuService\"\n...\n2025-07-25 21:51:30,797 - mvt.android.modules.bugreport.accessibility - INFO - Identified a total of 4 accessibility services\n2025-07-25 21:51:30,822 - mvt.android.modules.bugreport.accessibility - INFO - The Accessibility module produced no detections!\n...\n2025-07-25 21:51:30,823 - mvt.android.modules.bugreport.activities - INFO - Running module Activities...\n2025-07-25 21:51:32,156 - mvt.android.modules.bugreport.activities - INFO - Extracted 4312 package activities\n2025-07-25 21:51:32,844 - mvt.android.modules.bugreport.activities - INFO - The Activities module produced no detections!\n...\n2025-07-25 21:51:51,292 - mvt.android.modules.bugreport.adb_state - INFO - Running module DumpsysADBState...\n2025-07-25 21:51:52,196 - mvt.android.modules.bugreport.adb_state - INFO - Identified a total of 0 trusted ADB keys\n2025-07-25 21:51:52,220 - mvt.android.modules.bugreport.adb_state - INFO - The DumpsysADBState module produced no detections!\n2025-07-25 21:51:52,222 - mvt.android.modules.bugreport.fs_timestamps - INFO - Running module BugReportTimestamps...\n2025-07-25 21:51:52,224 - mvt.android.modules.bugreport.fs_timestamps - INFO - Extracted a total of 239 filesystem timestamps from bugreport.\n2025-07-25 21:51:52,225 - mvt.android.modules.bugreport.fs_timestamps - INFO - The BugReportTimestamps module does not support checking for indicators\n2025-07-25 21:51:52,228 - mvt.android.modules.bugreport.tombstones - INFO - Running module Tombstones...\n2025-07-25 21:51:53,552 - mvt.android.modules.bugreport.tombstones - INFO - Extracted a total of 64 tombstone files\n2025-07-25 21:51:53,555 - mvt.android.modules.bugreport.tombstones - WARNING - Potentially suspicious crash in process 'Loc_hal_worker' running as UID '1000' in tombstone 'tombstone_13' at 2024-12-27 06:46:15.013046\n2025-07-25 21:51:53,556 - mvt.android.modules.bugreport.tombstones - WARNING - Potentially suspicious crash in process 'LocApiMsgTask' running as UID '1000' in tombstone 'tombstone_13.pb' at 2024-12-27 06:46:15.013046\n2025-07-25 21:51:53,557 - mvt.android.modules.bugreport.tombstones - WARNING - Potentially suspicious crash in process 'thermal@1.0-ser' running as UID '1000' in tombstone 'tombstone_14' at 2025-03-09 06:46:15.606938\n2025-07-25 21:51:53,558 - mvt.android.modules.bugreport.tombstones - WARNING - Potentially suspicious crash in process 'POSIX timer 1' running as UID '1000' in tombstone 'tombstone_14.pb' at 2025-03-09 06:46:15.606938\n2025-07-25 21:51:53,559 - mvt.android.modules.bugreport.tombstones - WARNING - Potentially suspicious crash in process 'HwBinder:1251_2' running as UID '1000' in tombstone 'tombstone_15' at 2025-03-30 06:46:15.306491\n2025-07-25 21:51:53,560 - mvt.android.modules.bugreport.tombstones - WARNING - Potentially suspicious crash in process 'LocApiMsgTask' running as UID '1000' in tombstone 'tombstone_15.pb' at 2025-03-30 06:46:15.306491\n2025-07-25 21:51:53,561 - mvt.android.modules.bugreport.tombstones - WARNING - Potentially suspicious crash in process 'Loc_hal_worker' running as UID '1000' in tombstone 'tombstone_17' at 2025-05-22 06:46:16.292957\n2025-07-25 21:51:53,562 - mvt.android.modules.bugreport.tombstones - WARNING - Potentially suspicious crash in process 'LocApiMsgTask' running as UID '1000' in tombstone 'tombstone_17.pb' at 2025-05-22 06:46:16.292957\n2025-07-25 21:51:53,623 - mvt.android.cmd_check_bugreport - INFO - Reference hash of the info.json file: \"aee39fbcabf86848a4d806b7217b030f6240e5c62d02b12e330206c6a229c2b0\"\n2025-07-25 21:51:53,624 - mvt.android.cmd_check_bugreport - WARNING - [bold]NOTE: Detected indicators of compromise[/bold]. Only expert review can confirm if the detected indicators are signs of an attack.\n\nPlease seek reputable expert help if you have serious concerns about a possible spyware attack. Such support is available to human rights defenders and civil society through Amnesty International's Security Lab at https://securitylab.amnesty.org/get-help/?c=mvt\n2025-07-25 21:51:53,625 - mvt - WARNING - The analysis of the Android bug report produced 13 detections!\n</code></pre> <p>Learn more</p> <ul> <li>Introduction to STIX</li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#timeline.csv","title":"timeline.csv","text":"<p>What is included in this file? </p> <p>This file is in csv format and stores a timeline of the device\u2019s activity. This activity is obtained from the execution of the MVT analysis modules and is ordered by time.</p> <p>Each line of the csv corresponds to:</p> <ul> <li>Device Local Timestamp</li> <li>Executed module (Plugin)</li> <li>Activity identified on the device (Event)</li> <li>Description of the activity identified on the device (Description)</li> </ul> <p>Why is this important? * This file can help gain a more clear understanding of the sequence of events and activities, giving a more clear idea of the device behaviors at different times. </p> <p>File structure:</p> <p>This file follows the structure shown on top:</p> <pre><code>\"Device Local Timestamp\",\"Plugin\",\"Event\",\"Description\"\n\"1969-12-31 18:00:00\",\"Packages\",\"package_install\",\"Install or update of package com.android.uwb.resources\"\n\"1969-12-31 18:00:00\",\"Packages\",\"package_first_install\",\"Install or update of package com.cr\nunchyroll.crunchyroid\"\n\"1969-12-31 18:00:00\",\"Packages\",\"package_last_update\",\"Install or update of package com.goog\nle.android.ext.services\"\n...\n\"2008-12-31 09:00:00\",\"Packages\",\"package_last_update\",\"Install or update of package com.samsung.android.ardrawing\"\n\"2008-12-31 09:00:00\",\"Packages\",\"package_install\",\"Install or update of package com.samsung.android.ConnectivityUxOverlay\"\n...\n\"2019-01-19 02:53:42.000000\",\"BugReportTimestamps\",\"M---\",\"FS/cache/recovery/last_log.1\"\n\"2019-01-19 02:53:42.000000\",\"BugReportTimestamps\",\"M---\",\"FS/cache/recovery/last_kmsg.1\"\n...\n\"2021-12-13 08:39:45.243000\",\"Appops\",\"Reject\",\"com.google.android.as access to GET_USAGE_STATS: Reject\"\n\"2021-12-13 08:39:46.277000\",\"Appops\",\"Access\",\"com.android.providers.media access to READ_EXTERNAL_STORAGE: Access\"\n...\n\"2024-12-26 00:52:24.264000\",\"Appops\",\"Access\",\"com.google.android.gms access to READ_CONTACTS: Access\"\n\"2024-12-26 22:31:06.194000\",\"Appops\",\"Access\",\"com.samsung.android.messaging access to WRITE_CALL_LOG: Access\"\n\"2024-12-27 06:46:15.013046\",\"Tombstones\",\"Tombstone\",\"Crash in 'Loc_hal_worker' process running as UID '1000' in file 'tombstone_13' Crash type 'SIGABRT' with code 'SI_QUEUE'\"\n\"2024-12-27 06:46:15.013046\",\"Tombstones\",\"Tombstone\",\"Crash in 'LocApiMsgTask' process running as UID '1000' in file 'tombstone_13.pb' Crash type 'SIGABRT' with code 'SI_QUEUE'\"\n\"2024-12-27 06:46:16.000000\",\"BugReportTimestamps\",\"M---\",\"FS/data/tombstones/tombstone_13\"\n\"2024-12-27 06:46:16.000000\",\"BugReportTimestamps\",\"M---\",\"FS/data/tombstones/tombstone_13.pb\"\n\"2024-12-27 06:46:58.561000\",\"Appops\",\"Access\",\"com.qti.snapdragon.qdcm_ff access to BLUETOOTH_CONNECT: Access\"\n\"2024-12-27 06:47:03.100000\",\"Appops\",\"Reject\",\"com.android.inputdevices access to NO_ISOLATED_STORAGE: Reject\"\n...\n\"2025-06-30 21:30:30.477000\",\"Appops\",\"Access\",\"com.sec.android.app.launcher access to REQUEST_DELETE_PACKAGES: Access\"\n\"2025-07-01\",\"BatteryDaily\",\"battery_daily\",\"Recorded update of package com.google.android.apps.restore with vers 818758\"\n\"2025-07-01\",\"BatteryDaily\",\"battery_daily\",\"Recorded update of package com.google.android.apps.chromecast.app with vers 30503818\"\n\"2025-07-01\",\"BatteryDaily\",\"battery_daily\",\"Recorded update of package com.google.android.apps.tasks with vers 1885693\"\n...\n</code></pre>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#device-configurations","title":"Device configurations","text":"","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#getprop.json","title":"getprop.json","text":"<p>The information on this file is generated by the getprop module and the artifact getprop.</p> <p>What is included in this file?</p> <p>This file is in json format and contains a list of the device properties extracted from the SYSTEM PROPERTIES section of dumpsys.</p> <p>These system properties are string key-value pairs stored in the global build.prop dictionary or in .sysprop description files, providing a convenient way to share configurations within the system.</p> <p>The information can be found using the following format:</p> <pre><code>[{prefix}.]{group}[.{subgroup}]*.{name}[.{type}]\n</code></pre> <p>Some properties appear with the ro prefix, indicating they are read-only properties or assigned after the device reboot. Properties with the persist prefix refer to settings that persist across reboots. Some properties have no prefix, starting directly with the group to which they belong.</p> <p>The most common groups are:</p> <ul> <li>bluetooth, related to Bluetooth</li> <li>boot, kernel cmdline sysprops</li> <li>build, sysprops identifying a build</li> <li>telephony, related to telephony</li> <li>audio, related to audio</li> <li>graphics, related to graphics</li> <li>vold, related to vold, which manages the mounting of physical external storage volumes</li> </ul> <p>For more detail, you can review the list of properties already defined in the Android source code</p> <p>Why is this important?</p> <p>Properties provide important information about the device\u2019s hardware and software, which can be altered by malicious software to hide its presence or to inadvertently modify the device\u2019s behavior.</p> <p>File structure::</p> <pre><code>[\n    {\n        \"name\": \"DEVICE_PROVISIONED\",\n        \"value\": \"1\"\n    },\n    {\n        \"name\": \"aaudio.hw_burst_min_usec\",\n        \"value\": \"2000\"\n    },\n    {\n        \"name\": \"bluetooth.device.class_of_device\",\n        \"value\": \"90,2,12\"\n    },\n    {\n        \"name\": \"ro.boot.serialno\",\n        \"value\": \"RF8T11XXXXX\"\n    },\n    {\n        \"name\": \"ro.bootimage.build.date\",\n        \"value\": \"Mon Mar 24 20:09:54 KST 2025\"\n    },\n    {\n        \"name\": \"ro.hardware.chipname\",\n        \"value\": \"SM8250\"\n    },\n    {\n        \"name\": \"ro.product.system.model\",\n        \"value\": \"SM-G780G\"\n    },\n    {\n        \"name\": \"ro.build.selinux\",\n        \"value\": \"1\"\n    }\n]\n</code></pre> <p>Learn more</p> <ul> <li>General configuration description | System properties | Android Open Source Project </li> <li>How to implement system properties as APIs | Android Open Source Project </li> <li>Add system properties | Android Open Source Project </li> <li>Compatibilities policy | Android Open Source Project </li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#information-on-system-logs-and-events","title":"Information on system logs and events","text":"","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#dumpsys_adb_state.json","title":"dumpsys_adb_state.json","text":"<p>The content of this file is generated using the adb_state  module and the dumpsys_adb artifact.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about an ADB connection, which is extracted from the adb service in dumpsys.</p> <p>The information in the file is presented as follows:</p> <ul> <li>connected_to_adb. Indicates whether the device had an active connection to ADB (true or false).</li> <li>last_key_received. A hexadecimal string representing the last public key used to pair the device with the ADB host.</li> <li>keystore. May contain information about the key store used for authentication, although in most cases it appears as null.</li> <li>user_keys. List of user public keys stored on the device.</li> </ul> <p>Why is this important?</p> <p>The content of this file allows the analyst to determine whether the device has been recently connected to a computer via ADB, which can reveal attempts to extract and analyze forensic information from a mobile device.</p> <p>This is particularly useful if the use of tools like Cellebrite UFED  or similar is suspected in cases of arbitrary detention or physical access to the device.</p> <p>One consideration regarding this information is that it does not necessarily demonstrate malicious intervention; rather, it serves as a record of recurrent ADB connections.</p> <p>File structure::</p> <p>The file follows a structure of a list of key-value JSON objects.</p> <pre><code>[\n    {\n        \"connected_to_adb\": \"true\",\n        \"last_key_received\": \"A0:4B:43:78:C0:B2:3D:A1:38:37:A0:B0:CE:E8:94:96\",\n        \"keystore\": null,\n        \"user_keys\": []\n    }\n]\n</code></pre>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#bugreport_timestamps.json","title":"bugreport_timestamps.json","text":"<p>The content of this file is generated by the fs_timestamps module and the artifact file_timestamps.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information related to the file system and system mount points located in the FS (File system) folder within the bugreport.</p> <p>More concretely, if in the file system there is /dirA/dirB/fileC, this is represented as FS/dirA/dirB/fileC. It is important not to confuse the file system and mount points with user-generated files.</p> <p>The information is presented as a list containing the file path and its last modification date.</p> <p>Why is this important?</p> <p>The information in this file allows us to identify unusual changes in the file system and mount points, which could be indicators of malicious activity. For example, it may reveal signs of privilege escalation, unauthorized mounts, or unusual accesses that could have originated from a sandbox escape through file descriptors associated with hardware like the GPU. Additionally, this information can help trace system failures linked to other records such as previous bugreports, crash logs, or tombstones, thereby facilitating the reconstruction of suspicious events.</p> <p>File structure::</p> <pre><code>{\n        \"path\": \"FS/cache/recovery/last_log.8\",\n        \"modified_time\": \"2019-03-27 23:48:02.000000\"\n    },\n    {\n        \"path\": \"FS/cache/recovery/block.map\",\n        \"modified_time\": \"2025-05-15 12:26:18.000000\"\n    },\n    {\n        \"path\": \"FS/cache/recovery/last_history\",\n        \"modified_time\": \"2019-04-19 07:40:26.000000\"\n    },\n    {\n        \"path\": \"FS/cache/recovery/last_log.1\",\n        \"modified_time\": \"2019-01-19 02:53:42.000000\"\n    },\n    {\n        \"path\": \"FS/proc/3188/mountinfo\",\n        \"modified_time\": \"2025-07-07 11:23:36.000000\"\n    },\n    {\n        \"path\": \"FS/proc/3209/mountinfo\",\n        \"modified_time\": \"2025-07-07 11:23:36.000000\"\n    },\n    {\n        \"path\": \"FS/data/anr/anr_2025-07-05-06-49-16-315\",\n        \"modified_time\": \"2025-07-05 06:49:18.000000\"\n    },\n    {\n        \"path\": \"FS/data/log/bt/btsnooz_hci.log.last\",\n        \"modified_time\": \"2025-07-07 11:22:20.000000\"\n    }\n}\n</code></pre> <p>Learn more</p> <ul> <li>Device configuration | Android Open Source Project </li> <li>Partitions overview | Android Open Source Project </li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#dbinfo.json","title":"dbinfo.json","text":"<p>The content of this file is generated by the dbinfo module and the dumpsys_dbinfo artifact.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about the databases used by the applications and services on the device. This information is extracted from the adb service of dumpsys.</p> <p>Internally, Android uses SQLite databases that reside within each application. For example, the application com.example.myapp may contain a database named mydatabase.db located at /data/data/com.example.myapp/databases/mydatabase.db.</p> <p>Each object in the file specifies an operation carried out on these databases, including:</p> <ul> <li>Timestamp</li> <li>Process identifier (pid)</li> <li>Type of operation performed</li> <li>Executed query</li> <li>Database used</li> </ul> <p>Why is this important?</p> <p>This file is important for tracking queries executed on different application databases that may be considered critical, enabling the identification of potentially malicious patterns on the device.</p> <p>File structure::</p> <pre><code>[\n    {\n        \"isodate\": \"2025-01-17 16:55:18.665\",\n        \"pid\": \"0\",\n        \"action\": \"executeForLong\",\n        \"sql\": \"PRAGMA temp.page_size;\",\n        \"path\": \"/data/user/0/com.sec.android.app.launcher/databases/Icon.db\"\n    },\n    {\n        \"isodate\": \"2025-01-17 16:52:18.136\",\n        \"pid\": \"7280\",\n        \"action\": \"execute\",\n        \"sql\": \"COMMIT;\",\n        \"path\": \"/data/user/0/com.sec.android.app.launcher/databases/Icon.db\"\n    },\n    {\n        \"isodate\": \"2025-01-17 16:52:18.133\",\n        \"pid\": \"7280\",\n        \"action\": \"executeForChangedRowCount\",\n        \"sql\": \"DELETE FROM icon WHERE component_name LIKE ? || '/%' AND profile_id = ?\",\n        \"path\": \"/data/user/0/com.sec.android.app.launcher/databases/Icon.db\"\n    }\n]\n</code></pre> <p>Learn more</p> <ul> <li>Data and file storage overview | App data and files | Android Developers </li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#receivers.json","title":"receivers.json","text":"<p>The content of this file is generated by the receivers module and the dympsys_receivers artifact.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about receivers and intents of applications and services on the device. This information is extracted from the package service of dumpsys. * In general terms, an intent is a message that can be used to request an action from another application or system component, and a receiver (or broadcast receiver) is a component that responds to system or application events. One issues the request, and the other listens or responds.</p> <p>The information in the file is presented as follows:</p> <ul> <li>intent. The broadcast or action request.</li> <li>package_name. Name of the package (application or service) that contains the receiver.</li> <li>receiver. Name of the class that handles the receiver.</li> </ul> <p>Why is this important?</p> <p>The information associated with intents and receivers allows us to identify whether a malicious application or service may be communicating or obtaining private or sensitive information through these mechanisms.</p> <p>File structure::</p> <pre><code>{\n    \"android.intent.action.SCREEN_OFF\": [\n        {\n            \"package_name\": \"com.facebook.katana\",\n            \"receiver\": \"com.facebook.katana/com.facebook.notifications.tray.util.NotificationsClientSignalStaticBroadcastReceiver\"\n        },\n        {\n            \"package_name\": \"com.zhiliaoapp.musically\",\n            \"receiver\": \"com.zhiliaoapp.musically/com.ss.android.message.MessageReceiver\"\n        }\n    ],\n    \"com.samsung.android.easysetup.batteryInfo\": [\n        {\n            \"package_name\": \"com.samsung.android.easysetup\",\n            \"receiver\": \"com.samsung.android.easysetup/.BeaconBroadcastReceiver\"\n        }\n    ]\n}\n</code></pre>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#processes-and-applications","title":"Processes and applications","text":"","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#packages.json","title":"packages.json","text":"<p>The information on this file is generated by the packages module and the dumpsys_packages artifact.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about the applications installed on the device. This information is extracted from the package service of dumpsys.</p> <p>The information in the file is presented as follows:</p> <ul> <li>package_name: Name of the application package</li> <li>uid: User identifier associated with the application</li> <li>version_name: Version name of the application</li> <li>version_code: Version code, including the minimum and target SDK</li> <li>timestamp: Timestamp of the last update</li> <li>first_install_time: Date and time of the first installation</li> <li>last_update_time: Date and time of the last update</li> <li>permissions: List of permissions associated with the application</li> <li>requested_permissions: List of permissions requested by the application, although in recent versions it is deprecated and attention should only be given to permissions.</li> </ul> <p>Within the permissions (permissions and requested_permissions) we can find:</p> <ul> <li>name: Name of the requested permission</li> <li>granted: Indicates whether the permission was granted (true) or denied (false)</li> <li>type: Type of permission   </li> <li>declared for permissions declared in the application manifest.  </li> <li>install for permissions granted during installation </li> <li>runtime for permissions requested at runtime</li> </ul> <p>Why is this important?</p> <p>The information in this file allows the analyst to know and map the installed applications, and diagnose whether they could be potentially malicious. For example: abusing dangerous or suspicious permissions, being installed at relevant dates identified in the diagnosis, being associated with suspicious execution processes through their uid, or identifying attack vectors such as the use of old, outdated, or vulnerable versions of applications.</p> <p>File structure::</p> <pre><code>[\n    {\n        \"package_name\": \"com.whatsapp\",\n        \"uid\": \"10365\",\n        \"version_name\": \"2.25.18.80\",\n        \"version_code\": \"251880000 minSdk=21 targetSdk=35\",\n        \"timestamp\": \"2025-06-26 03:25:25\",\n        \"first_install_time\": \"1969-12-31 18:00:00\",\n        \"last_update_time\": \"2025-06-26 03:25:44\",\n        \"permissions\": [\n            {\n                \"name\": \"com.whatsapp.permission.BROADCAST\",\n                \"type\": \"declared\"\n            },\n            {\n                \"name\": \"com.whatsapp.permission.MAPS_RECEIVE\",\n                \"type\": \"declared\"\n            },\n           {\n                \"name\": \"com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE\",\n                \"granted\": true,\n                \"type\": \"install\"\n            },\n            {\n                \"name\": \"android.permission.USE_CREDENTIALS\",\n                \"granted\": true,\n                \"type\": \"install\"\n            },\n            {\n                \"name\": \"android.permission.POST_NOTIFICATIONS\",\n                \"granted\": true,\n                \"type\": \"runtime\"\n            },\n            {\n                \"name\": \"android.permission.READ_CALL_LOG\",\n                \"granted\": false,\n                \"type\": \"runtime\"\n            },\n            {\n                \"name\": \"android.permission.ACCESS_FINE_LOCATION\",\n                \"granted\": true,\n                \"type\": \"runtime\"\n            },\n            {\n                \"name\": \"android.permission.NEARBY_WIFI_DEVICES\",\n                \"granted\": false,\n                \"type\": \"runtime\"\n            },\n            {\n                \"name\": \"android.permission.RECEIVE_SMS\",\n                \"granted\": false,\n                \"type\": \"runtime\"\n            },\n            {\n                \"name\": \"android.permission.BLUETOOTH_CONNECT\",\n                \"granted\": false,\n                \"type\": \"runtime\"\n            }\n        ],\n        \"requested_permissions\": []\n    }\n]\n</code></pre> <p>Learn more</p> <ul> <li>Permissions on Android</li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#activities.json","title":"activities.json","text":"<p>The information in this file is generated by the  activities module and the dumpsys_package_activities artifact.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about the intents and activities associated with each application installed on the device. This information is extracted from the package service of dumpsys.</p> <p>In general terms an intent is a message that can be used to request an action from another component of the application or the system, and an activity is a component that responds as the main entry point of an application. This is the equivalent of a main in some programming languages or of a window in graphical environments. One issues actions to other applications and the other is what the user interacts with.</p> <p>The information in the file is presented as follows:</p> <ul> <li>intent. Issuance or request of action.</li> <li>package_name. Name of the package (application or service) associated with the activity.</li> <li>activity: Name of the class that handles the activity.</li> </ul> <p>Why is this important?</p> <p>The information associated with intents and receivers allows us to identify whether a malicious application or service could be communicating or obtaining private or sensitive information through these methods. The intents allow identifying whether an application sends information or requests for actions to another application, while the activity allows us to identify from where the intent was issued.</p> <p>This is useful to identify how applications interact with each other or what type of services are exposed in some components of the applications. In this way, it is possible to detect intents and activities that could be used maliciously in the background.</p> <p>File structure::</p> <pre><code>[\n    {\n        \"intent\": \"com.google.android.gms.autofill.ACTION_SETTINGS\",\n        \"package_name\": \"com.google.android.gms\",\n        \"activity\": \"com.google.android.gms/.autofill.ui.AutofillSettingsPrivacyHubActivity\"\n    },\n    {\n        \"intent\": \"android.settings.FINGERPRINT_SETUP\",\n        \"package_name\": \"com.android.settings\",\n        \"activity\": \"com.android.settings/.biometrics.fingerprint.SetupFingerprintEnrollIntroduction\"\n    },\n    {\n        \"intent\": \"com.samsung.android.samsungaccount.action.REQUEST_SA_CONSENT_AGREEMENT_SUW\",\n        \"package_name\": \"com.osp.app.signin\",\n        \"activity\": \"com.osp.app.signin/com.samsung.android.samsungaccount.authentication.ui.tnc.view.TncReAgreementView\"\n    }\n]\n</code></pre> <p>Learn more</p> <ul> <li>Intents and intent filters </li> <li>Introduction to activities </li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#appops.json","title":"appops.json","text":"<p>The information in this file is generated by the appops module and the  dumpsys_appos artifact.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about the operations associated with permissions of the applications installed on the device. This information is extracted from the appops service of dumpsys.</p> <p>The information in the file is presented as follows:</p> <p>This file is in json format and contains information about the operations associated with permissions of the applications installed on the device. This information is extracted from the appops service of dumpsys.  </p> <p>The information in the file is presented as follows:  </p> <ul> <li>package_name. Name of the package (application or service).  </li> <li>permissions: List of permissions associated with the application.  <ul> <li>name: Name of the permission requested by the package.  </li> <li>entries: History of operations on the permission.  <ul> <li>access: Status of the permission  <ul> <li>allow. Access to the permission was allowed.  </li> <li>ignore. Access to the permission was not allowed.  </li> <li>deny. Throws a SecurityException when requesting access to the permission.  </li> <li>default. Default behavior of the permission.  </li> <li>foreground. Access to the permission was allowed but only if the application is in the background.  </li> </ul> </li> <li>type: Category of the operation. This is composed of the current state of the operation and of a flag associated with the execution context of the operation. The state of the operation refers to whether it was performed in the foreground, background, etc. And the execution context refers to whether the operation was executed directly by the application, by a trusted external application, by an unverified application, etc. These are concatenated with a hyphen. Not included in all records. <ul> <li>The values for the state of the operation can be the following:  <ul> <li>pers. The operation belongs to a persistent process (for example, system services that should not die).  </li> <li>top. The operation corresponds to the app that is currently in the foreground (visible to the user).  </li> <li>fgsvcl. The operation belongs to a foreground service that accesses location.  </li> <li>fgsvc. The operation belongs to a foreground service.  </li> <li>fg. The operation is in the foreground (visible activity or component in use).  </li> <li>bg. The operation is in the background.  </li> <li>cch. The operation is in cache, that is, the process is not actively running.  </li> <li>gone. The operation has no active processes (does not currently exist).  </li> <li>unknown. Unknown or uncategorized state.  </li> </ul> </li> <li>The values for the operation context flag can be the following:  <ul> <li>s. The operation was executed directly by the application itself (own context).  </li> <li>tp. The operation was executed by a trusted application acting as a proxy for another application.  </li> <li>up. The operation was executed by an untrusted application acting as a proxy for another application.  </li> <li>tpd. The operation was executed on behalf of this application by a trusted proxy.  </li> <li>upd. The operation was executed on behalf of this application by an untrusted proxy.  </li> <li>unknown. Unknown operation context.  </li> </ul> </li> </ul> </li> <li>timestamp: Timestamp when the operation was recorded. Not included in all records. </li> </ul> </li> </ul> </li> <li>uid: User identifier associated with the application. </li> </ul> <p>Why is this important?</p> <p>The apps operations allow us to precisely identify which applications have requested specific permissions and under what conditions and execution context these are being requested.  </p> <p>This is useful to identify whether an application is running in trusted contexts or untrusted contexts when requesting a permission, that is, to identify if an application is using another application as a proxy in order to request a permission, and to verify the way in which this operation was carried out, for example, if this permission request came from another application as a proxy in the background or running from cache.  </p> <p>Identifying risky contexts of permission requests in apps operations allows recognizing repetitive patterns of suspicious permission requests that let us evaluate in depth whether the context in which the operation is executed is legitimate or is linked to the abuse of permissions and privileges, revealing malicious behavior related to malware.  </p> <p>Las apps operations permiten identificar con precisi\u00f3n qu\u00e9 aplicaciones han solicitado permisos espec\u00edficos y bajo qu\u00e9 condiciones y contexto de ejecuci\u00f3n se est\u00e1n solicitando estas. </p> <p>Esto es \u00fatil para identificar si una aplicaci\u00f3n se ejecuta en contextos de confiables (trusted context) o contextos no confiables (untrusted context) al solicitar un permiso, es decir, identificar si una aplicaci\u00f3n est\u00e1 usando a otra aplicaci\u00f3n como proxy para poder solicitar un permiso y verificar la forma en que esta operaci\u00f3n se llev\u00f3 a cabo, por ejemplo, si esta solicitud de permiso vino desde otra aplicaci\u00f3n como proxy en segundo plano o ejecut\u00e1ndose desde cache.</p> <p>Identificar contextos riesgosos de solicitud de permisos en apps operations, permite reconocer patrones de solicitud de permisos repetitivos que sean sospechosos y que nos permitan evaluar a profundidad si el contexto en que se ejecuta la operaci\u00f3n es leg\u00edtimo o est\u00e1 vinculado al abuso de permisos y privilegios revelando alg\u00fan comportamiento malicioso relacionado con malware.</p> <p>File structure::</p> <pre><code>{\n    \"package_name\": \"com.samsung.android.provider.filterprovider\",\n    \"permissions\": [\n        {\n            \"name\": \"MANAGE_EXTERNAL_STORAGE\",\n            \"entries\": [\n                {\n                    \"access\": \"Reject\",\n                    \"type\": \"pers-s\",\n                    \"timestamp\": \"2024-12-01 19:47:10.776000\"\n                }\n            ],\n            \"access\": \"default\"\n        },\n        {\n            \"name\": \"BLUETOOTH_CONNECT\",\n            \"entries\": [\n                {\n                    \"access\": \"Access\",\n                    \"type\": \"pers-s\",\n                    \"timestamp\": \"2024-12-11 06:41:14.035000\"\n                }\n            ],\n            \"access\": \"allow\"\n        }\n    ],\n    \"uid\": \"1000\"\n}\n</code></pre> <p>Learn more</p> <ul> <li>AppOpsManager </li> <li>App-ops </li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#accessibility.json","title":"accessibility.json","text":"<p>The information in this file is generated by the  accessibility module and the dumpsys_accesibility artifact.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about the active accessibility services related to an application on the device. This information is extracted from the accessibility service of dumpsys.  </p> <p>In general terms, an accessibility service is a component of an application that runs background tasks and can observe the events happening in the interface and perform some action for the user in order to assist people with disabilities. For example, screen readers, system high-contrast color controls, microphone listening for voice commands, etc., which can be abused by attackers.  </p> <p>The information in the file is presented as follows:  </p> <ul> <li>package_name: Name of the package (application or service).  </li> <li>service: Name of the class that handles the accessibility service.  </li> </ul> <p>Why is this important?</p> <p>This file allows us to identify if an application makes use of an accessibility service. This is useful to identify the full name of the service class and determine whether its use has malicious objectives.  </p> <p>File structure::</p> <pre><code>[\n    {\n        \"package_name\": \"com.google.android.apps.accessibility.voiceaccess\",\n        \"service\": \"com.google.android.apps.accessibility.voiceaccess/.JustSpeakService  (A11yTool)\"\n    },\n    {\n        \"package_name\": \"com.microsoft.appmanager\",\n        \"service\": \"com.microsoft.appmanager/com.microsoft.mmx.screenmirroringsrc.accessibility.ScreenMirroringAccessibilityService\"\n    },\n    {\n        \"package_name\": \"com.samsung.accessibility\",\n        \"service\": \"com.samsung.accessibility/.universalswitch.UniversalSwitchService  (A11yTool)\"\n    },\n    {\n        \"package_name\": \"com.samsung.accessibility\",\n        \"service\": \"com.samsung.accessibility/.assistantmenu.serviceframework.AssistantMenuService  (A11yTool)\"\n    },\n    {\n        \"package_name\": \"com.samsung.android.accessibility.talkback\",\n        \"service\": \"com.samsung.android.accessibility.talkback/com.samsung.android.marvin.talkback.TalkBackService  (A11yTool)\"\n    }\n]\n</code></pre> <p>Learn more</p> <ul> <li>AccessibilityService on Android</li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#tombstones.json","title":"tombstones.json","text":"<p>The information in this file is generated by the tombstones module, the tombstone_crashes artifact and the proto/tombstone.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about the crash logs of an application or service. This information is extracted from the tombstone.pb files located in the FS/data/tombstones folder within the bugreport.</p> <p>This file contains detailed information about the processes involved, the error signals triggered at the time of the crash, binaries associated with the crash, and the general environment in which the crash occurred.</p> <p>The information in the file is presented as follows:</p> <ul> <li>file_name: Name of the file, for example tombstone_xx.  </li> <li>file_timestamp: Timestamp of the file\u2019s last modification in YYYY-MM-DD hh-mm-ss.ms format.  </li> <li>build_fingerprint: Build identifier of the Android running at the time of the crash.  </li> <li>revision: Version of the file format.  </li> <li>arch: System architecture where the crash occurred.  </li> <li>timestamp: Timestamp when the crash occurred in YYYY-MM-DD hh-mm-ss.ms format.  </li> <li>process_uptime: Time in seconds that the crashed process had been running.  </li> <li>command_line: Command or process that caused the crash.  </li> <li>pid: Unique identifier of the process that caused the crash.  </li> <li>tid: Thread identifier where the crash occurred (may match the pid if it was the main thread).  </li> <li>process_name: Name of the crashed process.  </li> <li>binary_path: Path of the binary executed at the time of the crash.  </li> <li>selinux_label: SELinux context label u:r:domain:s0:category associated with the crashed process, composed of:  <ul> <li>u: SELinux user grouping processes under the same security rule space.  </li> <li>r: SELinux role connecting the user to domains. In Android\u2019s SELinux policy, the role is present for standard SELinux format compatibility.  </li> <li>domain: SELinux type or domain. This part of the context identifies the crashed process or service. The domains that may appear here come from the active SELinux policy on the device, where domains are defined in specific .te files for system services, user applications, HAL, or critical processes.  </li> <li>security level: Corresponds to the multi-level security or multi-category security component and includes only the base security level and sometimes additional categories that differentiate instances of crashed processes under the same domain. The simplest level is s0, present in most system processes. Additional categories may be included mainly for user applications.  </li> </ul> </li> <li>uid: User ID associated with the execution of the process.  </li> <li>signal_info: Signal sent from or to the system that caused the crash.  </li> <li>code: Specific code indicating how the signal was generated. Possible values:  <ul> <li>0 = SI_USER  </li> <li>128 = SI_KERNEL  </li> <li>-1 = SI_QUEUE  </li> <li>-2 = SI_TIMER  </li> <li>-3 = SI_MESGQ  </li> <li>-4 = SI_ASYNCIO  </li> <li>-5 = SI_SIGIO  </li> <li>-6 = SI_TKILL  </li> <li>-7 = SI_DETHREAD  </li> </ul> </li> <li>code_name: Signal associated with the code. Possible values:  <ul> <li>SI_USER: Signal sent manually from user space (i.e., by a program or the user). Usually does not indicate a system error, but the process was externally terminated by someone or another program.  </li> <li>SI_KERNEL: Signal generated directly by the kernel. Usually associated with severe memory or hardware failures detected at the lowest system level.  </li> <li>SI_QUEUE: Signal including additional information sent between processes. Used for advanced communication, e.g., in multithreaded programs or message queues. Not related to errors but for process coordination events.  </li> <li>SI_TIMER: Signal sent by the kernel when a timer expires. Timers control operation durations, sample thread states, or trigger automatic system tasks. May indicate a process was terminated due to a timer. Can include system watchdogs or memory sampling processes.  </li> <li>SI_MESGQ: Signal generated when a message arrives in a POSIX message queue (a communication mechanism in Unix-like systems). Used instead of pipes, sockets, or binders. Normally triggers when activity occurs in the queue, but can cause problems if sending and receiving are not synchronized.  </li> <li>SI_ASYNCIO: Signal sent by the kernel when an asynchronous I/O operation finishes. If no handler exists, the application may terminate unexpectedly.  </li> <li>SI_SIGIO: Signal related to file or socket I/O operations. Occurs when a file descriptor is set to notify events or an error happens on the descriptor.  </li> <li>SI_TKILL: Signal used to terminate a specific thread (not the whole process). Normally generated by the program, its runtime environment (e.g., Dalvik/ART), or internal libraries.  </li> <li>SI_DETHREAD: Internal signal used when threads are detached from a multithreaded process. Happens if the main thread dies or explicit termination of a thread group is requested.  </li> </ul> </li> <li>name: Signal name. Possible values:  <ul> <li>SIGILL: Invalid instruction execution.  </li> <li>SIGTRAP: Breakpoint triggered. Useful to identify debugging or interference with process flow.  </li> <li>SIGABRT: Forced termination by the process upon detecting a critical failure. May be related to induced errors.  </li> <li>SIGBUS: Invalid memory bus access.  </li> <li>SIGFPE: Arithmetic error like division by zero.  </li> <li>SIGSEGV: Illegal memory access, associated with buffer overflows.  </li> <li>SIGSTKFLT: Stack execution failure.  </li> <li>SIGSTOP: Complete pause of a process with no capture of process information.  </li> </ul> </li> <li>number: POSIX signal number that caused the crash. Possible values:  <ul> <li>4 = SIGILL  </li> <li>5 = SIGTRAP  </li> <li>6 = SIGABRT  </li> <li>7 = SIGBUS  </li> <li>8 = SIGFPE  </li> <li>11 = SIGSEGV  </li> <li>16 = SIGSTKFLT  </li> <li>19 = SIGSTOP  </li> </ul> </li> <li>cause: Textual string explaining the cause of the crash if explicitly recorded. May be empty or null.  </li> <li>extra: Reserved fields for additional data.  </li> </ul> <p>Why is this important?</p> <p>Tombstones allow us to identify critical application or process crashes, including essential details such as the signal that caused the crash, the involved process, the event timestamp, and the active line or command at the time of the crash.</p> <p>This is useful to detect processes, services, or applications that are failing or causing system crashes. In this way, it is possible to determine if the processes generating crashes are abnormal for the system, if the security and execution context shows unusual or unauthorized behavior, and if the signals indicate possible system exploitation or a crash caused by another process suggesting malicious behavior.</p> <p>File structure::</p> <pre><code>{\n        \"file_name\": \"tombstone_05\",\n        \"file_timestamp\": \"2025-01-01 00:00:00.000000\",\n        \"build_fingerprint\": \"phone/r8qxx/r8q:13/TP1A.220624.014/G780GXXSCEXI1:user/release-keys\",\n        \"revision\": 10,\n        \"arch\": \"arm64\",\n        \"timestamp\": \"2025-01-01 00:00:00.173266\",\n        \"process_uptime\": 1,\n        \"command_line\": [\n            \"lowi-server\"\n        ],\n        \"pid\": 17292,\n        \"tid\": 17293,\n        \"process_name\": \"lowi-server\",\n        \"binary_path\": \"lowi-server\",\n        \"selinux_label\": null,\n        \"uid\": 1021,\n        \"signal_info\": {\n            \"code\": -1,\n            \"code_name\": \"SI_QUEUE\",\n            \"name\": \"SIGABRT\",\n            \"number\": 6\n        },\n        \"cause\": null,\n        \"extra\": null\n    },\n</code></pre> <p>Learn more</p> <ul> <li>Debug native Android platform code </li> <li>Diagnose native crashes | Android Open Source Project </li> <li>Tombstone.cpp </li> <li>Android SEPolicy </li> <li>Public definition of domains p\u00fablicas de dominos </li> <li>Public definitions of domains vendor-HAL</li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#battery_daily.json","title":"battery_daily.json","text":"<p>The information in this file is generated by the battery_daily module and the dumpsys_battery_daily artifact.</p> <p>What is included in this file? </p> <p>This file is in json format and contains information about update records related to an application. This information is extracted from the batterystats service of dumpsys.</p> <p>The action in this file refers to an update event recorded by the batterystats service indicating the date range in which an application was updated and which version was recorded after the update.</p> <p>Why is this important?</p> <p>The battery_daily information allows identifying updates of applications installed on a device over the date range in which the version changed and recording the application version assigned after this update.</p> <p>This is useful to identify applications that have changed versions frequently and unusually. In this way, it is possible to determine if an update may relate to specific periods of time and dates that coincide with suspicious behaviors or activities on the device and that could be indicators of the presence of malware.</p> <p>File structure::</p> <pre><code>[\n    {\n        \"action\": \"update\",\n        \"from\": \"2025-01-16\",\n        \"to\": \"2025-01-17\",\n        \"package_name\": \"com.instagram.android\",\n        \"vers\": \"376704533\"\n    },\n    {\n        \"action\": \"update\",\n        \"from\": \"2025-01-14\",\n        \"to\": \"2025-01-15\",\n        \"package_name\": \"com.facebook.katana\",\n        \"vers\": \"458034716\"\n    }\n]\n</code></pre>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#battery_history.json","title":"battery_history.json","text":"<p>The information in this file is generated by the battery_history module and the dumpsys_battery_history artifact.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about event records related to an installed application and its service. This information is extracted from the batterystats service of dumpsys.</p> <p>An event is a record indicating an action performed by an application and the specific service that executed the change. The event represents the start or end of a scheduled action of an application on the device, the activation or deactivation of a method of an application that keeps a device awake, and the state changes of an application when moving from foreground to background.</p> <p>The information in the file is presented as follows:</p> <ul> <li>time_elapsed: Time elapsed since the start of the history recording until the event occurred, in milliseconds.  </li> <li>event: Action recorded as an application event, which can be:  </li> <li>start_job: Event indicating that an application started a scheduled job or task.  </li> <li>end_job: Event indicating that an application finished a scheduled job or task.  </li> <li>wake: Event indicating that an application activated a wake lock to prevent the device or processor from sleeping.  </li> <li>start_top: Event indicating that an application moved to the foreground and became visible to the user.  </li> <li>end_top: Event indicating that an application left the foreground and moved to the background.  </li> <li>uid: User identifier associated with the application.  </li> <li>package_name: Name of the package.  </li> <li>service: Full name of the service or specific component that executed the action.</li> </ul> <p>Why is this important?</p> <p>The battery_history information allows identifying events executed by applications installed on a device, such as the start or end of scheduled jobs, the transition of an application to foreground or background, or the activation of mechanisms to keep the device awake.</p> <p>File structure::</p> <pre><code>{\n    \"time_elapsed\": \"+493ms\",\n    \"event\": \"end_job\",\n    \"uid\": \"u0a234\",\n    \"package_name\": \"com.android.vending\",\n    \"service\": \"com.android.vending/com.google.android.finsky.scheduler.process.backgroundimpl.PhoneskyJobServiceBackground\"\n}\n</code></pre>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#platform_compact.json","title":"platform_compact.json","text":"<p>The information in this file is generated by the platform_compat module and the dumpsys_platform_compat artifact.</p> <p>What is included in this file?</p> <p>This file is in json format and contains information about packages_name records identified with changes of type DOWNSCALED. This information is extracted from the platform_compat service of dumpsys to identify uninstalled applications.</p> <p>The platform_compat service is a manager of compatibility configurations between applications and the internal changes of the Android system. If the Android version is incompatible with a function of an application, the platform_compat service can enable or disable that change in the system individually per application so that it remains active for the user or system.</p> <p>platform_compat is capable of identifying each of the changes and compatibility adjustments within the Android system through a ChangeId. It can also provide additional information about these changes through the name field, which refers to the descriptive name of the change, the overridable flag indicating whether the system can enable or disable functions for specific applications, and the rawOverrides list, which contains packages that have a customized adjustment for a change in the operating system.</p> <p>The generated file provides a list of packages identified by changeId 168419799 associated with the DOWNSCALED policy, and within this list, it identifies the rawOverrides section to find uninstalled applications.</p> <p>Why is this important? </p> <p>The platform_compat information allows identifying uninstalled applications, which helps determine if a malicious application was uninstalled prior to the analysis.</p> <p>File structure::</p> <pre><code>{\n        \"package_name\": \"com.example.app\"\n    },\n    {\n        \"package_name\": \"com.example.app\"\n    },\n    {\n        \"package_name\": \"com.example.app\"\n    },\n    {\n        \"package_name\": \"com.example.app\"\n    },\n    {\n        \"package_name\": \"com.example.app\"\n</code></pre> <p>Learn more</p> <ul> <li>\u00bfC\u00f3mo funciona la platform compat en Android? </li> <li>DOWNSCALED - Compatibility Framework changes (Android 13)</li> </ul>","tags":["explainer","intro"]},{"location":"references/02-reference-mvt-bugreport-dictionary/02-reference-mvt-bugreport-dictionary.html#comments","title":"Comments","text":"<p>Do you have any comment or suggestion about this resource? You can use the comment function provided below to leave your ideas, corrections or thoughts. Please make sure to follow our code of conduct when leaving your comment. If you prefer, you can also participate in the discussion directly in the github repository. </p>","tags":["explainer","intro"]},{"location":"tutorials/index.html","title":"Tutorials","text":"<p>In this section you will find Tutorials. According to Diataxis documentation framework tutorials are all about learning through guided practical exercises. In other words, it's learning by doing. Tutorials allow the reader to acquire skills and knowledge, and are focused on learning and not on completing a specific task. </p> <p>An example of a tutorial is a car driving lesson. Usually, in a good driving lesson students familiarize themselves with the vehicle, the controls, and learn as they go. The objective is not getting from going A to point B, instead is the skills you learn in the way. </p>","tags":["index","tutorials"]}]}